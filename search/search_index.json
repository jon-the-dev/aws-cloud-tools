{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"AWS Cloud Utilities v2","text":"<p>A unified command-line toolkit for AWS operations with enhanced functionality. This package consolidates various AWS management scripts into a single, powerful CLI tool.</p>"},{"location":"#features","title":"\u2728 Features","text":"<ul> <li>\ud83c\udfaf Unified CLI: Single command interface for all AWS operations</li> <li>\u26a1 Parallel Processing: Multi-threaded operations for improved performance  </li> <li>\ud83c\udfa8 Rich Output: Beautiful, formatted output with tables and colors</li> <li>\u2699\ufe0f Flexible Configuration: Support for AWS profiles, regions, and custom settings</li> <li>\ud83d\udcca Comprehensive Coverage: Tools for cost optimization, inventory, security, logs, and more</li> <li>\ud83d\udd12 Security First: Built-in security auditing and best practices</li> <li>\ud83d\udcc8 Cost Optimization: Advanced cost analysis and optimization tools</li> </ul>"},{"location":"#quick-start","title":"\ud83d\ude80 Quick Start","text":"<pre><code># Install from PyPI (when published)\npip install aws-cloud-utilities\n\n# Install from source\ngit clone https://github.com/jon-the-dev/aws-cloud-tools.git\ncd aws-cloud-tools/v2\npip install -e .\n</code></pre>"},{"location":"#basic-usage","title":"Basic Usage","text":"<pre><code># Get account information\naws-cloud-utilities account info\n\n# Scan all resources in your account\naws-cloud-utilities inventory scan --all-regions\n\n# Analyze EBS volumes for cost savings\naws-cloud-utilities costops ebs-optimization --all-regions\n\n# Collect spot pricing data\naws-cloud-utilities costops spot-pricing --all-regions\n\n# Download CloudWatch logs\naws-cloud-utilities logs download /aws/lambda/my-function\n\n# Get security metrics\naws-cloud-utilities security metrics\n</code></pre>"},{"location":"#command-structure","title":"\ud83c\udfd7\ufe0f Command Structure","text":"<p>The CLI follows a hierarchical structure similar to the AWS CLI:</p> <pre><code>aws-cloud-utilities [GLOBAL-OPTIONS] &lt;service&gt; &lt;operation&gt; [OPTIONS]\n</code></pre>"},{"location":"#available-services","title":"Available Services","text":"<p>Click on any service name to see full documentation for all subcommands.</p> Service Description Subcommands account Account information and management <code>info</code>, <code>contact-info</code>, <code>detect-control-tower</code>, <code>regions</code>, <code>service-regions</code>, <code>limits</code>, <code>validate</code> awsconfig AWS Config service operations <code>download</code>, <code>show-rules</code>, <code>list-rules</code>, <code>compliance-status</code>, <code>compliance-checker</code> bedrock Amazon Bedrock AI/ML operations <code>list-models</code>, <code>model-details</code>, <code>list-custom-models</code>, <code>list-model-jobs</code>, <code>regions</code> billing Billing and cost analysis <code>cur-list</code>, <code>cur-details</code>, <code>cur-create</code>, <code>cur-delete</code>, <code>cur-validate-bucket</code> cloudformation CloudFormation stack management <code>backup</code>, <code>list-stacks</code>, <code>stack-details</code> cloudfront CloudFront distribution management <code>update-logging</code>, <code>list-distributions</code>, <code>distribution-details</code>, <code>invalidate</code> costops Cost optimization and pricing tools <code>pricing</code>, <code>cost-analysis</code>, <code>ebs-optimization</code>, <code>usage-metrics</code>, <code>spot-pricing</code>, <code>spot-analysis</code> ecr Elastic Container Registry operations <code>copy-image</code>, <code>list-repositories</code>, <code>list-images</code>, <code>create-repository</code>, <code>delete-repository</code>, <code>get-login</code> iam IAM management and auditing <code>audit</code>, <code>list-roles</code>, <code>list-policies</code>, <code>role-details</code>, <code>policy-details</code> inventory Resource discovery and inventory <code>scan</code>, <code>workspaces</code>, <code>services</code>, <code>download-all</code> logs CloudWatch logs management <code>list-groups</code>, <code>download</code>, <code>set-retention</code>, <code>delete-group</code>, <code>combine</code>, <code>aggregate</code> networking Network utilities and analysis <code>ip-ranges</code>, <code>ip-summary</code> rds RDS database management <code>troubleshoot-mysql</code>, <code>list-instances</code> s3 S3 bucket operations <code>list-buckets</code>, <code>create-bucket</code>, <code>download</code>, <code>nuke-bucket</code>, <code>bucket-details</code>, <code>delete-versions</code>, <code>restore-objects</code> security Security auditing and tools <code>metrics</code>, <code>create-certificate</code>, <code>list-certificates</code> stepfunctions Step Functions workflow management <code>list</code>, <code>describe</code>, <code>execute</code>, <code>list-executions</code>, <code>logs</code> support AWS support tools <code>check-level</code>, <code>severity-levels</code>, <code>cases</code>, <code>services</code>, <code>cost-savings</code> waf Web Application Firewall management <code>list</code>, <code>stats</code>, <code>troubleshoot</code>"},{"location":"#global-options","title":"Global Options","text":"<ul> <li><code>--profile</code>: AWS profile to use</li> <li><code>--region</code>: AWS region</li> <li><code>--output</code>: Output format (json, yaml, table, csv)</li> <li><code>--verbose</code>: Enable verbose logging</li> <li><code>--debug</code>: Enable debug mode</li> </ul>"},{"location":"#key-improvements-from-v1","title":"\ud83c\udfaf Key Improvements from v1","text":""},{"location":"#enhanced-user-experience","title":"Enhanced User Experience","text":"<ul> <li>Rich Console Output: Beautiful tables, colors, and progress indicators</li> <li>Multiple Output Formats: JSON, YAML, table, and CSV support</li> <li>Better Error Handling: Clear error messages with actionable guidance</li> <li>Unified Interface: Single command instead of multiple scripts</li> </ul>"},{"location":"#performance-reliability","title":"Performance &amp; Reliability","text":"<ul> <li>Parallel Processing: Multi-threaded operations with configurable workers</li> <li>Graceful Degradation: Works with limited permissions</li> <li>Robust Error Handling: Proper exception handling and recovery</li> <li>Modern Python: Type hints, proper packaging, comprehensive testing</li> </ul>"},{"location":"#advanced-features","title":"Advanced Features","text":"<ul> <li>Configuration Management: Environment variables and config file support</li> <li>Flexible Authentication: Multiple AWS profile and region support</li> <li>Extensible Architecture: Plugin-ready design for future enhancements</li> <li>Comprehensive Testing: Unit tests, integration tests, and CI/CD</li> </ul>"},{"location":"#documentation","title":"\ud83d\udcda Documentation","text":"<ul> <li>Installation Guide - Get up and running quickly</li> <li>Configuration - Configure AWS profiles and settings</li> <li>Command Reference - Complete command documentation</li> <li>Examples - Real-world usage examples</li> <li>Migration Guide - Migrate from v1 scripts</li> </ul>"},{"location":"#contributing","title":"\ud83e\udd1d Contributing","text":"<p>We welcome contributions! Please see our Contributing Guide for details on:</p> <ul> <li>Setting up the development environment</li> <li>Running tests</li> <li>Code style guidelines</li> <li>Submitting pull requests</li> </ul>"},{"location":"#license","title":"\ud83d\udcc4 License","text":"<p>MIT License - see LICENSE file for details.</p>"},{"location":"#support","title":"\ud83c\udd98 Support","text":"<ul> <li>GitHub Issues - Bug reports and feature requests</li> <li>Documentation - Complete documentation</li> <li>Examples - Usage examples and tutorials</li> </ul> <p>AWS Cloud Utilities v2 - Making AWS management simple, powerful, and efficient.</p>"},{"location":"commands/","title":"Commands Overview","text":"<p>AWS Cloud Utilities v2 provides a comprehensive set of commands organized by AWS service and functionality. All commands follow a consistent pattern and support global options.</p>"},{"location":"commands/#command-structure","title":"Command Structure","text":"<pre><code>aws-cloud-utilities [GLOBAL-OPTIONS] &lt;service&gt; &lt;operation&gt; [OPTIONS]\n</code></pre>"},{"location":"commands/#global-options","title":"Global Options","text":"<p>These options work with all commands:</p> Option Description Default <code>--profile</code> AWS profile to use <code>default</code> <code>--region</code> AWS region <code>us-east-1</code> <code>--output</code> Output format (table, json, yaml, csv) <code>table</code> <code>--verbose</code> Enable verbose output <code>false</code> <code>--debug</code> Enable debug mode <code>false</code> <code>--config</code> Configuration file path <code>~/.aws-cloud-utilities.env</code>"},{"location":"commands/#available-services","title":"Available Services","text":"<p>All 18 command groups with their complete subcommand list. Click any service name to see full documentation with examples and options.</p>"},{"location":"commands/#core-services","title":"Core Services","text":"Service Description All Subcommands account Account information and management <code>info</code>, <code>contact-info</code>, <code>detect-control-tower</code>, <code>regions</code>, <code>service-regions</code>, <code>limits</code>, <code>validate</code> (7 commands) billing Billing and Cost &amp; Usage Reports <code>cur-list</code>, <code>cur-details</code>, <code>cur-create</code>, <code>cur-delete</code>, <code>cur-validate-bucket</code> (5 commands) inventory Resource discovery and inventory <code>scan</code>, <code>workspaces</code>, <code>services</code>, <code>download-all</code> (4 commands) security Security auditing and tools <code>metrics</code>, <code>create-certificate</code>, <code>list-certificates</code> (3 commands) costops Cost optimization and pricing <code>pricing</code>, <code>cost-analysis</code>, <code>ebs-optimization</code>, <code>usage-metrics</code>, <code>spot-pricing</code>, <code>spot-analysis</code> (6 commands)"},{"location":"commands/#aws-service-management","title":"AWS Service Management","text":"Service Description All Subcommands awsconfig AWS Config service operations <code>download</code>, <code>show-rules</code>, <code>list-rules</code>, <code>compliance-status</code>, <code>compliance-checker</code> (5 commands) bedrock Amazon Bedrock AI/ML operations <code>list-models</code>, <code>model-details</code>, <code>list-custom-models</code>, <code>list-model-jobs</code>, <code>regions</code> (5 commands) cloudformation CloudFormation stack management <code>backup</code>, <code>list-stacks</code>, <code>stack-details</code> (3 commands) cloudfront CloudFront distribution management <code>update-logging</code>, <code>list-distributions</code>, <code>distribution-details</code>, <code>invalidate</code> (4 commands) ecr Elastic Container Registry operations <code>copy-image</code>, <code>list-repositories</code>, <code>list-images</code>, <code>create-repository</code>, <code>delete-repository</code>, <code>get-login</code> (6 commands) iam IAM management and auditing <code>audit</code>, <code>list-roles</code>, <code>list-policies</code>, <code>role-details</code>, <code>policy-details</code> (5 commands) logs CloudWatch logs management <code>list-groups</code>, <code>download</code>, <code>set-retention</code>, <code>delete-group</code>, <code>combine</code>, <code>aggregate</code> (6 commands) networking Network utilities and analysis <code>ip-ranges</code>, <code>ip-summary</code> (2 commands) rds RDS database management <code>troubleshoot-mysql</code>, <code>list-instances</code> (2 commands) s3 S3 bucket operations <code>list-buckets</code>, <code>create-bucket</code>, <code>download</code>, <code>nuke-bucket</code>, <code>bucket-details</code>, <code>delete-versions</code>, <code>restore-objects</code> (7 commands) stepfunctions Step Functions workflow management <code>list</code>, <code>describe</code>, <code>execute</code>, <code>list-executions</code>, <code>logs</code> (5 commands) support AWS support tools <code>check-level</code>, <code>severity-levels</code>, <code>cases</code>, <code>services</code>, <code>cost-savings</code> (5 commands) waf Web Application Firewall management <code>list</code>, <code>stats</code>, <code>troubleshoot</code> (3 commands) <p>Total: 18 services, 80+ commands</p>"},{"location":"commands/#common-usage-patterns","title":"Common Usage Patterns","text":""},{"location":"commands/#getting-help","title":"Getting Help","text":"<pre><code># General help\naws-cloud-utilities --help\n\n# Service help\naws-cloud-utilities account --help\n\n# Command help\naws-cloud-utilities account info --help\n</code></pre>"},{"location":"commands/#output-formats","title":"Output Formats","text":"<pre><code># Default table format\naws-cloud-utilities account info\n\n# JSON output\naws-cloud-utilities account info --output json\n\n# YAML output\naws-cloud-utilities account info --output yaml\n\n# CSV output (for tabular data)\naws-cloud-utilities inventory resources --output csv\n</code></pre>"},{"location":"commands/#using-profiles-and-regions","title":"Using Profiles and Regions","text":"<pre><code># Specific profile\naws-cloud-utilities --profile production account info\n\n# Specific region\naws-cloud-utilities --region eu-west-1 inventory resources\n\n# Both profile and region\naws-cloud-utilities --profile staging --region us-west-2 security audit\n</code></pre>"},{"location":"commands/#verbose-and-debug-output","title":"Verbose and Debug Output","text":"<pre><code># Verbose output\naws-cloud-utilities --verbose account info\n\n# Debug mode\naws-cloud-utilities --debug security audit\n\n# Both verbose and debug\naws-cloud-utilities --verbose --debug logs aggregate --log-group /aws/lambda/my-function\n</code></pre>"},{"location":"commands/#quick-reference","title":"Quick Reference","text":""},{"location":"commands/#most-used-commands","title":"Most Used Commands","text":"<pre><code># Account information\naws-cloud-utilities account info\n\n# Resource inventory\naws-cloud-utilities inventory scan --all-regions\n\n# Security metrics\naws-cloud-utilities security metrics\n\n# Cost analysis\naws-cloud-utilities costops cost-analysis\n\n# Log management\naws-cloud-utilities logs list-groups\n</code></pre>"},{"location":"commands/#multi-region-operations","title":"Multi-Region Operations","text":"<pre><code># All regions\naws-cloud-utilities inventory scan --all-regions\n\n# Specific regions\naws-cloud-utilities inventory scan --regions us-east-1,us-west-2,eu-west-1\n\n# Region-specific analysis\naws-cloud-utilities --region us-east-1 security metrics\n</code></pre>"},{"location":"commands/#filtering-and-searching","title":"Filtering and Searching","text":"<pre><code># Filter by service\naws-cloud-utilities inventory scan --services ec2,s3,rds\n\n# Filter by tag\naws-cloud-utilities costops ebs-optimization --tag-key Environment --tag-value production\n\n# Download logs with filter\naws-cloud-utilities logs download /aws/lambda/my-function --filter-pattern \"ERROR\"\n</code></pre>"},{"location":"commands/#command-categories","title":"Command Categories","text":""},{"location":"commands/#information-gathering","title":"Information Gathering","text":"<ul> <li><code>account info</code> - Basic account information</li> <li><code>account contact-info</code> - Contact details</li> <li><code>inventory scan</code> - Resource inventory</li> <li><code>support check-level</code> - Support plan information</li> </ul>"},{"location":"commands/#security-compliance","title":"Security &amp; Compliance","text":"<ul> <li><code>security metrics</code> - Collect security metrics</li> <li><code>security create-certificate</code> - Create SSL/TLS certificates</li> <li><code>iam audit</code> - IAM audit and backup</li> <li><code>waf list</code> - List WAF Web ACLs</li> </ul>"},{"location":"commands/#cost-management","title":"Cost Management","text":"<ul> <li><code>costops pricing</code> - Service pricing information</li> <li><code>costops cost-analysis</code> - Cost analysis</li> <li><code>costops spot-analysis</code> - Spot instance savings</li> <li><code>billing cur-list</code> - Cost and Usage Reports</li> </ul>"},{"location":"commands/#operational-tasks","title":"Operational Tasks","text":"<ul> <li><code>logs aggregate</code> - Aggregate S3 logs</li> <li><code>logs download</code> - Download CloudWatch logs</li> <li><code>rds list-instances</code> - RDS management</li> <li><code>stepfunctions list</code> - List state machines</li> </ul>"},{"location":"commands/#troubleshooting","title":"Troubleshooting","text":"<ul> <li><code>logs download</code> - Download and analyze logs</li> <li><code>support cases</code> - Support case management</li> <li><code>rds troubleshoot-mysql</code> - Database troubleshooting</li> <li><code>waf troubleshoot</code> - WAF troubleshooting</li> </ul>"},{"location":"commands/#best-practices","title":"Best Practices","text":""},{"location":"commands/#1-use-profiles-for-different-environments","title":"1. Use Profiles for Different Environments","text":"<pre><code># Development\naws-cloud-utilities --profile dev account info\n\n# Production\naws-cloud-utilities --profile prod security audit\n</code></pre>"},{"location":"commands/#2-save-output-for-analysis","title":"2. Save Output for Analysis","text":"<pre><code># Save inventory for analysis\naws-cloud-utilities inventory scan --output-file inventory.json\n\n# Save IAM audit results\naws-cloud-utilities iam audit --output-dir ./iam-audit-$(date +%Y%m%d)\n</code></pre>"},{"location":"commands/#3-use-verbose-mode-for-troubleshooting","title":"3. Use Verbose Mode for Troubleshooting","text":"<pre><code># Debug connection issues\naws-cloud-utilities --verbose --debug account info\n\n# Understand what's happening\naws-cloud-utilities --verbose inventory scan --all-regions\n</code></pre>"},{"location":"commands/#4-combine-commands-for-workflows","title":"4. Combine Commands for Workflows","text":"<pre><code>#!/bin/bash\n# Daily security and compliance check\nTIMESTAMP=$(date +%Y%m%d)\n\n# Security metrics\naws-cloud-utilities security metrics --output json &gt; daily-security-${TIMESTAMP}.json\n\n# IAM audit\naws-cloud-utilities iam audit --output-dir ./iam-audit-${TIMESTAMP}\n\n# Resource inventory\naws-cloud-utilities inventory scan --all-regions --output-file inventory-${TIMESTAMP}.json\n\n# Cost analysis\naws-cloud-utilities costops cost-analysis --output-file costs-${TIMESTAMP}.json\n</code></pre>"},{"location":"commands/#error-handling","title":"Error Handling","text":"<p>All commands provide clear error messages and suggestions:</p> <pre><code># Permission errors show required permissions\naws-cloud-utilities security metrics\n\n# Configuration errors show how to fix\naws-cloud-utilities --profile nonexistent account info\n\n# Service errors provide context\naws-cloud-utilities logs download /nonexistent/group\n</code></pre>"},{"location":"commands/#next-steps","title":"Next Steps","text":"<ul> <li>Choose a service from the list above to explore specific commands</li> <li>See Examples for real-world usage patterns</li> <li>Check Configuration for setup options</li> </ul>"},{"location":"commands/account/","title":"Account Commands","text":"<p>Account information and management commands for AWS account details, regions, and configuration.</p>"},{"location":"commands/account/#commands","title":"Commands","text":""},{"location":"commands/account/#info","title":"<code>info</code>","text":"<p>Get comprehensive AWS account information.</p> <pre><code>aws-cloud-utilities account info\n</code></pre> <p>Output includes: - Account ID and ARN - Account alias - IAM summary (users, groups, roles, policies) - Service limits - Current caller identity</p> <p>Options: - <code>--output</code> - Output format (table, json, yaml, csv)</p> <p>Examples: <pre><code># Basic account info\naws-cloud-utilities account info\n\n# JSON output for scripting\naws-cloud-utilities account info --output json\n\n# With specific profile\naws-cloud-utilities --profile production account info\n</code></pre></p>"},{"location":"commands/account/#contact-info","title":"<code>contact-info</code>","text":"<p>Get AWS account contact information.</p> <pre><code>aws-cloud-utilities account contact-info\n</code></pre> <p>Output includes: - Billing contact information - Operations contact information - Security contact information</p> <p>Examples: <pre><code># Get contact information\naws-cloud-utilities account contact-info\n\n# Export to YAML\naws-cloud-utilities account contact-info --output yaml\n</code></pre></p>"},{"location":"commands/account/#regions","title":"<code>regions</code>","text":"<p>List all available AWS regions.</p> <pre><code>aws-cloud-utilities account regions\n</code></pre> <p>Examples: <pre><code># List all available AWS regions\naws-cloud-utilities account regions\n\n# JSON output\naws-cloud-utilities account regions --output json\n</code></pre></p>"},{"location":"commands/account/#service-regions","title":"<code>service-regions</code>","text":"<p>List available regions for a specific AWS service.</p> <pre><code>aws-cloud-utilities account service-regions [OPTIONS]\n</code></pre> <p>Options: - <code>--service SERVICE</code> - AWS service to check regions for (default: ec2)</p> <p>Examples: <pre><code># Regions where Lambda is available\naws-cloud-utilities account service-regions --service lambda\n\n# Regions where RDS is available\naws-cloud-utilities account service-regions --service rds\n\n# EC2 regions (default)\naws-cloud-utilities account service-regions\n</code></pre></p>"},{"location":"commands/account/#detect-control-tower","title":"<code>detect-control-tower</code>","text":"<p>Detect AWS Control Tower or Landing Zone deployment.</p> <pre><code>aws-cloud-utilities account detect-control-tower\n</code></pre> <p>Features: - Parallel region scanning - Detects Control Tower resources - Identifies Landing Zone components - Shows organizational structure</p> <p>Options: - <code>--verbose</code> - Show detailed scanning progress - <code>--all-regions</code> - Scan all regions (default: enabled regions only)</p> <p>Examples: <pre><code># Basic detection\naws-cloud-utilities account detect-control-tower\n\n# Verbose output with progress\naws-cloud-utilities --verbose account detect-control-tower\n\n# Scan all regions\naws-cloud-utilities account detect-control-tower --all-regions\n</code></pre></p>"},{"location":"commands/account/#limits","title":"<code>limits</code>","text":"<p>Show AWS service limits and current usage.</p> <pre><code>aws-cloud-utilities account limits\n</code></pre> <p>Options: - <code>--service SERVICE</code> - Show limits for specific service - <code>--region REGION</code> - Show limits for specific region</p> <p>Examples: <pre><code># All service limits\naws-cloud-utilities account limits\n\n# EC2 limits only\naws-cloud-utilities account limits --service ec2\n\n# Limits in specific region\naws-cloud-utilities account limits --region us-west-2\n</code></pre></p>"},{"location":"commands/account/#validate","title":"<code>validate</code>","text":"<p>Validate AWS account configuration and permissions.</p> <pre><code>aws-cloud-utilities account validate\n</code></pre> <p>Checks: - AWS credentials validity - Basic permissions - Service availability - Region accessibility</p> <p>Examples: <pre><code># Validate current configuration\naws-cloud-utilities account validate\n\n# Validate specific profile\naws-cloud-utilities --profile staging account validate\n</code></pre></p>"},{"location":"commands/account/#global-options","title":"Global Options","text":"<p>All account commands support these global options:</p> <ul> <li><code>--profile PROFILE</code> - AWS profile to use</li> <li><code>--region REGION</code> - AWS region</li> <li><code>--output FORMAT</code> - Output format (table, json, yaml, csv)</li> <li><code>--verbose</code> - Enable verbose output</li> <li><code>--debug</code> - Enable debug mode</li> </ul>"},{"location":"commands/account/#examples","title":"Examples","text":""},{"location":"commands/account/#daily-account-check","title":"Daily Account Check","text":"<pre><code>#!/bin/bash\n# Daily account status check\necho \"=== Account Information ===\"\naws-cloud-utilities account info\n\necho \"=== Control Tower Status ===\"\naws-cloud-utilities account detect-control-tower\n\necho \"=== Service Limits ===\"\naws-cloud-utilities account limits --service ec2\n</code></pre>"},{"location":"commands/account/#multi-profile-account-summary","title":"Multi-Profile Account Summary","text":"<pre><code>#!/bin/bash\nfor profile in dev staging prod; do\n    echo \"=== $profile Account ===\"\n    aws-cloud-utilities --profile $profile account info --output json &gt; ${profile}-account.json\ndone\n</code></pre>"},{"location":"commands/account/#common-use-cases","title":"Common Use Cases","text":"<ol> <li> <p>Account Setup Verification <pre><code>aws-cloud-utilities account info\naws-cloud-utilities account contact-info\naws-cloud-utilities account validate\n</code></pre></p> </li> <li> <p>Control Tower Assessment <pre><code>aws-cloud-utilities account detect-control-tower --verbose\n</code></pre></p> </li> <li> <p>Service Limit Monitoring <pre><code>aws-cloud-utilities account limits --service ec2 --output json\n</code></pre></p> </li> <li> <p>Multi-Region Analysis <pre><code>aws-cloud-utilities account regions --service lambda\n</code></pre></p> </li> </ol>"},{"location":"commands/awsconfig/","title":"AWS Config Commands","text":"<p>AWS Config service operations for compliance monitoring, configuration management, and rule evaluation.</p>"},{"location":"commands/awsconfig/#commands","title":"Commands","text":""},{"location":"commands/awsconfig/#download","title":"<code>download</code>","text":"<p>Download AWS Config configuration snapshots and history.</p> <pre><code>aws-cloud-utilities awsconfig download\n</code></pre> <p>Options: - <code>--region REGION</code> - AWS region to download from (default: all regions) - <code>--output-dir DIR</code> - Directory to save downloaded files (default: ./config-download) - <code>--resource-type TYPE</code> - Filter by specific resource type - <code>--start-time TIME</code> - Start time for configuration history (ISO format) - <code>--end-time TIME</code> - End time for configuration history (ISO format) - <code>--include-snapshots</code> - Include configuration snapshots - <code>--include-history</code> - Include configuration history</p> <p>Examples: <pre><code># Download all Config data\naws-cloud-utilities awsconfig download\n\n# Download from specific region\naws-cloud-utilities awsconfig download --region us-east-1\n\n# Download specific resource type\naws-cloud-utilities awsconfig download --resource-type AWS::EC2::Instance\n\n# Download with time range\naws-cloud-utilities awsconfig download --start-time 2024-01-01T00:00:00Z --end-time 2024-01-31T23:59:59Z\n</code></pre></p>"},{"location":"commands/awsconfig/#show-rules","title":"<code>show-rules</code>","text":"<p>Display detailed information about AWS Config rules.</p> <pre><code>aws-cloud-utilities awsconfig show-rules\n</code></pre> <p>Options: - <code>--region REGION</code> - AWS region to query (default: all regions) - <code>--rule-name NAME</code> - Show specific rule details - <code>--compliance-status STATUS</code> - Filter by compliance status (COMPLIANT, NON_COMPLIANT, NOT_APPLICABLE) - <code>--output-file FILE</code> - Save results to file</p> <p>Examples: <pre><code># Show all rules\naws-cloud-utilities awsconfig show-rules\n\n# Show specific rule\naws-cloud-utilities awsconfig show-rules --rule-name s3-bucket-public-access-prohibited\n\n# Filter by compliance status\naws-cloud-utilities awsconfig show-rules --compliance-status NON_COMPLIANT\n\n# Save to file\naws-cloud-utilities awsconfig show-rules --output-file config-rules.json\n</code></pre></p>"},{"location":"commands/awsconfig/#list-rules","title":"<code>list-rules</code>","text":"<p>List AWS Config rules with summary information.</p> <pre><code>aws-cloud-utilities awsconfig list-rules\n</code></pre> <p>Options: - <code>--region REGION</code> - AWS region to query (default: all regions) - <code>--rule-type TYPE</code> - Filter by rule type (AWS_MANAGED, CUSTOM_LAMBDA, CUSTOM_POLICY) - <code>--compliance-status STATUS</code> - Filter by compliance status - <code>--output-file FILE</code> - Save results to file</p> <p>Examples: <pre><code># List all rules\naws-cloud-utilities awsconfig list-rules\n\n# List only AWS managed rules\naws-cloud-utilities awsconfig list-rules --rule-type AWS_MANAGED\n\n# List non-compliant rules\naws-cloud-utilities awsconfig list-rules --compliance-status NON_COMPLIANT\n</code></pre></p>"},{"location":"commands/awsconfig/#compliance-status","title":"<code>compliance-status</code>","text":"<p>Get compliance status for resources and rules.</p> <pre><code>aws-cloud-utilities awsconfig compliance-status\n</code></pre> <p>Options: - <code>--region REGION</code> - AWS region to query (default: all regions) - <code>--resource-type TYPE</code> - Filter by resource type - <code>--resource-id ID</code> - Check specific resource - <code>--rule-name NAME</code> - Check specific rule - <code>--output-file FILE</code> - Save results to file</p> <p>Examples: <pre><code># Get overall compliance status\naws-cloud-utilities awsconfig compliance-status\n\n# Check specific resource type\naws-cloud-utilities awsconfig compliance-status --resource-type AWS::S3::Bucket\n\n# Check specific resource\naws-cloud-utilities awsconfig compliance-status --resource-id my-bucket-name\n\n# Check specific rule\naws-cloud-utilities awsconfig compliance-status --rule-name s3-bucket-ssl-requests-only\n</code></pre></p>"},{"location":"commands/awsconfig/#compliance-checker","title":"<code>compliance-checker</code>","text":"<p>Run comprehensive compliance checks across your AWS environment.</p> <pre><code>aws-cloud-utilities awsconfig compliance-checker\n</code></pre> <p>Options: - <code>--region REGION</code> - AWS region to check (default: all regions) - <code>--framework FRAMEWORK</code> - Check against specific compliance framework - <code>--severity LEVEL</code> - Filter by severity level (HIGH, MEDIUM, LOW) - <code>--output-file FILE</code> - Save results to file - <code>--detailed</code> - Include detailed findings and remediation guidance</p> <p>Examples: <pre><code># Run comprehensive compliance check\naws-cloud-utilities awsconfig compliance-checker\n\n# Check specific framework\naws-cloud-utilities awsconfig compliance-checker --framework CIS\n\n# High severity issues only\naws-cloud-utilities awsconfig compliance-checker --severity HIGH\n\n# Detailed report with remediation\naws-cloud-utilities awsconfig compliance-checker --detailed --output-file compliance-report.json\n</code></pre></p>"},{"location":"commands/awsconfig/#global-options","title":"Global Options","text":"<p>All AWS Config commands support these global options:</p> <ul> <li><code>--profile PROFILE</code> - AWS profile to use</li> <li><code>--region REGION</code> - AWS region</li> <li><code>--output FORMAT</code> - Output format (table, json, yaml, csv)</li> <li><code>--verbose</code> - Enable verbose output</li> <li><code>--debug</code> - Enable debug mode</li> </ul>"},{"location":"commands/awsconfig/#examples","title":"Examples","text":""},{"location":"commands/awsconfig/#compliance-monitoring-workflow","title":"Compliance Monitoring Workflow","text":"<pre><code>#!/bin/bash\n# Daily compliance monitoring\n\necho \"=== Config Rules Status ===\"\naws-cloud-utilities awsconfig list-rules --compliance-status NON_COMPLIANT\n\necho \"=== Detailed Rule Analysis ===\"\naws-cloud-utilities awsconfig show-rules --compliance-status NON_COMPLIANT --output-file non-compliant-rules.json\n\necho \"=== Compliance Check ===\"\naws-cloud-utilities awsconfig compliance-checker --severity HIGH --output-file compliance-issues.json\n</code></pre>"},{"location":"commands/awsconfig/#configuration-audit","title":"Configuration Audit","text":"<pre><code>#!/bin/bash\n# Comprehensive configuration audit\n\nAUDIT_DIR=\"./config-audit-$(date +%Y%m%d)\"\nmkdir -p $AUDIT_DIR\n\necho \"=== Downloading Configuration Data ===\"\naws-cloud-utilities awsconfig download --output-dir $AUDIT_DIR --include-snapshots --include-history\n\necho \"=== Rules Analysis ===\"\naws-cloud-utilities awsconfig show-rules --output-file $AUDIT_DIR/rules-analysis.json\n\necho \"=== Compliance Status ===\"\naws-cloud-utilities awsconfig compliance-status --output-file $AUDIT_DIR/compliance-status.json\n\necho \"=== Audit Complete ===\"\necho \"Audit data saved to: $AUDIT_DIR\"\n</code></pre>"},{"location":"commands/awsconfig/#resource-specific-compliance-check","title":"Resource-Specific Compliance Check","text":"<pre><code>#!/bin/bash\n# Check compliance for specific resource types\n\nRESOURCE_TYPES=(\"AWS::S3::Bucket\" \"AWS::EC2::Instance\" \"AWS::RDS::DBInstance\" \"AWS::IAM::Role\")\n\nfor resource_type in \"${RESOURCE_TYPES[@]}\"; do\n    echo \"=== Checking $resource_type ===\"\n    aws-cloud-utilities awsconfig compliance-status --resource-type $resource_type --output-file ${resource_type//::/-}-compliance.json\ndone\n</code></pre>"},{"location":"commands/awsconfig/#common-use-cases","title":"Common Use Cases","text":"<ol> <li> <p>Daily Compliance Monitoring <pre><code>aws-cloud-utilities awsconfig list-rules --compliance-status NON_COMPLIANT\naws-cloud-utilities awsconfig compliance-checker --severity HIGH\n</code></pre></p> </li> <li> <p>Configuration Backup <pre><code>aws-cloud-utilities awsconfig download --include-snapshots --include-history\n</code></pre></p> </li> <li> <p>Rule Management <pre><code>aws-cloud-utilities awsconfig show-rules --rule-name my-custom-rule\naws-cloud-utilities awsconfig compliance-status --rule-name my-custom-rule\n</code></pre></p> </li> <li> <p>Resource Compliance Analysis <pre><code>aws-cloud-utilities awsconfig compliance-status --resource-type AWS::S3::Bucket\naws-cloud-utilities awsconfig compliance-status --resource-id my-specific-resource\n</code></pre></p> </li> </ol>"},{"location":"commands/awsconfig/#integration-with-other-tools","title":"Integration with Other Tools","text":"<p>AWS Config commands work well with other AWS Cloud Utilities commands:</p> <pre><code># Combine with security audit\naws-cloud-utilities security blue-team-audit\naws-cloud-utilities awsconfig compliance-checker --detailed\n\n# Combine with inventory\naws-cloud-utilities inventory resources --resource-type s3\naws-cloud-utilities awsconfig compliance-status --resource-type AWS::S3::Bucket\n</code></pre>"},{"location":"commands/awsconfig/#best-practices","title":"Best Practices","text":"<ul> <li>Run compliance checks regularly as part of your security monitoring</li> <li>Use <code>--detailed</code> flag for comprehensive remediation guidance</li> <li>Combine Config data with other security tools for complete visibility</li> <li>Set up automated compliance monitoring using the JSON output</li> <li>Filter by severity to focus on critical issues first</li> </ul>"},{"location":"commands/bedrock/","title":"Bedrock Commands","text":"<p>Amazon Bedrock management commands for foundation models, custom models, and AI/ML operations.</p>"},{"location":"commands/bedrock/#commands","title":"Commands","text":""},{"location":"commands/bedrock/#list-models","title":"<code>list-models</code>","text":"<p>List Amazon Bedrock foundation models across regions.</p> <pre><code>aws-cloud-utilities bedrock list-models\n</code></pre> <p>Options: - <code>--region REGION</code> - Specific region to list models from (default: all regions) - <code>--output-file FILE</code> - Save results to file (supports .json, .csv, .yaml) - <code>--model-type TYPE</code> - Type of models to list (foundation, custom, all) [default: foundation] - <code>--provider PROVIDER</code> - Filter by model provider (e.g., amazon, anthropic, ai21, cohere)</p> <p>Examples: <pre><code># List all foundation models\naws-cloud-utilities bedrock list-models\n\n# List models from specific region\naws-cloud-utilities bedrock list-models --region us-east-1\n\n# Filter by provider\naws-cloud-utilities bedrock list-models --provider anthropic\n\n# Save to file\naws-cloud-utilities bedrock list-models --output-file bedrock-models.json\n</code></pre></p>"},{"location":"commands/bedrock/#model-details","title":"<code>model-details</code>","text":"<p>Get detailed information about a specific Bedrock model.</p> <pre><code>aws-cloud-utilities bedrock model-details MODEL_ID\n</code></pre> <p>Arguments: - <code>MODEL_ID</code> - The model identifier to get details for</p> <p>Options: - <code>--region REGION</code> - AWS region to query (default: current region) - <code>--output-file FILE</code> - Save results to file</p> <p>Examples: <pre><code># Get model details\naws-cloud-utilities bedrock model-details anthropic.claude-v2\n\n# Save details to file\naws-cloud-utilities bedrock model-details anthropic.claude-v2 --output-file claude-details.json\n</code></pre></p>"},{"location":"commands/bedrock/#list-custom-models","title":"<code>list-custom-models</code>","text":"<p>List custom models in your account.</p> <pre><code>aws-cloud-utilities bedrock list-custom-models\n</code></pre> <p>Options: - <code>--region REGION</code> - Specific region to list models from (default: all regions) - <code>--output-file FILE</code> - Save results to file</p> <p>Examples: <pre><code># List all custom models\naws-cloud-utilities bedrock list-custom-models\n\n# List custom models in specific region\naws-cloud-utilities bedrock list-custom-models --region us-west-2\n</code></pre></p>"},{"location":"commands/bedrock/#list-model-jobs","title":"<code>list-model-jobs</code>","text":"<p>List model customization jobs.</p> <pre><code>aws-cloud-utilities bedrock list-model-jobs\n</code></pre> <p>Options: - <code>--region REGION</code> - Specific region to list jobs from (default: all regions) - <code>--status STATUS</code> - Filter by job status (InProgress, Completed, Failed, Stopping, Stopped) - <code>--output-file FILE</code> - Save results to file</p> <p>Examples: <pre><code># List all model jobs\naws-cloud-utilities bedrock list-model-jobs\n\n# List only completed jobs\naws-cloud-utilities bedrock list-model-jobs --status Completed\n</code></pre></p>"},{"location":"commands/bedrock/#regions","title":"<code>regions</code>","text":"<p>List AWS regions where Bedrock is available.</p> <pre><code>aws-cloud-utilities bedrock regions\n</code></pre> <p>Examples: <pre><code># List Bedrock regions\naws-cloud-utilities bedrock regions\n</code></pre></p>"},{"location":"commands/bedrock/#global-options","title":"Global Options","text":"<p>All bedrock commands support these global options:</p> <ul> <li><code>--profile PROFILE</code> - AWS profile to use</li> <li><code>--region REGION</code> - AWS region</li> <li><code>--output FORMAT</code> - Output format (table, json, yaml, csv)</li> <li><code>--verbose</code> - Enable verbose output</li> <li><code>--debug</code> - Enable debug mode</li> </ul>"},{"location":"commands/bedrock/#examples","title":"Examples","text":""},{"location":"commands/bedrock/#model-discovery-workflow","title":"Model Discovery Workflow","text":"<pre><code>#!/bin/bash\n# Discover available Bedrock models\n\necho \"=== Available Regions ===\"\naws-cloud-utilities bedrock regions\n\necho \"=== Foundation Models ===\"\naws-cloud-utilities bedrock list-models --output-file foundation-models.json\n\necho \"=== Custom Models ===\"\naws-cloud-utilities bedrock list-custom-models --output-file custom-models.json\n\necho \"=== Model Jobs ===\"\naws-cloud-utilities bedrock list-model-jobs --output-file model-jobs.json\n</code></pre>"},{"location":"commands/bedrock/#provider-specific-analysis","title":"Provider-Specific Analysis","text":"<pre><code>#!/bin/bash\n# Analyze models by provider\n\nfor provider in amazon anthropic ai21 cohere; do\n    echo \"=== $provider Models ===\"\n    aws-cloud-utilities bedrock list-models --provider $provider --output-file ${provider}-models.json\ndone\n</code></pre>"},{"location":"commands/bedrock/#common-use-cases","title":"Common Use Cases","text":"<ol> <li> <p>Model Discovery <pre><code>aws-cloud-utilities bedrock list-models --provider anthropic\naws-cloud-utilities bedrock model-details anthropic.claude-v2\n</code></pre></p> </li> <li> <p>Custom Model Management <pre><code>aws-cloud-utilities bedrock list-custom-models\naws-cloud-utilities bedrock list-model-jobs --status InProgress\n</code></pre></p> </li> <li> <p>Regional Analysis <pre><code>aws-cloud-utilities bedrock regions\naws-cloud-utilities bedrock list-models --region us-east-1\n</code></pre></p> </li> <li> <p>Comprehensive Audit <pre><code>aws-cloud-utilities bedrock list-models --output-file all-models.json\naws-cloud-utilities bedrock list-custom-models --output-file custom-models.json\naws-cloud-utilities bedrock list-model-jobs --output-file model-jobs.json\n</code></pre></p> </li> </ol>"},{"location":"commands/billing/","title":"Billing Commands","text":"<p>The billing commands provide management capabilities for AWS billing and Cost and Usage Reports (CUR).</p>"},{"location":"commands/billing/#overview","title":"Overview","text":"<p>Cost and Usage Reports (CUR) provide detailed information about your AWS costs and usage. These commands help you manage CUR 2.0 reports, which provide enhanced capabilities for cost analysis and optimization.</p>"},{"location":"commands/billing/#available-commands","title":"Available Commands","text":""},{"location":"commands/billing/#cur-list","title":"cur-list","text":"<p>List all existing Cost and Usage Reports in your AWS account.</p> <pre><code>aws-cloud-utilities billing cur-list [OPTIONS]\n</code></pre> <p>Options: - <code>--output-file</code>: Output file for CUR reports list (supports .json, .yaml, .csv)</p> <p>Examples: <pre><code># List all CUR reports\naws-cloud-utilities billing cur-list\n\n# Export list to JSON file\naws-cloud-utilities billing cur-list --output-file cur-reports.json\n</code></pre></p>"},{"location":"commands/billing/#cur-details","title":"cur-details","text":"<p>Show detailed configuration for a specific CUR report.</p> <pre><code>aws-cloud-utilities billing cur-details REPORT_NAME [OPTIONS]\n</code></pre> <p>Arguments: - <code>REPORT_NAME</code>: Name of the CUR report to show details for</p> <p>Options: - <code>--output-file</code>: Output file for CUR report details (supports .json, .yaml)</p> <p>Examples: <pre><code># Show details for a specific report\naws-cloud-utilities billing cur-details my-cur-report\n\n# Export details to file\naws-cloud-utilities billing cur-details my-cur-report --output-file report-details.json\n</code></pre></p>"},{"location":"commands/billing/#cur-create","title":"cur-create","text":"<p>Create a new Cost and Usage Report (CUR 2.0).</p> <pre><code>aws-cloud-utilities billing cur-create [OPTIONS]\n</code></pre> <p>Required Options: - <code>--report-name</code>: Name for the new CUR report - <code>--bucket</code>: S3 bucket name for CUR delivery</p> <p>Optional Options: - <code>--prefix</code>: S3 prefix for CUR files (default: cur-reports) - <code>--format</code>: Report format - textORcsv or Parquet (default: textORcsv) - <code>--compression</code>: Compression type - GZIP, ZIP, or Parquet (default: GZIP) - <code>--schema-elements</code>: Additional schema elements (default: RESOURCES)</p> <p>Examples: <pre><code># Create a basic CUR report\naws-cloud-utilities billing cur-create \\\n  --report-name my-cur-report \\\n  --bucket my-cur-bucket\n\n# Create CUR report with custom settings\naws-cloud-utilities billing cur-create \\\n  --report-name detailed-cur-report \\\n  --bucket my-cur-bucket \\\n  --prefix billing/cur-data \\\n  --format Parquet \\\n  --compression Parquet \\\n  --schema-elements RESOURCES\n</code></pre></p>"},{"location":"commands/billing/#cur-delete","title":"cur-delete","text":"<p>Delete a Cost and Usage Report.</p> <pre><code>aws-cloud-utilities billing cur-delete REPORT_NAME [OPTIONS]\n</code></pre> <p>Arguments: - <code>REPORT_NAME</code>: Name of the CUR report to delete</p> <p>Options: - <code>--confirm</code>: Skip confirmation prompt</p> <p>Examples: <pre><code># Delete a CUR report (with confirmation)\naws-cloud-utilities billing cur-delete my-cur-report\n\n# Delete without confirmation prompt\naws-cloud-utilities billing cur-delete my-cur-report --confirm\n</code></pre></p>"},{"location":"commands/billing/#cur-validate-bucket","title":"cur-validate-bucket","text":"<p>Validate S3 bucket permissions for CUR delivery.</p> <pre><code>aws-cloud-utilities billing cur-validate-bucket BUCKET_NAME [OPTIONS]\n</code></pre> <p>Arguments: - <code>BUCKET_NAME</code>: S3 bucket name to validate</p> <p>Options: - <code>--prefix</code>: S3 prefix for CUR files (optional)</p> <p>Examples: <pre><code># Validate bucket permissions\naws-cloud-utilities billing cur-validate-bucket my-cur-bucket\n\n# Validate with specific prefix\naws-cloud-utilities billing cur-validate-bucket my-cur-bucket --prefix cur-data\n</code></pre></p>"},{"location":"commands/billing/#cost-and-usage-reports-cur-overview","title":"Cost and Usage Reports (CUR) Overview","text":""},{"location":"commands/billing/#what-are-cost-and-usage-reports","title":"What are Cost and Usage Reports?","text":"<p>Cost and Usage Reports (CUR) provide the most comprehensive set of AWS cost and usage data available. These reports include additional metadata about AWS services, pricing, and reservations that can help you better understand your costs.</p>"},{"location":"commands/billing/#cur-20-features","title":"CUR 2.0 Features","text":"<ul> <li>Hourly granularity: Get detailed cost information at hourly intervals</li> <li>Resource-level data: Track costs down to individual resources</li> <li>Multiple output formats: Support for CSV and Parquet formats</li> <li>Integration ready: Works with Amazon Athena, Amazon Redshift, and Amazon QuickSight</li> <li>Automated delivery: Reports are automatically delivered to your S3 bucket</li> </ul>"},{"location":"commands/billing/#s3-bucket-requirements","title":"S3 Bucket Requirements","text":"<p>To create a CUR report, you need an S3 bucket with proper permissions. The bucket policy must allow the AWS billing service to:</p> <ol> <li>Get bucket ACL and policy</li> <li>Put objects in the specified bucket and prefix</li> </ol> <p>The <code>cur-create</code> command will automatically configure the required bucket policy if it doesn't exist.</p>"},{"location":"commands/billing/#report-schema-elements","title":"Report Schema Elements","text":"<ul> <li>RESOURCES: Include resource IDs for each line item (recommended)</li> <li>Additional schema elements can be specified during report creation</li> </ul>"},{"location":"commands/billing/#cost-analysis-workflow","title":"Cost Analysis Workflow","text":"<ol> <li>Create CUR report: Use <code>cur-create</code> to set up automated cost reporting</li> <li>Validate setup: Use <code>cur-validate-bucket</code> to ensure proper permissions</li> <li>Monitor reports: Use <code>cur-list</code> to track available reports</li> <li>Analyze data: Reports are delivered to S3 within 24 hours and can be analyzed using:</li> <li>Amazon Athena for SQL queries</li> <li>Amazon QuickSight for visualization</li> <li>Custom analytics tools</li> </ol>"},{"location":"commands/billing/#prerequisites","title":"Prerequisites","text":"<ul> <li>AWS CLI configured with appropriate credentials</li> <li>IAM permissions for:</li> <li><code>cur:DescribeReportDefinitions</code></li> <li><code>cur:PutReportDefinition</code></li> <li><code>cur:DeleteReportDefinition</code></li> <li><code>s3:GetBucketAcl</code></li> <li><code>s3:GetBucketPolicy</code></li> <li><code>s3:PutBucketPolicy</code></li> <li><code>s3:PutObject</code> (for the target S3 bucket)</li> </ul>"},{"location":"commands/billing/#notes","title":"Notes","text":"<ul> <li>CUR API is only available in the us-east-1 region</li> <li>Reports are generated within 24 hours of creation</li> <li>Historical data is not included in new reports</li> <li>Reports can be quite large; consider using compression and appropriate S3 storage classes</li> </ul>"},{"location":"commands/cloudformation/","title":"CloudFormation Commands","text":"<p>CloudFormation stack management commands for infrastructure as code operations.</p>"},{"location":"commands/cloudformation/#commands","title":"Commands","text":""},{"location":"commands/cloudformation/#backup","title":"<code>backup</code>","text":"<p>Backup CloudFormation stacks by downloading templates and parameters.</p> <pre><code>aws-cloud-utilities cloudformation backup\n</code></pre> <p>Options: - <code>--region REGION</code> - AWS region to backup from (default: all regions) - <code>--stack-name NAME</code> - Backup specific stack (default: all stacks) - <code>--output-dir DIR</code> - Directory to save backup files (default: ./cf-backup) - <code>--include-parameters</code> - Include stack parameters in backup - <code>--include-outputs</code> - Include stack outputs in backup - <code>--include-resources</code> - Include resource details in backup</p> <p>Examples: <pre><code># Backup all stacks\naws-cloud-utilities cloudformation backup\n\n# Backup specific stack\naws-cloud-utilities cloudformation backup --stack-name my-application-stack\n\n# Backup from specific region\naws-cloud-utilities cloudformation backup --region us-east-1\n\n# Comprehensive backup with all details\naws-cloud-utilities cloudformation backup --include-parameters --include-outputs --include-resources\n</code></pre></p>"},{"location":"commands/cloudformation/#list-stacks","title":"<code>list-stacks</code>","text":"<p>List CloudFormation stacks with status and details.</p> <pre><code>aws-cloud-utilities cloudformation list-stacks\n</code></pre> <p>Options: - <code>--region REGION</code> - AWS region to query (default: all regions) - <code>--status STATUS</code> - Filter by stack status (CREATE_COMPLETE, UPDATE_COMPLETE, DELETE_COMPLETE, etc.) - <code>--include-deleted</code> - Include deleted stacks in results - <code>--output-file FILE</code> - Save results to file</p> <p>Examples: <pre><code># List all active stacks\naws-cloud-utilities cloudformation list-stacks\n\n# List stacks in specific region\naws-cloud-utilities cloudformation list-stacks --region us-west-2\n\n# Filter by status\naws-cloud-utilities cloudformation list-stacks --status CREATE_COMPLETE\n\n# Include deleted stacks\naws-cloud-utilities cloudformation list-stacks --include-deleted\n\n# Save to file\naws-cloud-utilities cloudformation list-stacks --output-file stacks.json\n</code></pre></p>"},{"location":"commands/cloudformation/#stack-details","title":"<code>stack-details</code>","text":"<p>Get comprehensive details about a specific CloudFormation stack.</p> <pre><code>aws-cloud-utilities cloudformation stack-details STACK_NAME\n</code></pre> <p>Arguments: - <code>STACK_NAME</code> - Name or ARN of the stack to analyze</p> <p>Options: - <code>--region REGION</code> - AWS region where the stack exists - <code>--include-template</code> - Include the stack template in output - <code>--include-events</code> - Include stack events in output - <code>--include-resources</code> - Include detailed resource information - <code>--include-drift</code> - Include drift detection results - <code>--output-file FILE</code> - Save results to file</p> <p>Examples: <pre><code># Basic stack details\naws-cloud-utilities cloudformation stack-details my-stack\n\n# Comprehensive details\naws-cloud-utilities cloudformation stack-details my-stack --include-template --include-events --include-resources\n\n# Include drift detection\naws-cloud-utilities cloudformation stack-details my-stack --include-drift\n\n# Save to file\naws-cloud-utilities cloudformation stack-details my-stack --output-file stack-analysis.json\n</code></pre></p>"},{"location":"commands/cloudformation/#global-options","title":"Global Options","text":"<p>All CloudFormation commands support these global options:</p> <ul> <li><code>--profile PROFILE</code> - AWS profile to use</li> <li><code>--region REGION</code> - AWS region</li> <li><code>--output FORMAT</code> - Output format (table, json, yaml, csv)</li> <li><code>--verbose</code> - Enable verbose output</li> <li><code>--debug</code> - Enable debug mode</li> </ul>"},{"location":"commands/cloudformation/#examples","title":"Examples","text":""},{"location":"commands/cloudformation/#stack-backup-workflow","title":"Stack Backup Workflow","text":"<pre><code>#!/bin/bash\n# Comprehensive stack backup\n\nBACKUP_DIR=\"./cf-backup-$(date +%Y%m%d)\"\n\necho \"=== Creating Backup Directory ===\"\nmkdir -p $BACKUP_DIR\n\necho \"=== Listing All Stacks ===\"\naws-cloud-utilities cloudformation list-stacks --output-file $BACKUP_DIR/stack-list.json\n\necho \"=== Backing Up All Stacks ===\"\naws-cloud-utilities cloudformation backup --output-dir $BACKUP_DIR --include-parameters --include-outputs --include-resources\n\necho \"=== Backup Complete ===\"\necho \"Backup saved to: $BACKUP_DIR\"\n</code></pre>"},{"location":"commands/cloudformation/#stack-analysis-script","title":"Stack Analysis Script","text":"<pre><code>#!/bin/bash\n# Analyze specific stack\n\nSTACK_NAME=\"my-production-stack\"\nANALYSIS_DIR=\"./stack-analysis-$(date +%Y%m%d)\"\n\nmkdir -p $ANALYSIS_DIR\n\necho \"=== Stack Overview ===\"\naws-cloud-utilities cloudformation stack-details $STACK_NAME --output-file $ANALYSIS_DIR/overview.json\n\necho \"=== Detailed Analysis ===\"\naws-cloud-utilities cloudformation stack-details $STACK_NAME \\\n    --include-template \\\n    --include-events \\\n    --include-resources \\\n    --include-drift \\\n    --output-file $ANALYSIS_DIR/detailed-analysis.json\n\necho \"=== Analysis Complete ===\"\necho \"Analysis saved to: $ANALYSIS_DIR\"\n</code></pre>"},{"location":"commands/cloudformation/#multi-region-stack-inventory","title":"Multi-Region Stack Inventory","text":"<pre><code>#!/bin/bash\n# Inventory stacks across multiple regions\n\nREGIONS=(\"us-east-1\" \"us-west-2\" \"eu-west-1\" \"ap-southeast-1\")\nINVENTORY_DIR=\"./cf-inventory-$(date +%Y%m%d)\"\n\nmkdir -p $INVENTORY_DIR\n\nfor region in \"${REGIONS[@]}\"; do\n    echo \"=== Scanning $region ===\"\n    aws-cloud-utilities cloudformation list-stacks --region $region --output-file $INVENTORY_DIR/stacks-$region.json\ndone\n\necho \"=== Inventory Complete ===\"\necho \"Inventory saved to: $INVENTORY_DIR\"\n</code></pre>"},{"location":"commands/cloudformation/#stack-health-check","title":"Stack Health Check","text":"<pre><code>#!/bin/bash\n# Check health of all stacks\n\necho \"=== Failed/Rollback Stacks ===\"\naws-cloud-utilities cloudformation list-stacks --status CREATE_FAILED\naws-cloud-utilities cloudformation list-stacks --status ROLLBACK_COMPLETE\naws-cloud-utilities cloudformation list-stacks --status UPDATE_ROLLBACK_COMPLETE\n\necho \"=== In-Progress Operations ===\"\naws-cloud-utilities cloudformation list-stacks --status CREATE_IN_PROGRESS\naws-cloud-utilities cloudformation list-stacks --status UPDATE_IN_PROGRESS\naws-cloud-utilities cloudformation list-stacks --status DELETE_IN_PROGRESS\n</code></pre>"},{"location":"commands/cloudformation/#common-use-cases","title":"Common Use Cases","text":"<ol> <li> <p>Infrastructure Backup <pre><code>aws-cloud-utilities cloudformation backup --include-parameters --include-outputs\n</code></pre></p> </li> <li> <p>Stack Monitoring <pre><code>aws-cloud-utilities cloudformation list-stacks --status CREATE_FAILED\naws-cloud-utilities cloudformation list-stacks --status ROLLBACK_COMPLETE\n</code></pre></p> </li> <li> <p>Detailed Stack Analysis <pre><code>aws-cloud-utilities cloudformation stack-details my-stack --include-template --include-drift\n</code></pre></p> </li> <li> <p>Multi-Region Inventory <pre><code>aws-cloud-utilities cloudformation list-stacks --region us-east-1\naws-cloud-utilities cloudformation list-stacks --region us-west-2\n</code></pre></p> </li> </ol>"},{"location":"commands/cloudformation/#integration-with-other-commands","title":"Integration with Other Commands","text":"<p>CloudFormation commands work well with other AWS Cloud Utilities:</p> <pre><code># Combine with inventory for resource analysis\naws-cloud-utilities inventory resources --resource-type cloudformation\naws-cloud-utilities cloudformation list-stacks\n\n# Combine with security audit\naws-cloud-utilities security blue-team-audit\naws-cloud-utilities cloudformation stack-details my-stack --include-drift\n</code></pre>"},{"location":"commands/cloudformation/#best-practices","title":"Best Practices","text":"<ul> <li>Regular backups of critical stacks using the <code>backup</code> command</li> <li>Monitor stack status regularly to catch failed deployments</li> <li>Use drift detection to ensure infrastructure matches templates</li> <li>Include all details (<code>--include-*</code> flags) for comprehensive analysis</li> <li>Organize backups by date and environment for easy recovery</li> <li>Use JSON output for integration with other tools and automation</li> </ul>"},{"location":"commands/cloudfront/","title":"CloudFront Commands","text":"<p>CloudFront distribution management commands for CDN operations and configuration.</p>"},{"location":"commands/cloudfront/#commands","title":"Commands","text":""},{"location":"commands/cloudfront/#update-logging","title":"<code>update-logging</code>","text":"<p>Update logging configuration for CloudFront distributions.</p> <pre><code>aws-cloud-utilities cloudfront update-logging\n</code></pre> <p>Options: - <code>--distribution-id ID</code> - Specific distribution to update (default: all distributions) - <code>--bucket BUCKET</code> - S3 bucket for access logs - <code>--prefix PREFIX</code> - Log file prefix - <code>--enable</code> - Enable logging - <code>--disable</code> - Disable logging - <code>--dry-run</code> - Show what would be changed without making changes</p> <p>Examples: <pre><code># Enable logging for all distributions\naws-cloud-utilities cloudfront update-logging --enable --bucket my-logs-bucket --prefix cloudfront/\n\n# Update specific distribution\naws-cloud-utilities cloudfront update-logging --distribution-id E1234567890123 --enable --bucket my-logs-bucket\n\n# Disable logging for all distributions\naws-cloud-utilities cloudfront update-logging --disable\n\n# Dry run to see changes\naws-cloud-utilities cloudfront update-logging --enable --bucket my-logs-bucket --dry-run\n</code></pre></p>"},{"location":"commands/cloudfront/#list-distributions","title":"<code>list-distributions</code>","text":"<p>List CloudFront distributions with status and configuration details.</p> <pre><code>aws-cloud-utilities cloudfront list-distributions\n</code></pre> <p>Options: - <code>--status STATUS</code> - Filter by distribution status (Deployed, InProgress) - <code>--include-config</code> - Include detailed configuration in output - <code>--output-file FILE</code> - Save results to file</p> <p>Examples: <pre><code># List all distributions\naws-cloud-utilities cloudfront list-distributions\n\n# List only deployed distributions\naws-cloud-utilities cloudfront list-distributions --status Deployed\n\n# Include detailed configuration\naws-cloud-utilities cloudfront list-distributions --include-config\n\n# Save to file\naws-cloud-utilities cloudfront list-distributions --output-file distributions.json\n</code></pre></p>"},{"location":"commands/cloudfront/#distribution-details","title":"<code>distribution-details</code>","text":"<p>Get comprehensive details about a specific CloudFront distribution.</p> <pre><code>aws-cloud-utilities cloudfront distribution-details DISTRIBUTION_ID\n</code></pre> <p>Arguments: - <code>DISTRIBUTION_ID</code> - ID of the distribution to analyze</p> <p>Options: - <code>--show-config</code> - Include full distribution configuration - <code>--output-file FILE</code> - Save results to file</p> <p>Examples: <pre><code># Basic distribution details\naws-cloud-utilities cloudfront distribution-details E1234567890123\n\n# Include full configuration\naws-cloud-utilities cloudfront distribution-details E1234567890123 --show-config\n\n# Save to file\naws-cloud-utilities cloudfront distribution-details E1234567890123 --output-file distribution-analysis.json\n</code></pre></p>"},{"location":"commands/cloudfront/#invalidate","title":"<code>invalidate</code>","text":"<p>Invalidate CloudFront distribution cache by domain name or distribution ID.</p> <pre><code>aws-cloud-utilities cloudfront invalidate TARGET\n</code></pre> <p>Arguments: - <code>TARGET</code> - Either a domain name (e.g., example.com) or distribution ID (e.g., E1234567890123)</p> <p>Options: - <code>--paths PATH</code> - Specific paths to invalidate (can be used multiple times, default: /*) - <code>--output-file FILE</code> - Save invalidation details to file</p> <p>Examples: <pre><code># Invalidate all paths for a domain\naws-cloud-utilities cloudfront invalidate example.com\n\n# Invalidate specific paths\naws-cloud-utilities cloudfront invalidate example.com --paths /images/* --paths /css/*\n\n# Invalidate by distribution ID\naws-cloud-utilities cloudfront invalidate E1234567890123\n\n# Save invalidation details\naws-cloud-utilities cloudfront invalidate example.com --output-file invalidation-details.json\n</code></pre></p>"},{"location":"commands/cloudfront/#global-options","title":"Global Options","text":"<p>All CloudFront commands support these global options:</p> <ul> <li><code>--profile PROFILE</code> - AWS profile to use</li> <li><code>--region REGION</code> - AWS region (CloudFront is global, but affects API endpoint)</li> <li><code>--output FORMAT</code> - Output format (table, json, yaml, csv)</li> <li><code>--verbose</code> - Enable verbose output</li> <li><code>--debug</code> - Enable debug mode</li> </ul>"},{"location":"commands/cloudfront/#examples","title":"Examples","text":""},{"location":"commands/cloudfront/#distribution-audit-workflow","title":"Distribution Audit Workflow","text":"<pre><code>#!/bin/bash\n# Comprehensive CloudFront audit\n\nAUDIT_DIR=\"./cloudfront-audit-$(date +%Y%m%d)\"\nmkdir -p $AUDIT_DIR\n\necho \"=== Distribution Overview ===\"\naws-cloud-utilities cloudfront list-distributions --include-config --output-file $AUDIT_DIR/distributions.json\n\necho \"=== Detailed Analysis ===\"\n# Get list of distribution IDs and analyze each one\naws-cloud-utilities cloudfront list-distributions --output json | \\\njq -r '.[] | .Id' | \\\nwhile read dist_id; do\n    echo \"Analyzing distribution: $dist_id\"\n    aws-cloud-utilities cloudfront distribution-details $dist_id \\\n        --include-config \\\n        --include-origins \\\n        --include-behaviors \\\n        --include-invalidations \\\n        --output-file $AUDIT_DIR/distribution-$dist_id.json\ndone\n\necho \"=== Audit Complete ===\"\necho \"Audit data saved to: $AUDIT_DIR\"\n</code></pre>"},{"location":"commands/cloudfront/#logging-configuration-update","title":"Logging Configuration Update","text":"<pre><code>#!/bin/bash\n# Update logging for all distributions\n\nLOG_BUCKET=\"my-cloudfront-logs\"\nLOG_PREFIX=\"access-logs/\"\n\necho \"=== Current Distribution Status ===\"\naws-cloud-utilities cloudfront list-distributions\n\necho \"=== Updating Logging Configuration (Dry Run) ===\"\naws-cloud-utilities cloudfront update-logging --enable --bucket $LOG_BUCKET --prefix $LOG_PREFIX --dry-run\n\necho \"=== Applying Logging Configuration ===\"\nread -p \"Apply changes? (y/N): \" confirm\nif [[ $confirm == [yY] ]]; then\n    aws-cloud-utilities cloudfront update-logging --enable --bucket $LOG_BUCKET --prefix $LOG_PREFIX\n    echo \"Logging configuration updated\"\nelse\n    echo \"Changes cancelled\"\nfi\n</code></pre>"},{"location":"commands/cloudfront/#distribution-health-check","title":"Distribution Health Check","text":"<pre><code>#!/bin/bash\n# Check health and status of all distributions\n\necho \"=== Distribution Status Overview ===\"\naws-cloud-utilities cloudfront list-distributions --output table\n\necho \"=== In-Progress Distributions ===\"\naws-cloud-utilities cloudfront list-distributions --status InProgress\n\necho \"=== Deployed Distributions ===\"\naws-cloud-utilities cloudfront list-distributions --status Deployed --output-file deployed-distributions.json\n\necho \"=== Health Check Complete ===\"\n</code></pre>"},{"location":"commands/cloudfront/#performance-analysis","title":"Performance Analysis","text":"<pre><code>#!/bin/bash\n# Analyze distribution performance and configuration\n\nDIST_ID=\"E1234567890123\"\nANALYSIS_DIR=\"./cloudfront-performance-$(date +%Y%m%d)\"\n\nmkdir -p $ANALYSIS_DIR\n\necho \"=== Distribution Configuration ===\"\naws-cloud-utilities cloudfront distribution-details $DIST_ID \\\n    --include-config \\\n    --include-origins \\\n    --include-behaviors \\\n    --output-file $ANALYSIS_DIR/config-analysis.json\n\necho \"=== Recent Invalidations ===\"\naws-cloud-utilities cloudfront distribution-details $DIST_ID \\\n    --include-invalidations \\\n    --output-file $ANALYSIS_DIR/invalidations.json\n\necho \"=== Analysis Complete ===\"\necho \"Performance data saved to: $ANALYSIS_DIR\"\n</code></pre>"},{"location":"commands/cloudfront/#cache-invalidation-workflow","title":"Cache Invalidation Workflow","text":"<pre><code>#!/bin/bash\n# Deploy and invalidate CloudFront cache\n\nDOMAIN=\"example.com\"\nPATHS_TO_INVALIDATE=(\"/api/*\" \"/static/css/*\" \"/static/js/*\")\n\necho \"=== Pre-Deployment Status ===\"\naws-cloud-utilities cloudfront distribution-details $DOMAIN --show-config\n\necho \"=== Deploying Application ===\"\n# Your deployment commands here\n# ...\n\necho \"=== Invalidating CloudFront Cache ===\"\nPATHS_ARGS=\"\"\nfor path in \"${PATHS_TO_INVALIDATE[@]}\"; do\n    PATHS_ARGS=\"$PATHS_ARGS --paths $path\"\ndone\n\naws-cloud-utilities cloudfront invalidate $DOMAIN $PATHS_ARGS --output-file invalidation-$(date +%Y%m%d-%H%M%S).json\n\necho \"=== Deployment Complete ===\"\necho \"Cache invalidation initiated. Check AWS Console for status.\"\n</code></pre>"},{"location":"commands/cloudfront/#common-use-cases","title":"Common Use Cases","text":"<ol> <li> <p>Distribution Management <pre><code>aws-cloud-utilities cloudfront list-distributions --include-disabled\naws-cloud-utilities cloudfront distribution-details E1234567890123\n</code></pre></p> </li> <li> <p>Cache Invalidation <pre><code># Invalidate all content\naws-cloud-utilities cloudfront invalidate example.com\n\n# Invalidate specific paths\naws-cloud-utilities cloudfront invalidate example.com --paths /api/* --paths /static/*\n\n# Invalidate by distribution ID\naws-cloud-utilities cloudfront invalidate E1234567890123\n</code></pre></p> </li> <li> <p>Logging Configuration <pre><code>aws-cloud-utilities cloudfront update-logging --log-bucket my-logs-bucket --log-prefix cloudfront/\naws-cloud-utilities cloudfront update-logging --dry-run\n</code></pre></p> </li> <li> <p>Configuration Audit <pre><code>aws-cloud-utilities cloudfront list-distributions --show-logging-status --output-file audit.json\naws-cloud-utilities cloudfront distribution-details E1234567890123 --show-config\n</code></pre></p> </li> <li> <p>Status Monitoring <pre><code>aws-cloud-utilities cloudfront list-distributions --include-disabled\naws-cloud-utilities cloudfront list-distributions --show-logging-status\n</code></pre></p> </li> </ol>"},{"location":"commands/cloudfront/#integration-with-other-commands","title":"Integration with Other Commands","text":"<p>CloudFront commands work well with other AWS Cloud Utilities:</p> <pre><code># Combine with S3 for log analysis\naws-cloud-utilities cloudfront update-logging --enable --bucket my-logs-bucket\naws-cloud-utilities s3 bucket-details my-logs-bucket --include-objects\n\n# Combine with security audit\naws-cloud-utilities security blue-team-audit\naws-cloud-utilities cloudfront list-distributions --include-config\n</code></pre>"},{"location":"commands/cloudfront/#best-practices","title":"Best Practices","text":"<ul> <li>Use <code>--dry-run</code> before making configuration changes</li> <li>Enable logging for all distributions for security and performance monitoring</li> <li>Regularly audit distribution configurations for security best practices</li> <li>Monitor distribution status to catch deployment issues early</li> <li>Use JSON output for integration with monitoring and alerting systems</li> <li>Keep detailed records of distribution configurations for compliance</li> </ul>"},{"location":"commands/costops/","title":"Cost Optimization Commands","text":"<p>Cost optimization and pricing tools for AWS resource cost analysis and optimization recommendations.</p>"},{"location":"commands/costops/#commands","title":"Commands","text":""},{"location":"commands/costops/#pricing","title":"<code>pricing</code>","text":"<p>Get AWS service pricing information from the AWS Pricing API.</p> <pre><code>aws-cloud-utilities costops pricing [OPTIONS]\n</code></pre> <p>Options: - <code>--service SERVICE</code> - Specific AWS service to get pricing for (e.g., AmazonEC2, AmazonS3) - <code>--output-dir DIR</code> - Output directory for pricing data (default: <code>./aws_pricing_&lt;timestamp&gt;</code>) - <code>--list-services</code> - List all available AWS services for pricing - <code>--format FORMAT</code> - Output format: <code>json</code> (raw data) or <code>summary</code> (processed, default)</p> <p>Examples: <pre><code># List all available services\naws-cloud-utilities costops pricing --list-services\n\n# Get EC2 pricing information\naws-cloud-utilities costops pricing --service AmazonEC2\n\n# Get S3 pricing in specific output directory\naws-cloud-utilities costops pricing --service AmazonS3 --output-dir ./pricing-data\n\n# Get pricing in raw JSON format\naws-cloud-utilities costops pricing --service AmazonRDS --format json\n</code></pre></p>"},{"location":"commands/costops/#cost-analysis","title":"<code>cost-analysis</code>","text":"<p>Analyze AWS costs using Cost Explorer for trends and spending patterns.</p> <pre><code>aws-cloud-utilities costops cost-analysis [OPTIONS]\n</code></pre> <p>Options: - <code>--months MONTHS</code> - Number of months to analyze (default: 3) - <code>--service SERVICE</code> - Specific AWS service to analyze (e.g., \"Amazon Elastic Compute Cloud - Compute\") - <code>--group-by DIMENSION</code> - Group costs by: <code>service</code>, <code>usage_type</code>, <code>region</code>, or <code>account</code> (default: service) - <code>--output-file FILE</code> - Output file for cost analysis (supports .json, .yaml, .csv)</p> <p>Examples: <pre><code># Analyze costs for last 3 months\naws-cloud-utilities costops cost-analysis\n\n# Analyze EC2 costs for last 6 months\naws-cloud-utilities costops cost-analysis --months 6 --service \"Amazon Elastic Compute Cloud - Compute\"\n\n# Group by region\naws-cloud-utilities costops cost-analysis --group-by region\n\n# Save to file\naws-cloud-utilities costops cost-analysis --output-file costs.json\n</code></pre></p>"},{"location":"commands/costops/#ebs-optimization","title":"<code>ebs-optimization</code>","text":"<p>Analyze EBS volumes for cost optimization opportunities (e.g., gp2 to gp3 upgrades, underutilized volumes).</p> <pre><code>aws-cloud-utilities costops ebs-optimization [OPTIONS]\n</code></pre> <p>Options: - <code>--region REGION</code> - AWS region to analyze (default: current region) - <code>--all-regions</code> - Analyze EBS volumes across all regions - <code>--volume-type TYPE</code> - Filter by specific volume type (<code>gp2</code>, <code>gp3</code>, <code>io1</code>, <code>io2</code>, <code>st1</code>, <code>sc1</code>, <code>standard</code>) - <code>--show-recommendations</code> - Show optimization recommendations (default: enabled) - <code>--include-cost-estimates</code> - Include cost savings estimates - <code>--output-file FILE</code> - Output file for EBS analysis (supports .json, .yaml, .csv) - <code>--tag-key KEY</code> - Filter EBS volumes by tag key - <code>--tag-value VALUE</code> - Filter EBS volumes by tag value (requires <code>--tag-key</code>)</p> <p>Examples: <pre><code># Analyze EBS volumes in current region\naws-cloud-utilities costops ebs-optimization\n\n# Analyze all gp2 volumes across all regions\naws-cloud-utilities costops ebs-optimization --all-regions --volume-type gp2\n\n# Include cost savings estimates\naws-cloud-utilities costops ebs-optimization --include-cost-estimates\n\n# Filter by environment tag\naws-cloud-utilities costops ebs-optimization --tag-key Environment --tag-value production\n\n# Save analysis to file\naws-cloud-utilities costops ebs-optimization --output-file ebs-analysis.json\n</code></pre></p>"},{"location":"commands/costops/#usage-metrics","title":"<code>usage-metrics</code>","text":"<p>Get detailed usage metrics for a specific AWS service using Cost Explorer.</p> <pre><code>aws-cloud-utilities costops usage-metrics SERVICE_NAME [OPTIONS]\n</code></pre> <p>Arguments: - <code>SERVICE_NAME</code> - Name of the AWS service to analyze (required)</p> <p>Options: - <code>--months MONTHS</code> - Number of months to analyze (default: 3) - <code>--metric-type TYPE</code> - Type of metrics: <code>cost</code>, <code>usage</code>, or <code>both</code> (default: both) - <code>--group-by DIMENSION</code> - Group metrics by: <code>usage_type</code>, <code>region</code>, <code>instance_type</code>, or <code>operation</code> (default: usage_type) - <code>--output-file FILE</code> - Output file for usage metrics (supports .json, .yaml, .csv)</p> <p>Examples: <pre><code># Get EC2 usage metrics\naws-cloud-utilities costops usage-metrics \"Amazon Elastic Compute Cloud - Compute\"\n\n# Get S3 cost metrics for last 6 months\naws-cloud-utilities costops usage-metrics \"Amazon Simple Storage Service\" --months 6 --metric-type cost\n\n# Group by region\naws-cloud-utilities costops usage-metrics \"Amazon RDS Service\" --group-by region\n\n# Save to file\naws-cloud-utilities costops usage-metrics \"AWS Lambda\" --output-file lambda-usage.json\n</code></pre></p>"},{"location":"commands/costops/#spot-pricing","title":"<code>spot-pricing</code>","text":"<p>Collect and analyze EC2 spot pricing data across regions.</p> <pre><code>aws-cloud-utilities costops spot-pricing [OPTIONS]\n</code></pre> <p>Options: - <code>--region REGION</code> - Specific AWS region to collect spot pricing for - <code>--all-regions</code> - Collect spot pricing data from all regions - <code>--time-range HOURS</code> - Time range in hours for spot pricing data (default: 24) - <code>--instance-types TYPES</code> - Comma-separated list of instance types (e.g., <code>m5.large,c5.xlarge</code>) - <code>--product-description DESC</code> - Product description filter (default: \"Linux/UNIX\") - <code>--output-dir DIR</code> - Output directory for spot pricing data (default: <code>./spot_pricing_&lt;timestamp&gt;</code>) - <code>--output-file FILE</code> - Output file for consolidated analysis (supports .json, .yaml, .csv)</p> <p>Examples: <pre><code># Collect spot pricing for current region\naws-cloud-utilities costops spot-pricing\n\n# Collect from all regions for last 48 hours\naws-cloud-utilities costops spot-pricing --all-regions --time-range 48\n\n# Filter by specific instance types\naws-cloud-utilities costops spot-pricing --instance-types \"m5.large,m5.xlarge,c5.large\"\n\n# Windows instances\naws-cloud-utilities costops spot-pricing --product-description \"Windows\" --all-regions\n\n# Save analysis to file\naws-cloud-utilities costops spot-pricing --all-regions --output-file spot-analysis.json\n</code></pre></p>"},{"location":"commands/costops/#spot-analysis","title":"<code>spot-analysis</code>","text":"<p>Analyze previously collected spot pricing data to find cheapest options.</p> <pre><code>aws-cloud-utilities costops spot-analysis DATA_DIRECTORY [OPTIONS]\n</code></pre> <p>Arguments: - <code>DATA_DIRECTORY</code> - Path to directory containing spot pricing data (required)</p> <p>Options: - <code>--top-n N</code> - Number of top cheapest instances to show (default: 10) - <code>--estimate-period DAYS</code> - Period in days for cost estimation (default: 30) - <code>--instance-type-filter PATTERN</code> - Filter by instance type pattern (e.g., \"m5\", \"c5.large\") - <code>--region-filter REGION</code> - Filter results by region - <code>--output-file FILE</code> - Output file for analysis results (supports .json, .yaml, .csv)</p> <p>Examples: <pre><code># Analyze collected spot pricing data\naws-cloud-utilities costops spot-analysis ./spot_pricing_20240115\n\n# Show top 20 cheapest instances\naws-cloud-utilities costops spot-analysis ./spot_pricing_20240115 --top-n 20\n\n# Filter by m5 instance types\naws-cloud-utilities costops spot-analysis ./spot_pricing_20240115 --instance-type-filter m5\n\n# Filter by region\naws-cloud-utilities costops spot-analysis ./spot_pricing_20240115 --region-filter us-east-1\n\n# Estimate costs for 90 days\naws-cloud-utilities costops spot-analysis ./spot_pricing_20240115 --estimate-period 90 --output-file analysis.json\n</code></pre></p>"},{"location":"commands/costops/#global-options","title":"Global Options","text":"<p>All cost optimization commands support:</p> <ul> <li><code>--profile PROFILE</code> - AWS profile to use</li> <li><code>--region REGION</code> - AWS region</li> <li><code>--output FORMAT</code> - Output format (table, json, yaml, csv)</li> <li><code>--verbose</code> - Enable verbose output</li> <li><code>--debug</code> - Enable debug mode</li> </ul>"},{"location":"commands/costops/#complete-workflow-examples","title":"Complete Workflow Examples","text":""},{"location":"commands/costops/#monthly-cost-review","title":"Monthly Cost Review","text":"<pre><code>#!/bin/bash\n# Comprehensive monthly cost optimization review\n\necho \"=== Cost Analysis ===\"\naws-cloud-utilities costops cost-analysis --months 3 --output-file monthly-costs.json\n\necho \"=== EC2 Cost Breakdown ===\"\naws-cloud-utilities costops cost-analysis --service \"Amazon Elastic Compute Cloud - Compute\" --group-by region\n\necho \"=== EBS Optimization Opportunities ===\"\naws-cloud-utilities costops ebs-optimization --all-regions --include-cost-estimates\n\necho \"=== S3 Usage Metrics ===\"\naws-cloud-utilities costops usage-metrics \"Amazon Simple Storage Service\" --months 6\n</code></pre>"},{"location":"commands/costops/#spot-instance-cost-optimization","title":"Spot Instance Cost Optimization","text":"<pre><code>#!/bin/bash\n# Find cheapest spot instances for workload\n\necho \"=== Collecting Spot Pricing Data ===\"\naws-cloud-utilities costops spot-pricing --all-regions --time-range 72 --output-dir ./spot-data\n\necho \"=== Analyzing Best Spot Options ===\"\naws-cloud-utilities costops spot-analysis ./spot-data --top-n 20 --estimate-period 30\n\necho \"=== M5 Instance Analysis ===\"\naws-cloud-utilities costops spot-analysis ./spot-data --instance-type-filter m5 --output-file m5-analysis.json\n\necho \"=== C5 Instance Analysis ===\"\naws-cloud-utilities costops spot-analysis ./spot-data --instance-type-filter c5 --output-file c5-analysis.json\n</code></pre>"},{"location":"commands/costops/#service-specific-cost-analysis","title":"Service-Specific Cost Analysis","text":"<pre><code>#!/bin/bash\n# Analyze costs for specific AWS services\n\nservices=(\n    \"Amazon Elastic Compute Cloud - Compute\"\n    \"Amazon Simple Storage Service\"\n    \"Amazon RDS Service\"\n    \"AWS Lambda\"\n)\n\nfor service in \"${services[@]}\"; do\n    echo \"=== Analyzing $service ===\"\n    aws-cloud-utilities costops cost-analysis --service \"$service\" --months 6\n    aws-cloud-utilities costops usage-metrics \"$service\" --months 6\ndone\n</code></pre>"},{"location":"commands/costops/#ebs-optimization-campaign","title":"EBS Optimization Campaign","text":"<pre><code>#!/bin/bash\n# Comprehensive EBS optimization analysis\n\necho \"=== All EBS Volumes ===\"\naws-cloud-utilities costops ebs-optimization --all-regions --include-cost-estimates --output-file all-volumes.json\n\necho \"=== GP2 Volumes (Upgrade to GP3) ===\"\naws-cloud-utilities costops ebs-optimization --all-regions --volume-type gp2 --output-file gp2-upgrade.json\n\necho \"=== IO1 Volumes (Upgrade to IO2) ===\"\naws-cloud-utilities costops ebs-optimization --all-regions --volume-type io1 --output-file io1-upgrade.json\n\necho \"=== Production Environment Only ===\"\naws-cloud-utilities costops ebs-optimization --all-regions --tag-key Environment --tag-value production\n</code></pre>"},{"location":"commands/costops/#common-use-cases","title":"Common Use Cases","text":""},{"location":"commands/costops/#1-find-aws-service-pricing","title":"1. Find AWS Service Pricing","text":"<pre><code># List available services\naws-cloud-utilities costops pricing --list-services\n\n# Get specific service pricing\naws-cloud-utilities costops pricing --service AmazonEC2\n</code></pre>"},{"location":"commands/costops/#2-analyze-monthly-spending","title":"2. Analyze Monthly Spending","text":"<pre><code># Overall cost analysis\naws-cloud-utilities costops cost-analysis --months 6\n\n# By service\naws-cloud-utilities costops cost-analysis --group-by service\n\n# By region\naws-cloud-utilities costops cost-analysis --group-by region\n</code></pre>"},{"location":"commands/costops/#3-ebs-cost-optimization","title":"3. EBS Cost Optimization","text":"<pre><code># Find all gp2 volumes that can be upgraded to gp3\naws-cloud-utilities costops ebs-optimization --all-regions --volume-type gp2 --include-cost-estimates\n</code></pre>"},{"location":"commands/costops/#4-spot-instance-price-shopping","title":"4. Spot Instance Price Shopping","text":"<pre><code># Collect pricing data\naws-cloud-utilities costops spot-pricing --all-regions --time-range 72\n\n# Find cheapest options\naws-cloud-utilities costops spot-analysis ./spot_pricing_&lt;timestamp&gt; --top-n 20\n</code></pre>"},{"location":"commands/costops/#5-service-usage-tracking","title":"5. Service Usage Tracking","text":"<pre><code># Track EC2 usage\naws-cloud-utilities costops usage-metrics \"Amazon Elastic Compute Cloud - Compute\" --months 12\n\n# Track Lambda costs\naws-cloud-utilities costops usage-metrics \"AWS Lambda\" --metric-type cost\n</code></pre>"},{"location":"commands/costops/#output-formats","title":"Output Formats","text":"<p>All commands support multiple output formats:</p> <pre><code># Table format (default, human-readable)\naws-cloud-utilities costops cost-analysis\n\n# JSON for automation and scripting\naws-cloud-utilities costops cost-analysis --output json\n\n# CSV for spreadsheet analysis\naws-cloud-utilities costops ebs-optimization --all-regions --output csv\n\n# YAML for configuration\naws-cloud-utilities costops pricing --service AmazonEC2 --output yaml\n</code></pre>"},{"location":"commands/costops/#tips-and-best-practices","title":"Tips and Best Practices","text":"<ol> <li>Regular Cost Reviews: Run monthly cost analysis to track spending trends</li> <li>EBS Optimization: Regularly scan for gp2\u2192gp3 upgrade opportunities (typically 20% savings)</li> <li>Spot Pricing: Collect pricing data over 48-72 hours for accurate trends</li> <li>Tag Filtering: Use tags to analyze costs by environment, project, or team</li> <li>Output Files: Save analysis results with timestamps for historical comparison</li> <li>Multi-Region: Always use <code>--all-regions</code> for comprehensive coverage</li> <li>Cost Explorer: The <code>cost-analysis</code> and <code>usage-metrics</code> commands require Cost Explorer to be enabled in your AWS account</li> </ol>"},{"location":"commands/ecr/","title":"ECR Commands","text":"<p>Elastic Container Registry (ECR) operations for container image management.</p>"},{"location":"commands/ecr/#commands","title":"Commands","text":""},{"location":"commands/ecr/#copy-image","title":"<code>copy-image</code>","text":"<p>Copy container images between ECR repositories or regions.</p> <pre><code>aws-cloud-utilities ecr copy-image SOURCE_URI DESTINATION_URI\n</code></pre> <p>Arguments: - <code>SOURCE_URI</code> - Source image URI (e.g., 123456789012.dkr.ecr.us-east-1.amazonaws.com/my-repo:tag) - <code>DESTINATION_URI</code> - Destination image URI</p> <p>Options: - <code>--source-region REGION</code> - Source region (if different from current) - <code>--destination-region REGION</code> - Destination region (if different from current) - <code>--force</code> - Overwrite existing image if it exists - <code>--dry-run</code> - Show what would be copied without actually copying</p> <p>Examples: <pre><code># Copy image between repositories\naws-cloud-utilities ecr copy-image \\\n    123456789012.dkr.ecr.us-east-1.amazonaws.com/source-repo:v1.0 \\\n    123456789012.dkr.ecr.us-east-1.amazonaws.com/dest-repo:v1.0\n\n# Copy image between regions\naws-cloud-utilities ecr copy-image \\\n    123456789012.dkr.ecr.us-east-1.amazonaws.com/my-repo:v1.0 \\\n    123456789012.dkr.ecr.us-west-2.amazonaws.com/my-repo:v1.0 \\\n    --destination-region us-west-2\n\n# Dry run to see what would be copied\naws-cloud-utilities ecr copy-image source:tag dest:tag --dry-run\n</code></pre></p>"},{"location":"commands/ecr/#list-repositories","title":"<code>list-repositories</code>","text":"<p>List ECR repositories with details and statistics.</p> <pre><code>aws-cloud-utilities ecr list-repositories\n</code></pre> <p>Options: - <code>--region REGION</code> - AWS region to query (default: all regions) - <code>--include-images</code> - Include image count and details - <code>--include-size</code> - Include repository size information - <code>--output-file FILE</code> - Save results to file</p> <p>Examples: <pre><code># List all repositories\naws-cloud-utilities ecr list-repositories\n\n# List repositories in specific region\naws-cloud-utilities ecr list-repositories --region us-east-1\n\n# Include image statistics\naws-cloud-utilities ecr list-repositories --include-images --include-size\n\n# Save to file\naws-cloud-utilities ecr list-repositories --output-file repositories.json\n</code></pre></p>"},{"location":"commands/ecr/#list-images","title":"<code>list-images</code>","text":"<p>List images in ECR repositories with detailed information.</p> <pre><code>aws-cloud-utilities ecr list-images REPOSITORY_NAME\n</code></pre> <p>Arguments: - <code>REPOSITORY_NAME</code> - Name of the repository to list images from</p> <p>Options: - <code>--region REGION</code> - AWS region where repository exists - <code>--tag-status STATUS</code> - Filter by tag status (TAGGED, UNTAGGED, ANY) [default: ANY] - <code>--include-vulnerabilities</code> - Include vulnerability scan results - <code>--max-results NUM</code> - Maximum number of images to return - <code>--output-file FILE</code> - Save results to file</p> <p>Examples: <pre><code># List all images in repository\naws-cloud-utilities ecr list-images my-app\n\n# List only tagged images\naws-cloud-utilities ecr list-images my-app --tag-status TAGGED\n\n# Include vulnerability scan results\naws-cloud-utilities ecr list-images my-app --include-vulnerabilities\n\n# Limit results and save to file\naws-cloud-utilities ecr list-images my-app --max-results 50 --output-file images.json\n</code></pre></p>"},{"location":"commands/ecr/#create-repository","title":"<code>create-repository</code>","text":"<p>Create a new ECR repository with optional configuration.</p> <pre><code>aws-cloud-utilities ecr create-repository REPOSITORY_NAME\n</code></pre> <p>Arguments: - <code>REPOSITORY_NAME</code> - Name of the repository to create</p> <p>Options: - <code>--region REGION</code> - AWS region to create repository in - <code>--image-scanning</code> - Enable image vulnerability scanning - <code>--immutable-tags</code> - Enable tag immutability - <code>--encryption-type TYPE</code> - Encryption type (AES256, KMS) [default: AES256] - <code>--kms-key KEY</code> - KMS key for encryption (if using KMS)</p> <p>Examples: <pre><code># Create basic repository\naws-cloud-utilities ecr create-repository my-new-app\n\n# Create repository with security features\naws-cloud-utilities ecr create-repository my-secure-app --image-scanning --immutable-tags\n\n# Create repository with KMS encryption\naws-cloud-utilities ecr create-repository my-encrypted-app --encryption-type KMS --kms-key alias/my-key\n\n# Create in specific region\naws-cloud-utilities ecr create-repository my-regional-app --region us-west-2\n</code></pre></p>"},{"location":"commands/ecr/#delete-repository","title":"<code>delete-repository</code>","text":"<p>Delete an ECR repository and all its images.</p> <pre><code>aws-cloud-utilities ecr delete-repository REPOSITORY_NAME\n</code></pre> <p>Arguments: - <code>REPOSITORY_NAME</code> - Name of the repository to delete</p> <p>Options: - <code>--region REGION</code> - AWS region where repository exists - <code>--force</code> - Force deletion without confirmation - <code>--delete-images</code> - Delete all images in repository (required for non-empty repositories)</p> <p>Examples: <pre><code># Delete empty repository\naws-cloud-utilities ecr delete-repository my-old-repo\n\n# Delete repository with all images\naws-cloud-utilities ecr delete-repository my-old-repo --delete-images\n\n# Force delete without confirmation\naws-cloud-utilities ecr delete-repository my-old-repo --delete-images --force\n</code></pre></p>"},{"location":"commands/ecr/#get-login","title":"<code>get-login</code>","text":"<p>Get Docker login command for ECR authentication.</p> <pre><code>aws-cloud-utilities ecr get-login\n</code></pre> <p>Options: - <code>--region REGION</code> - AWS region for ECR registry - <code>--registry-ids IDS</code> - Comma-separated list of registry IDs - <code>--no-include-email</code> - Omit email flag from docker login command</p> <p>Examples: <pre><code># Get login command for current region\naws-cloud-utilities ecr get-login\n\n# Get login for specific region\naws-cloud-utilities ecr get-login --region us-west-2\n\n# Get login for specific registry\naws-cloud-utilities ecr get-login --registry-ids 123456789012\n</code></pre></p>"},{"location":"commands/ecr/#global-options","title":"Global Options","text":"<p>All ECR commands support these global options:</p> <ul> <li><code>--profile PROFILE</code> - AWS profile to use</li> <li><code>--region REGION</code> - AWS region</li> <li><code>--output FORMAT</code> - Output format (table, json, yaml, csv)</li> <li><code>--verbose</code> - Enable verbose output</li> <li><code>--debug</code> - Enable debug mode</li> </ul>"},{"location":"commands/ecr/#examples","title":"Examples","text":""},{"location":"commands/ecr/#repository-management-workflow","title":"Repository Management Workflow","text":"<pre><code>#!/bin/bash\n# Complete repository management workflow\n\nAPP_NAME=\"my-application\"\nREGION=\"us-east-1\"\n\necho \"=== Creating Repository ===\"\naws-cloud-utilities ecr create-repository $APP_NAME --region $REGION --image-scanning --immutable-tags\n\necho \"=== Getting Docker Login ===\"\naws-cloud-utilities ecr get-login --region $REGION\n\necho \"=== Repository Details ===\"\naws-cloud-utilities ecr list-repositories --region $REGION --include-images --include-size\n\necho \"=== Setup Complete ===\"\n</code></pre>"},{"location":"commands/ecr/#image-migration-script","title":"Image Migration Script","text":"<pre><code>#!/bin/bash\n# Migrate images between regions\n\nSOURCE_REGION=\"us-east-1\"\nDEST_REGION=\"us-west-2\"\nREPO_NAME=\"my-app\"\n\necho \"=== Source Repository Images ===\"\naws-cloud-utilities ecr list-images $REPO_NAME --region $SOURCE_REGION\n\necho \"=== Creating Destination Repository ===\"\naws-cloud-utilities ecr create-repository $REPO_NAME --region $DEST_REGION --image-scanning\n\necho \"=== Copying Images ===\"\n# This would typically involve pulling and pushing images\n# The copy-image command can help with this process\n\necho \"=== Migration Complete ===\"\n</code></pre>"},{"location":"commands/ecr/#security-audit-script","title":"Security Audit Script","text":"<pre><code>#!/bin/bash\n# Security audit of ECR repositories\n\nAUDIT_DIR=\"./ecr-audit-$(date +%Y%m%d)\"\nmkdir -p $AUDIT_DIR\n\necho \"=== Repository Inventory ===\"\naws-cloud-utilities ecr list-repositories --include-images --include-size --output-file $AUDIT_DIR/repositories.json\n\necho \"=== Vulnerability Scan Results ===\"\naws-cloud-utilities ecr list-repositories --output json | \\\njq -r '.[].repositoryName' | \\\nwhile read repo; do\n    echo \"Scanning repository: $repo\"\n    aws-cloud-utilities ecr list-images $repo --include-vulnerabilities --output-file $AUDIT_DIR/vulnerabilities-$repo.json\ndone\n\necho \"=== Audit Complete ===\"\necho \"Audit data saved to: $AUDIT_DIR\"\n</code></pre>"},{"location":"commands/ecr/#cleanup-script","title":"Cleanup Script","text":"<pre><code>#!/bin/bash\n# Clean up old and unused repositories\n\necho \"=== Current Repositories ===\"\naws-cloud-utilities ecr list-repositories --include-images\n\necho \"=== Repositories to Delete ===\"\n# List repositories with no images or old images\naws-cloud-utilities ecr list-repositories --output json | \\\njq -r '.[] | select(.imageCount == 0) | .repositoryName' | \\\nwhile read repo; do\n    echo \"Empty repository: $repo\"\n    read -p \"Delete $repo? (y/N): \" confirm\n    if [[ $confirm == [yY] ]]; then\n        aws-cloud-utilities ecr delete-repository $repo --force\n    fi\ndone\n</code></pre>"},{"location":"commands/ecr/#common-use-cases","title":"Common Use Cases","text":"<ol> <li> <p>Repository Management <pre><code>aws-cloud-utilities ecr create-repository my-app --image-scanning --immutable-tags\naws-cloud-utilities ecr list-repositories --include-images --include-size\n</code></pre></p> </li> <li> <p>Image Operations <pre><code>aws-cloud-utilities ecr list-images my-app --include-vulnerabilities\naws-cloud-utilities ecr copy-image source:tag dest:tag\n</code></pre></p> </li> <li> <p>Authentication <pre><code>aws-cloud-utilities ecr get-login\n$(aws-cloud-utilities ecr get-login --no-include-email)\n</code></pre></p> </li> <li> <p>Security Auditing <pre><code>aws-cloud-utilities ecr list-repositories --include-images\naws-cloud-utilities ecr list-images my-app --include-vulnerabilities\n</code></pre></p> </li> </ol>"},{"location":"commands/ecr/#integration-with-docker","title":"Integration with Docker","text":"<p>ECR commands integrate well with Docker workflows:</p> <pre><code># Get login and authenticate\n$(aws-cloud-utilities ecr get-login --no-include-email)\n\n# Build and tag image\ndocker build -t my-app:latest .\ndocker tag my-app:latest 123456789012.dkr.ecr.us-east-1.amazonaws.com/my-app:latest\n\n# Push image\ndocker push 123456789012.dkr.ecr.us-east-1.amazonaws.com/my-app:latest\n\n# Verify upload\naws-cloud-utilities ecr list-images my-app\n</code></pre>"},{"location":"commands/ecr/#best-practices","title":"Best Practices","text":"<ul> <li>Enable image scanning for security vulnerability detection</li> <li>Use tag immutability for production repositories</li> <li>Regularly audit repositories for unused images</li> <li>Use lifecycle policies to manage image retention</li> <li>Implement proper IAM policies for ECR access</li> <li>Monitor repository sizes and costs</li> <li>Use multi-region replication for critical images</li> </ul>"},{"location":"commands/iam/","title":"IAM Commands","text":"<p>IAM management and auditing commands for identity and access management analysis.</p>"},{"location":"commands/iam/#commands","title":"Commands","text":""},{"location":"commands/iam/#audit","title":"<code>audit</code>","text":"<p>Audit IAM roles and policies, saving them locally for analysis.</p> <pre><code>aws-cloud-utilities iam audit [OPTIONS]\n</code></pre> <p>Features: - Exports all IAM roles and their attached policies - Exports managed and inline policies - Saves policies to local directory for offline analysis - Generates comprehensive IAM configuration snapshot</p> <p>Options: - <code>--output-dir DIR</code> - Directory to save IAM audit files (default: ./iam-audit) - <code>--include-aws-managed</code> - Include AWS-managed policies (default: customer-managed only) - <code>--format FORMAT</code> - Output format (json, yaml)</p> <p>Examples: <pre><code># Basic IAM audit\naws-cloud-utilities iam audit\n\n# Save to specific directory\naws-cloud-utilities iam audit --output-dir /path/to/audit\n\n# Include AWS-managed policies\naws-cloud-utilities iam audit --include-aws-managed\n\n# Export as YAML\naws-cloud-utilities iam audit --format yaml --output-dir ./iam-backup\n</code></pre></p>"},{"location":"commands/iam/#list-roles","title":"<code>list-roles</code>","text":"<p>List all IAM roles with details.</p> <pre><code>aws-cloud-utilities iam list-roles [OPTIONS]\n</code></pre> <p>Output includes: - Role name and ARN - Creation date - Last used information - Attached policies count - Trust relationships summary</p> <p>Options: - <code>--path-prefix PREFIX</code> - Filter roles by path prefix - <code>--max-items NUM</code> - Maximum number of roles to list - <code>--output-file FILE</code> - Save results to file (json, yaml, csv)</p> <p>Examples: <pre><code># List all roles\naws-cloud-utilities iam list-roles\n\n# Filter by path\naws-cloud-utilities iam list-roles --path-prefix /service-role/\n\n# Export to file\naws-cloud-utilities iam list-roles --output-file roles.json\n</code></pre></p>"},{"location":"commands/iam/#list-policies","title":"<code>list-policies</code>","text":"<p>List IAM policies.</p> <pre><code>aws-cloud-utilities iam list-policies [OPTIONS]\n</code></pre> <p>Options: - <code>--scope SCOPE</code> - Policy scope (All, AWS, Local) [default: Local] - <code>--only-attached</code> - Show only policies attached to entities - <code>--path-prefix PREFIX</code> - Filter by path prefix - <code>--output-file FILE</code> - Save results to file</p> <p>Examples: <pre><code># List customer-managed policies\naws-cloud-utilities iam list-policies\n\n# List all policies including AWS-managed\naws-cloud-utilities iam list-policies --scope All\n\n# Only attached policies\naws-cloud-utilities iam list-policies --only-attached\n\n# Export to CSV\naws-cloud-utilities iam list-policies --output-file policies.csv\n</code></pre></p>"},{"location":"commands/iam/#role-details","title":"<code>role-details</code>","text":"<p>Get detailed information about a specific IAM role.</p> <pre><code>aws-cloud-utilities iam role-details ROLE_NAME [OPTIONS]\n</code></pre> <p>Arguments: - <code>ROLE_NAME</code> - Name of the IAM role</p> <p>Output includes: - Role metadata (ARN, creation date, last used) - Trust relationship (assume role policy) - Attached managed policies - Inline policies - Permission boundaries - Tags</p> <p>Options: - <code>--output-file FILE</code> - Save results to file - <code>--include-policy-versions</code> - Include all policy versions</p> <p>Examples: <pre><code># Get role details\naws-cloud-utilities iam role-details MyAppRole\n\n# Export to JSON\naws-cloud-utilities iam role-details MyAppRole --output-file role-details.json\n\n# Include all policy versions\naws-cloud-utilities iam role-details MyAppRole --include-policy-versions\n</code></pre></p>"},{"location":"commands/iam/#policy-details","title":"<code>policy-details</code>","text":"<p>Get detailed information about a specific IAM policy.</p> <pre><code>aws-cloud-utilities iam policy-details POLICY_ARN [OPTIONS]\n</code></pre> <p>Arguments: - <code>POLICY_ARN</code> - ARN of the IAM policy</p> <p>Output includes: - Policy metadata - Default policy version - Policy document (JSON) - All policy versions - Entities attached to</p> <p>Options: - <code>--version VERSION_ID</code> - Show specific policy version - <code>--all-versions</code> - Show all policy versions - <code>--output-file FILE</code> - Save results to file</p> <p>Examples: <pre><code># Get policy details\naws-cloud-utilities iam policy-details arn:aws:iam::123456789012:policy/MyPolicy\n\n# Show all versions\naws-cloud-utilities iam policy-details arn:aws:iam::123456789012:policy/MyPolicy --all-versions\n\n# Export to file\naws-cloud-utilities iam policy-details arn:aws:iam::123456789012:policy/MyPolicy --output-file policy.json\n</code></pre></p>"},{"location":"commands/iam/#global-options","title":"Global Options","text":"<p>All IAM commands support these global options:</p> <ul> <li><code>--profile PROFILE</code> - AWS profile to use</li> <li><code>--region REGION</code> - AWS region</li> <li><code>--output FORMAT</code> - Output format (table, json, yaml, csv)</li> <li><code>--verbose</code> - Enable verbose output</li> <li><code>--debug</code> - Enable debug mode</li> </ul>"},{"location":"commands/iam/#common-use-cases","title":"Common Use Cases","text":""},{"location":"commands/iam/#security-audit-and-backup","title":"Security Audit and Backup","text":"<pre><code># Complete IAM audit with backup\naws-cloud-utilities iam audit --output-dir ./iam-backup-$(date +%Y%m%d)\n\n# List all roles for review\naws-cloud-utilities iam list-roles --output-file roles-audit.csv\n</code></pre>"},{"location":"commands/iam/#role-analysis","title":"Role Analysis","text":"<pre><code># Analyze specific role\naws-cloud-utilities iam role-details MyApplicationRole\n\n# Export role configuration\naws-cloud-utilities iam role-details MyApplicationRole --output-file role-config.json\n</code></pre>"},{"location":"commands/iam/#policy-management","title":"Policy Management","text":"<pre><code># List customer-managed policies\naws-cloud-utilities iam list-policies --scope Local\n\n# Get policy details\naws-cloud-utilities iam policy-details arn:aws:iam::123456789012:policy/MyPolicy --all-versions\n</code></pre>"},{"location":"commands/iam/#compliance-review","title":"Compliance Review","text":"<pre><code>#!/bin/bash\n# Daily IAM compliance check\necho \"=== IAM Audit ===\"\naws-cloud-utilities iam audit --output-dir ./iam-audit-$(date +%Y%m%d)\n\necho \"=== All Roles ===\"\naws-cloud-utilities iam list-roles --output-file roles-$(date +%Y%m%d).json\n\necho \"=== Custom Policies ===\"\naws-cloud-utilities iam list-policies --scope Local --output-file policies-$(date +%Y%m%d).json\n</code></pre>"},{"location":"commands/iam/#examples","title":"Examples","text":""},{"location":"commands/iam/#complete-iam-documentation","title":"Complete IAM Documentation","text":"<pre><code>#!/bin/bash\n# Generate complete IAM documentation\nOUTPUT_DIR=\"./iam-docs-$(date +%Y%m%d)\"\nmkdir -p \"$OUTPUT_DIR\"\n\n# Audit all roles and policies\naws-cloud-utilities iam audit --output-dir \"$OUTPUT_DIR/audit\"\n\n# Export roles list\naws-cloud-utilities iam list-roles --output-file \"$OUTPUT_DIR/roles.json\"\n\n# Export policies list\naws-cloud-utilities iam list-policies --scope All --output-file \"$OUTPUT_DIR/policies.json\"\n\necho \"IAM documentation saved to: $OUTPUT_DIR\"\n</code></pre>"},{"location":"commands/iam/#multi-account-iam-inventory","title":"Multi-Account IAM Inventory","text":"<pre><code>#!/bin/bash\n# Multi-account IAM inventory\nfor profile in dev staging prod; do\n    echo \"=== Processing $profile account ===\"\n    aws-cloud-utilities --profile $profile iam audit --output-dir ./iam-audit-$profile\n    aws-cloud-utilities --profile $profile iam list-roles --output-file ./roles-$profile.json\ndone\n</code></pre>"},{"location":"commands/inventory/","title":"Inventory Commands","text":"<p>Resource discovery and inventory commands for comprehensive AWS resource management and analysis.</p>"},{"location":"commands/inventory/#commands","title":"Commands","text":""},{"location":"commands/inventory/#scan","title":"<code>scan</code>","text":"<p>Perform a comprehensive AWS resource inventory scan across services and regions.</p> <pre><code>aws-cloud-utilities inventory scan [OPTIONS]\n</code></pre> <p>Features: - Scans multiple AWS services across regions - Discovers and catalogs all resources - Collects resource metadata and tags - Generates comprehensive inventory reports - Supports parallel region scanning for performance</p> <p>Options: - <code>--services SERVICES</code> - Comma-separated list of services to scan (default: all) - <code>--regions REGIONS</code> - Comma-separated list of regions (default: all enabled regions) - <code>--all-regions</code> - Scan all AWS regions - <code>--include-tags</code> - Include resource tags in output - <code>--output-file FILE</code> - Save results to file (json, yaml, csv) - <code>--parallel-regions NUM</code> - Number of regions to scan in parallel - <code>--resource-types TYPES</code> - Filter by specific resource types</p> <p>Supported Services: - EC2 (instances, volumes, security groups, VPCs) - S3 (buckets) - RDS (database instances) - Lambda (functions) - DynamoDB (tables) - ECS (clusters, services, tasks) - And many more...</p> <p>Examples: <pre><code># Complete inventory scan\naws-cloud-utilities inventory scan\n\n# Scan all regions\naws-cloud-utilities inventory scan --all-regions\n\n# Scan specific services\naws-cloud-utilities inventory scan --services ec2,s3,rds\n\n# Scan specific regions\naws-cloud-utilities inventory scan --regions us-east-1,us-west-2\n\n# Include resource tags\naws-cloud-utilities inventory scan --include-tags\n\n# Parallel scanning for performance\naws-cloud-utilities inventory scan --all-regions --parallel-regions 4\n\n# Save to file\naws-cloud-utilities inventory scan --output-file inventory.json\n</code></pre></p>"},{"location":"commands/inventory/#workspaces","title":"<code>workspaces</code>","text":"<p>List Amazon WorkSpaces instances and configurations.</p> <pre><code>aws-cloud-utilities inventory workspaces [OPTIONS]\n</code></pre> <p>Output includes: - WorkSpace ID and directory ID - User name - WorkSpace state and running mode - Compute type and bundle ID - IP address - Volume encryption status - Root and user volume sizes</p> <p>Options: - <code>--directory-id DIR_ID</code> - Filter by directory ID - <code>--user-name USER</code> - Filter by user name - <code>--region REGION</code> - Specific region (default: current region) - <code>--all-regions</code> - List WorkSpaces from all regions - <code>--output-file FILE</code> - Save results to file</p> <p>Examples: <pre><code># List all WorkSpaces\naws-cloud-utilities inventory workspaces\n\n# WorkSpaces in all regions\naws-cloud-utilities inventory workspaces --all-regions\n\n# Filter by directory\naws-cloud-utilities inventory workspaces --directory-id d-12345abcde\n\n# Filter by user\naws-cloud-utilities inventory workspaces --user-name john.doe\n\n# Export to CSV\naws-cloud-utilities inventory workspaces --output-file workspaces.csv\n</code></pre></p>"},{"location":"commands/inventory/#services","title":"<code>services</code>","text":"<p>Discover and list available AWS services in your account.</p> <pre><code>aws-cloud-utilities inventory services [OPTIONS]\n</code></pre> <p>Features: - Lists all AWS services available in your account - Shows service availability by region - Identifies enabled and available services - Helps with service discovery and planning</p> <p>Options: - <code>--region REGION</code> - Check service availability in specific region - <code>--all-regions</code> - Check service availability across all regions - <code>--service-category CATEGORY</code> - Filter by service category - <code>--output-file FILE</code> - Save results to file</p> <p>Examples: <pre><code># List available services\naws-cloud-utilities inventory services\n\n# Services in specific region\naws-cloud-utilities inventory services --region us-east-1\n\n# Services across all regions\naws-cloud-utilities inventory services --all-regions\n\n# Export to JSON\naws-cloud-utilities inventory services --output-file services.json\n</code></pre></p>"},{"location":"commands/inventory/#download-all","title":"<code>download-all</code>","text":"<p>Download all resource data in bulk for offline analysis.</p> <pre><code>aws-cloud-utilities inventory download-all [OPTIONS]\n</code></pre> <p>Features: - Downloads comprehensive resource inventory - Saves data locally for offline analysis - Includes metadata, configurations, and tags - Organizes data by service and region - Creates timestamped backups</p> <p>Options: - <code>--output-dir DIR</code> - Directory to save inventory data (default: ./inventory-data) - <code>--services SERVICES</code> - Comma-separated list of services to download - <code>--regions REGIONS</code> - Comma-separated list of regions - <code>--all-regions</code> - Download from all regions - <code>--format FORMAT</code> - Output format (json, yaml) [default: json] - <code>--compress</code> - Compress output files</p> <p>Examples: <pre><code># Download all inventory data\naws-cloud-utilities inventory download-all\n\n# Download to specific directory\naws-cloud-utilities inventory download-all --output-dir ./backup\n\n# Download specific services\naws-cloud-utilities inventory download-all --services ec2,s3,rds\n\n# Download from all regions\naws-cloud-utilities inventory download-all --all-regions\n\n# Compress output\naws-cloud-utilities inventory download-all --compress\n\n# YAML format\naws-cloud-utilities inventory download-all --format yaml --output-dir ./inventory-yaml\n</code></pre></p>"},{"location":"commands/inventory/#global-options","title":"Global Options","text":"<p>All inventory commands support these global options:</p> <ul> <li><code>--profile PROFILE</code> - AWS profile to use</li> <li><code>--region REGION</code> - AWS region</li> <li><code>--output FORMAT</code> - Output format (table, json, yaml, csv)</li> <li><code>--verbose</code> - Enable verbose output</li> <li><code>--debug</code> - Enable debug mode</li> </ul>"},{"location":"commands/inventory/#examples","title":"Examples","text":""},{"location":"commands/inventory/#complete-resource-inventory","title":"Complete Resource Inventory","text":"<pre><code>#!/bin/bash\n# Complete resource inventory across all regions\necho \"=== Comprehensive Inventory Scan ===\"\naws-cloud-utilities inventory scan --all-regions --include-tags --output-file complete-inventory.json\n\necho \"=== WorkSpaces Inventory ===\"\naws-cloud-utilities inventory workspaces --all-regions --output-file workspaces.json\n\necho \"=== Available Services ===\"\naws-cloud-utilities inventory services --output-file services.json\n</code></pre>"},{"location":"commands/inventory/#bulk-data-download-for-analysis","title":"Bulk Data Download for Analysis","text":"<pre><code>#!/bin/bash\n# Download all inventory data for offline analysis\nBACKUP_DIR=\"./inventory-backup-$(date +%Y%m%d)\"\n\necho \"=== Downloading All Inventory Data ===\"\naws-cloud-utilities inventory download-all --output-dir \"$BACKUP_DIR\" --all-regions --compress\n\necho \"=== Download Complete ===\"\necho \"Data saved to: $BACKUP_DIR\"\n</code></pre>"},{"location":"commands/inventory/#multi-service-inventory","title":"Multi-Service Inventory","text":"<pre><code>#!/bin/bash\n# Scan specific services across multiple regions\necho \"=== Scanning Core Services ===\"\naws-cloud-utilities inventory scan \\\n  --services ec2,s3,rds,lambda \\\n  --regions us-east-1,us-west-2,eu-west-1 \\\n  --include-tags \\\n  --output-file core-services-inventory.json\n\necho \"=== Parallel Region Scanning ===\"\naws-cloud-utilities inventory scan \\\n  --all-regions \\\n  --parallel-regions 8 \\\n  --output-file parallel-scan.json\n</code></pre>"},{"location":"commands/inventory/#workspaces-management","title":"WorkSpaces Management","text":"<pre><code>#!/bin/bash\n# WorkSpaces inventory and analysis\necho \"=== All WorkSpaces ===\"\naws-cloud-utilities inventory workspaces --all-regions\n\necho \"=== WorkSpaces by Directory ===\"\naws-cloud-utilities inventory workspaces --directory-id d-12345abcde\n\necho \"=== Export WorkSpaces Data ===\"\naws-cloud-utilities inventory workspaces --all-regions --output-file workspaces-report.csv\n</code></pre>"},{"location":"commands/inventory/#common-use-cases","title":"Common Use Cases","text":"<ol> <li> <p>Resource Discovery <pre><code># Discover all resources across account\naws-cloud-utilities inventory scan --all-regions --include-tags\n\n# List available services\naws-cloud-utilities inventory services\n</code></pre></p> </li> <li> <p>Service-Specific Inventory <pre><code># EC2 and S3 only\naws-cloud-utilities inventory scan --services ec2,s3\n\n# WorkSpaces inventory\naws-cloud-utilities inventory workspaces --all-regions\n</code></pre></p> </li> <li> <p>Data Backup and Export <pre><code># Download all inventory data\naws-cloud-utilities inventory download-all --all-regions --compress\n\n# Export to CSV for spreadsheet analysis\naws-cloud-utilities inventory scan --output-file inventory.csv\n</code></pre></p> </li> <li> <p>Multi-Region Analysis <pre><code># Scan all regions with parallel processing\naws-cloud-utilities inventory scan --all-regions --parallel-regions 4\n</code></pre></p> </li> </ol>"},{"location":"commands/inventory/#output-formats","title":"Output Formats","text":""},{"location":"commands/inventory/#table-format-default","title":"Table Format (Default)","text":"<p>Human-readable tables with resource information displayed in the terminal.</p>"},{"location":"commands/inventory/#json-format","title":"JSON Format","text":"<p>Structured data perfect for automation and integration: <pre><code>aws-cloud-utilities inventory scan --output-file inventory.json\n</code></pre></p>"},{"location":"commands/inventory/#csv-format","title":"CSV Format","text":"<p>Spreadsheet-compatible format for analysis in Excel or Google Sheets: <pre><code>aws-cloud-utilities inventory scan --output-file inventory.csv\n</code></pre></p>"},{"location":"commands/inventory/#yaml-format","title":"YAML Format","text":"<p>Configuration-friendly format for documentation: <pre><code>aws-cloud-utilities inventory download-all --format yaml\n</code></pre></p>"},{"location":"commands/inventory/#integration-examples","title":"Integration Examples","text":""},{"location":"commands/inventory/#with-automation-scripts","title":"With Automation Scripts","text":"<pre><code>#!/bin/bash\n# Daily automated inventory\nDATE=$(date +%Y%m%d)\naws-cloud-utilities inventory scan --all-regions --output-file \"inventory-${DATE}.json\"\naws-cloud-utilities inventory workspaces --all-regions --output-file \"workspaces-${DATE}.csv\"\n</code></pre>"},{"location":"commands/inventory/#with-data-analysis-tools","title":"With Data Analysis Tools","text":"<pre><code># Export for analysis with jq\naws-cloud-utilities inventory scan --output-file inventory.json\ncat inventory.json | jq '.resources[] | select(.service == \"ec2\")'\n</code></pre>"},{"location":"commands/inventory/#multi-account-inventory","title":"Multi-Account Inventory","text":"<pre><code>#!/bin/bash\n# Multi-account inventory collection\nfor profile in dev staging prod; do\n    echo \"=== Scanning $profile account ===\"\n    aws-cloud-utilities --profile $profile inventory scan \\\n      --all-regions \\\n      --output-file \"inventory-${profile}.json\"\n\n    aws-cloud-utilities --profile $profile inventory download-all \\\n      --output-dir \"./backup-${profile}\" \\\n      --all-regions\ndone\n</code></pre>"},{"location":"commands/inventory/#performance-tips","title":"Performance Tips","text":"<ol> <li> <p>Use Parallel Scanning: Speed up multi-region scans with <code>--parallel-regions</code> <pre><code>aws-cloud-utilities inventory scan --all-regions --parallel-regions 8\n</code></pre></p> </li> <li> <p>Filter Services: Only scan needed services to reduce time    <pre><code>aws-cloud-utilities inventory scan --services ec2,s3,rds\n</code></pre></p> </li> <li> <p>Regional Scoping: Limit to specific regions if global scan isn't needed    <pre><code>aws-cloud-utilities inventory scan --regions us-east-1,us-west-2\n</code></pre></p> </li> </ol>"},{"location":"commands/inventory/#best-practices","title":"Best Practices","text":"<ol> <li>Regular Inventory Scans: Schedule periodic scans to track resource changes</li> <li>Tag Inclusion: Always use <code>--include-tags</code> for comprehensive data</li> <li>Data Backup: Use <code>download-all</code> for compliance and audit records</li> <li>Multi-Format Export: Keep both JSON (for automation) and CSV (for analysis)</li> </ol>"},{"location":"commands/logs/","title":"Logs Commands","text":"<p>CloudWatch logs management commands for log analysis, aggregation, and monitoring.</p>"},{"location":"commands/logs/#commands","title":"Commands","text":""},{"location":"commands/logs/#list-groups","title":"<code>list-groups</code>","text":"<p>List CloudWatch log groups with details and optional size information.</p> <pre><code>aws-cloud-utilities logs list-groups [OPTIONS]\n</code></pre> <p>Output includes: - Log group name - Creation time - Retention policy - Stored bytes (optional) - Metric filters count</p> <p>Options: - <code>--region REGION</code> - AWS region (default: current region) - <code>--all-regions</code> - List log groups from all regions - <code>--prefix PREFIX</code> - Filter by log group name prefix - <code>--include-size</code> - Include size information from CloudWatch metrics - <code>--output-file FILE</code> - Save results to file (json, yaml, csv)</p> <p>Examples: <pre><code># List all log groups\naws-cloud-utilities logs list-groups\n\n# List across all regions\naws-cloud-utilities logs list-groups --all-regions\n\n# Filter Lambda log groups\naws-cloud-utilities logs list-groups --prefix /aws/lambda/\n\n# Include size information\naws-cloud-utilities logs list-groups --include-size\n\n# Export to file\naws-cloud-utilities logs list-groups --output-file log-groups.json\n</code></pre></p>"},{"location":"commands/logs/#download","title":"<code>download</code>","text":"<p>Download logs from CloudWatch log groups.</p> <pre><code>aws-cloud-utilities logs download LOG_GROUP_NAME [OPTIONS]\n</code></pre> <p>Arguments: - <code>LOG_GROUP_NAME</code> - Name of the log group to download</p> <p>Options: - <code>--start-time TIME</code> - Start time for log download (ISO format or relative) - <code>--end-time TIME</code> - End time for log download - <code>--output-dir DIR</code> - Directory to save downloaded logs - <code>--output-file FILE</code> - Specific output file name - <code>--filter-pattern PATTERN</code> - CloudWatch Logs filter pattern - <code>--streams STREAMS</code> - Comma-separated list of log streams to download - <code>--format FORMAT</code> - Output format (json, text) [default: text]</p> <p>Examples: <pre><code># Download all recent logs\naws-cloud-utilities logs download /aws/lambda/my-function\n\n# Download with time range\naws-cloud-utilities logs download /aws/lambda/my-function \\\n  --start-time \"2024-01-01 00:00:00\" \\\n  --end-time \"2024-01-01 23:59:59\"\n\n# Download to specific directory\naws-cloud-utilities logs download /aws/lambda/my-function --output-dir ./logs\n\n# Apply filter pattern\naws-cloud-utilities logs download /aws/lambda/my-function --filter-pattern \"ERROR\"\n\n# Download as JSON\naws-cloud-utilities logs download /aws/lambda/my-function --format json\n</code></pre></p>"},{"location":"commands/logs/#set-retention","title":"<code>set-retention</code>","text":"<p>Set or update log retention policies for CloudWatch log groups.</p> <pre><code>aws-cloud-utilities logs set-retention LOG_GROUP_NAME RETENTION_DAYS [OPTIONS]\n</code></pre> <p>Arguments: - <code>LOG_GROUP_NAME</code> - Name of the log group - <code>RETENTION_DAYS</code> - Retention period in days (1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653)</p> <p>Options: - <code>--region REGION</code> - AWS region - <code>--all-log-groups</code> - Apply to all log groups (use with caution) - <code>--prefix PREFIX</code> - Apply to log groups matching prefix - <code>--dry-run</code> - Show what would be changed without applying</p> <p>Examples: <pre><code># Set retention for specific log group\naws-cloud-utilities logs set-retention /aws/lambda/my-function 30\n\n# Set retention for all Lambda functions\naws-cloud-utilities logs set-retention --prefix /aws/lambda/ --retention-days 7\n\n# Dry run to see what would change\naws-cloud-utilities logs set-retention --prefix /aws/lambda/ --retention-days 14 --dry-run\n\n# Apply to all log groups (use carefully!)\naws-cloud-utilities logs set-retention --all-log-groups 90\n</code></pre></p>"},{"location":"commands/logs/#delete-group","title":"<code>delete-group</code>","text":"<p>Delete CloudWatch log groups with confirmation.</p> <pre><code>aws-cloud-utilities logs delete-group LOG_GROUP_NAME [OPTIONS]\n</code></pre> <p>Arguments: - <code>LOG_GROUP_NAME</code> - Name of the log group to delete</p> <p>Options: - <code>--region REGION</code> - AWS region - <code>--force</code> - Skip confirmation prompt - <code>--prefix PREFIX</code> - Delete all log groups matching prefix (dangerous!)</p> <p>Examples: <pre><code># Delete specific log group (with confirmation)\naws-cloud-utilities logs delete-group /aws/lambda/old-function\n\n# Delete without confirmation\naws-cloud-utilities logs delete-group /aws/lambda/old-function --force\n\n# Delete all log groups with prefix (very dangerous!)\naws-cloud-utilities logs delete-group --prefix /aws/lambda/test- --force\n</code></pre></p>"},{"location":"commands/logs/#combine","title":"<code>combine</code>","text":"<p>Combine and aggregate logs from multiple CloudWatch log sources.</p> <pre><code>aws-cloud-utilities logs combine [OPTIONS]\n</code></pre> <p>Features: - Merges logs from multiple log groups - Sorts logs chronologically - Combines log streams - Deduplicates entries</p> <p>Options: - <code>--log-groups GROUPS</code> - Comma-separated list of log groups - <code>--prefix PREFIX</code> - Combine all log groups matching prefix - <code>--start-time TIME</code> - Start time for log combination - <code>--end-time TIME</code> - End time for log combination - <code>--output-file FILE</code> - Output file for combined logs - <code>--format FORMAT</code> - Output format (json, text)</p> <p>Examples: <pre><code># Combine multiple log groups\naws-cloud-utilities logs combine \\\n  --log-groups /aws/lambda/function1,/aws/lambda/function2,/aws/lambda/function3\n\n# Combine all Lambda logs\naws-cloud-utilities logs combine --prefix /aws/lambda/\n\n# Combine with time range\naws-cloud-utilities logs combine \\\n  --log-groups /aws/lambda/function1,/aws/lambda/function2 \\\n  --start-time \"2024-01-01\" \\\n  --end-time \"2024-01-02\" \\\n  --output-file combined-logs.txt\n</code></pre></p>"},{"location":"commands/logs/#aggregate","title":"<code>aggregate</code>","text":"<p>Aggregate logs from S3 sources (CloudTrail, CloudFront, ELB, ALB, Route53).</p> <pre><code>aws-cloud-utilities logs aggregate [OPTIONS]\n</code></pre> <p>Supported log types: - AWS CloudTrail logs - CloudFront access logs - ELB (Classic Load Balancer) logs - ALB (Application Load Balancer) logs - Route53 query logs</p> <p>Options: - <code>--bucket BUCKET</code> - S3 bucket containing logs - <code>--prefix PREFIX</code> - S3 prefix for logs - <code>--log-type TYPE</code> - Type of logs (cloudtrail, cloudfront, elb, alb, route53) - <code>--start-date DATE</code> - Start date for aggregation - <code>--end-date DATE</code> - End date for aggregation - <code>--output-file FILE</code> - Output file for aggregated logs - <code>--format FORMAT</code> - Output format (json, csv, text)</p> <p>Examples: <pre><code># Aggregate CloudTrail logs\naws-cloud-utilities logs aggregate \\\n  --bucket my-cloudtrail-bucket \\\n  --prefix AWSLogs/123456789012/CloudTrail/ \\\n  --log-type cloudtrail\n\n# Aggregate CloudFront logs\naws-cloud-utilities logs aggregate \\\n  --bucket my-cloudfront-logs \\\n  --log-type cloudfront \\\n  --start-date 2024-01-01 \\\n  --end-date 2024-01-31\n\n# Aggregate ALB logs to CSV\naws-cloud-utilities logs aggregate \\\n  --bucket my-alb-logs \\\n  --log-type alb \\\n  --format csv \\\n  --output-file alb-analysis.csv\n\n# Aggregate with specific prefix\naws-cloud-utilities logs aggregate \\\n  --bucket my-logs-bucket \\\n  --prefix elasticloadbalancing/ \\\n  --log-type elb \\\n  --output-file elb-logs.json\n</code></pre></p>"},{"location":"commands/logs/#global-options","title":"Global Options","text":"<p>All logs commands support these global options:</p> <ul> <li><code>--profile PROFILE</code> - AWS profile to use</li> <li><code>--region REGION</code> - AWS region</li> <li><code>--output FORMAT</code> - Output format (table, json, yaml, csv)</li> <li><code>--verbose</code> - Enable verbose output</li> <li><code>--debug</code> - Enable debug mode</li> </ul>"},{"location":"commands/logs/#common-use-cases","title":"Common Use Cases","text":""},{"location":"commands/logs/#log-group-management","title":"Log Group Management","text":"<pre><code>#!/bin/bash\n# Manage CloudWatch log groups\n\necho \"=== List All Log Groups ===\"\naws-cloud-utilities logs list-groups --include-size\n\necho \"=== Set Retention for Lambda Logs ===\"\naws-cloud-utilities logs set-retention --prefix /aws/lambda/ 30\n\necho \"=== Delete Old Test Log Groups ===\"\naws-cloud-utilities logs delete-group --prefix /aws/lambda/test- --force\n</code></pre>"},{"location":"commands/logs/#log-download-and-analysis","title":"Log Download and Analysis","text":"<pre><code>#!/bin/bash\n# Download logs for analysis\n\nFUNCTION_NAME=\"my-lambda-function\"\nDATE=$(date +%Y%m%d)\n\necho \"=== Downloading Logs ===\"\naws-cloud-utilities logs download /aws/lambda/$FUNCTION_NAME \\\n  --start-time \"24 hours ago\" \\\n  --output-file \"logs-${DATE}.txt\"\n\necho \"=== Downloading Error Logs ===\"\naws-cloud-utilities logs download /aws/lambda/$FUNCTION_NAME \\\n  --filter-pattern \"ERROR\" \\\n  --output-file \"errors-${DATE}.txt\"\n</code></pre>"},{"location":"commands/logs/#multi-service-log-aggregation","title":"Multi-Service Log Aggregation","text":"<pre><code>#!/bin/bash\n# Aggregate logs from multiple services\n\necho \"=== Combining Application Logs ===\"\naws-cloud-utilities logs combine \\\n  --log-groups /aws/lambda/api,/aws/lambda/processor,/aws/lambda/worker \\\n  --start-time \"2024-01-01\" \\\n  --output-file combined-app-logs.txt\n\necho \"=== Aggregating CloudTrail Logs ===\"\naws-cloud-utilities logs aggregate \\\n  --bucket my-cloudtrail-bucket \\\n  --log-type cloudtrail \\\n  --start-date 2024-01-01 \\\n  --end-date 2024-01-31 \\\n  --output-file cloudtrail-january.json\n</code></pre>"},{"location":"commands/logs/#s3-log-analysis","title":"S3 Log Analysis","text":"<pre><code>#!/bin/bash\n# Analyze S3-based logs\n\necho \"=== CloudFront Log Analysis ===\"\naws-cloud-utilities logs aggregate \\\n  --bucket my-cloudfront-logs \\\n  --log-type cloudfront \\\n  --format csv \\\n  --output-file cloudfront-analysis.csv\n\necho \"=== ALB Log Analysis ===\"\naws-cloud-utilities logs aggregate \\\n  --bucket my-alb-logs \\\n  --log-type alb \\\n  --format json \\\n  --output-file alb-requests.json\n</code></pre>"},{"location":"commands/logs/#retention-policy-management","title":"Retention Policy Management","text":"<pre><code>#!/bin/bash\n# Manage log retention across account\n\necho \"=== Checking Current Retention ===\"\naws-cloud-utilities logs list-groups --all-regions --output-file current-retention.csv\n\necho \"=== Setting Standard Retention ===\"\n# Lambda functions: 30 days\naws-cloud-utilities logs set-retention --prefix /aws/lambda/ 30\n\n# API Gateway: 14 days\naws-cloud-utilities logs set-retention --prefix /aws/apigateway/ 14\n\n# ECS: 7 days\naws-cloud-utilities logs set-retention --prefix /aws/ecs/ 7\n</code></pre>"},{"location":"commands/logs/#best-practices","title":"Best Practices","text":"<ol> <li> <p>Set Retention Policies: Always set appropriate retention to control costs    <pre><code>aws-cloud-utilities logs set-retention --prefix /aws/lambda/ 30\n</code></pre></p> </li> <li> <p>Regular Log Downloads: Download important logs for long-term storage    <pre><code>aws-cloud-utilities logs download /aws/lambda/critical-function --output-dir ./archives\n</code></pre></p> </li> <li> <p>Use Filters: Apply filter patterns to reduce download size    <pre><code>aws-cloud-utilities logs download /aws/lambda/function --filter-pattern \"ERROR\"\n</code></pre></p> </li> <li> <p>Aggregate S3 Logs: Regularly aggregate S3 logs for analysis    <pre><code>aws-cloud-utilities logs aggregate --bucket logs --log-type cloudtrail\n</code></pre></p> </li> </ol>"},{"location":"commands/logs/#performance-tips","title":"Performance Tips","text":"<ol> <li>Parallel Downloads: Download from multiple log groups in parallel</li> <li>Time Range Filters: Always specify time ranges to reduce data transfer</li> <li>Filter Patterns: Use CloudWatch filter patterns to reduce download volume</li> <li>Regional Downloads: Specify region to avoid unnecessary API calls</li> </ol>"},{"location":"commands/networking/","title":"Networking Commands","text":"<p>Network utilities and analysis commands for AWS networking operations.</p>"},{"location":"commands/networking/#commands","title":"Commands","text":""},{"location":"commands/networking/#ip-ranges","title":"<code>ip-ranges</code>","text":"<p>Get AWS IP ranges for services and regions with filtering options.</p> <pre><code>aws-cloud-utilities networking ip-ranges\n</code></pre> <p>Options: - <code>--service SERVICE</code> - Filter by AWS service (e.g., EC2, S3, CLOUDFRONT, ROUTE53) - <code>--region REGION</code> - Filter by AWS region - <code>--network-border-group GROUP</code> - Filter by network border group - <code>--output-file FILE</code> - Save results to file - <code>--format FORMAT</code> - Output format (cidr, json, csv) [default: table]</p> <p>Examples: <pre><code># Get all AWS IP ranges\naws-cloud-utilities networking ip-ranges\n\n# Get IP ranges for specific service\naws-cloud-utilities networking ip-ranges --service EC2\n\n# Get IP ranges for specific region\naws-cloud-utilities networking ip-ranges --region us-east-1\n\n# Get CloudFront IP ranges\naws-cloud-utilities networking ip-ranges --service CLOUDFRONT\n\n# Save to file in CIDR format\naws-cloud-utilities networking ip-ranges --service S3 --format cidr --output-file s3-ranges.txt\n\n# Get ranges for specific service and region\naws-cloud-utilities networking ip-ranges --service EC2 --region us-west-2\n</code></pre></p>"},{"location":"commands/networking/#ip-summary","title":"<code>ip-summary</code>","text":"<p>Get summary statistics of AWS IP ranges by service and region.</p> <pre><code>aws-cloud-utilities networking ip-summary\n</code></pre> <p>Options: - <code>--by-service</code> - Group summary by AWS service - <code>--by-region</code> - Group summary by AWS region - <code>--include-ipv6</code> - Include IPv6 ranges in summary - <code>--output-file FILE</code> - Save results to file</p> <p>Examples: <pre><code># Get overall IP range summary\naws-cloud-utilities networking ip-summary\n\n# Summary grouped by service\naws-cloud-utilities networking ip-summary --by-service\n\n# Summary grouped by region\naws-cloud-utilities networking ip-summary --by-region\n\n# Include IPv6 ranges\naws-cloud-utilities networking ip-summary --include-ipv6\n\n# Save summary to file\naws-cloud-utilities networking ip-summary --by-service --output-file ip-summary.json\n</code></pre></p>"},{"location":"commands/networking/#global-options","title":"Global Options","text":"<p>All networking commands support these global options:</p> <ul> <li><code>--profile PROFILE</code> - AWS profile to use</li> <li><code>--region REGION</code> - AWS region (for API calls, not filtering)</li> <li><code>--output FORMAT</code> - Output format (table, json, yaml, csv)</li> <li><code>--verbose</code> - Enable verbose output</li> <li><code>--debug</code> - Enable debug mode</li> </ul>"},{"location":"commands/networking/#examples","title":"Examples","text":""},{"location":"commands/networking/#security-group-rule-generation","title":"Security Group Rule Generation","text":"<pre><code>#!/bin/bash\n# Generate security group rules for AWS services\n\nSERVICE=\"S3\"\nOUTPUT_DIR=\"./security-rules-$(date +%Y%m%d)\"\n\nmkdir -p $OUTPUT_DIR\n\necho \"=== Getting $SERVICE IP Ranges ===\"\naws-cloud-utilities networking ip-ranges --service $SERVICE --format cidr --output-file $OUTPUT_DIR/${SERVICE,,}-ranges.txt\n\necho \"=== Generating Security Group Rules ===\"\n# Convert CIDR ranges to security group rules format\nwhile read cidr; do\n    echo \"aws ec2 authorize-security-group-ingress --group-id sg-xxxxxxxx --protocol tcp --port 443 --cidr $cidr\"\ndone &lt; $OUTPUT_DIR/${SERVICE,,}-ranges.txt &gt; $OUTPUT_DIR/${SERVICE,,}-sg-rules.sh\n\nchmod +x $OUTPUT_DIR/${SERVICE,,}-sg-rules.sh\n\necho \"=== Rules Generated ===\"\necho \"Security group rules saved to: $OUTPUT_DIR/${SERVICE,,}-sg-rules.sh\"\n</code></pre>"},{"location":"commands/networking/#firewall-configuration-script","title":"Firewall Configuration Script","text":"<pre><code>#!/bin/bash\n# Generate firewall rules for AWS services\n\nSERVICES=(\"EC2\" \"S3\" \"CLOUDFRONT\" \"ROUTE53\")\nFIREWALL_DIR=\"./firewall-rules-$(date +%Y%m%d)\"\n\nmkdir -p $FIREWALL_DIR\n\nfor service in \"${SERVICES[@]}\"; do\n    echo \"=== Processing $service ===\"\n\n    # Get IP ranges\n    aws-cloud-utilities networking ip-ranges --service $service --format cidr --output-file $FIREWALL_DIR/${service,,}-ranges.txt\n\n    # Generate iptables rules\n    echo \"# $service IP ranges\" &gt; $FIREWALL_DIR/${service,,}-iptables.rules\n    while read cidr; do\n        echo \"iptables -A OUTPUT -d $cidr -j ACCEPT\" &gt;&gt; $FIREWALL_DIR/${service,,}-iptables.rules\n    done &lt; $FIREWALL_DIR/${service,,}-ranges.txt\n\n    echo \"$service rules generated\"\ndone\n\necho \"=== Firewall Rules Complete ===\"\necho \"Rules saved to: $FIREWALL_DIR\"\n</code></pre>"},{"location":"commands/networking/#network-analysis-report","title":"Network Analysis Report","text":"<pre><code>#!/bin/bash\n# Generate comprehensive network analysis report\n\nREPORT_DIR=\"./network-analysis-$(date +%Y%m%d)\"\nmkdir -p $REPORT_DIR\n\necho \"=== AWS IP Range Analysis ===\"\n\n# Overall summary\naws-cloud-utilities networking ip-summary --output-file $REPORT_DIR/overall-summary.json\n\n# Service breakdown\naws-cloud-utilities networking ip-summary --by-service --output-file $REPORT_DIR/service-summary.json\n\n# Region breakdown\naws-cloud-utilities networking ip-summary --by-region --output-file $REPORT_DIR/region-summary.json\n\n# IPv6 analysis\naws-cloud-utilities networking ip-summary --include-ipv6 --output-file $REPORT_DIR/ipv6-summary.json\n\n# Service-specific ranges\nSERVICES=(\"EC2\" \"S3\" \"CLOUDFRONT\" \"ROUTE53\" \"DYNAMODB\")\nfor service in \"${SERVICES[@]}\"; do\n    aws-cloud-utilities networking ip-ranges --service $service --output-file $REPORT_DIR/${service,,}-ranges.json\ndone\n\necho \"=== Analysis Complete ===\"\necho \"Report saved to: $REPORT_DIR\"\n</code></pre>"},{"location":"commands/networking/#regional-network-planning","title":"Regional Network Planning","text":"<pre><code>#!/bin/bash\n# Plan network configuration for specific regions\n\nREGIONS=(\"us-east-1\" \"us-west-2\" \"eu-west-1\" \"ap-southeast-1\")\nPLANNING_DIR=\"./network-planning-$(date +%Y%m%d)\"\n\nmkdir -p $PLANNING_DIR\n\nfor region in \"${REGIONS[@]}\"; do\n    echo \"=== Analyzing $region ===\"\n\n    # Get EC2 ranges for the region\n    aws-cloud-utilities networking ip-ranges --service EC2 --region $region --output-file $PLANNING_DIR/ec2-$region.json\n\n    # Get S3 ranges for the region\n    aws-cloud-utilities networking ip-ranges --service S3 --region $region --output-file $PLANNING_DIR/s3-$region.json\n\n    echo \"$region analysis complete\"\ndone\n\n# Generate regional summary\naws-cloud-utilities networking ip-summary --by-region --output-file $PLANNING_DIR/regional-summary.json\n\necho \"=== Network Planning Complete ===\"\necho \"Planning data saved to: $PLANNING_DIR\"\n</code></pre>"},{"location":"commands/networking/#common-use-cases","title":"Common Use Cases","text":"<ol> <li> <p>Security Group Configuration <pre><code>aws-cloud-utilities networking ip-ranges --service S3 --format cidr\naws-cloud-utilities networking ip-ranges --service CLOUDFRONT --format cidr\n</code></pre></p> </li> <li> <p>Firewall Rule Generation <pre><code>aws-cloud-utilities networking ip-ranges --service EC2 --region us-east-1 --format cidr\naws-cloud-utilities networking ip-ranges --service ROUTE53 --format cidr\n</code></pre></p> </li> <li> <p>Network Planning <pre><code>aws-cloud-utilities networking ip-summary --by-service\naws-cloud-utilities networking ip-summary --by-region\n</code></pre></p> </li> <li> <p>Compliance and Auditing <pre><code>aws-cloud-utilities networking ip-ranges --output-file aws-ip-ranges.json\naws-cloud-utilities networking ip-summary --include-ipv6\n</code></pre></p> </li> </ol>"},{"location":"commands/networking/#integration-with-other-tools","title":"Integration with Other Tools","text":"<p>Networking commands work well with other AWS Cloud Utilities:</p> <pre><code># Combine with security audit\naws-cloud-utilities security blue-team-audit\naws-cloud-utilities networking ip-ranges --service EC2\n\n# Combine with inventory\naws-cloud-utilities inventory resources --resource-type vpc\naws-cloud-utilities networking ip-summary --by-region\n</code></pre>"},{"location":"commands/networking/#use-cases-by-service","title":"Use Cases by Service","text":""},{"location":"commands/networking/#ec2-security-groups","title":"EC2 Security Groups","text":"<pre><code># Get EC2 IP ranges for security group rules\naws-cloud-utilities networking ip-ranges --service EC2 --region us-east-1 --format cidr\n</code></pre>"},{"location":"commands/networking/#cloudfront-access-control","title":"CloudFront Access Control","text":"<pre><code># Get CloudFront IP ranges for origin access control\naws-cloud-utilities networking ip-ranges --service CLOUDFRONT --format cidr\n</code></pre>"},{"location":"commands/networking/#s3-bucket-policies","title":"S3 Bucket Policies","text":"<pre><code># Get S3 IP ranges for bucket policy conditions\naws-cloud-utilities networking ip-ranges --service S3 --format cidr\n</code></pre>"},{"location":"commands/networking/#route-53-health-checks","title":"Route 53 Health Checks","text":"<pre><code># Get Route 53 IP ranges for health check allowlists\naws-cloud-utilities networking ip-ranges --service ROUTE53 --format cidr\n</code></pre>"},{"location":"commands/networking/#best-practices","title":"Best Practices","text":"<ul> <li>Regularly update firewall rules with latest AWS IP ranges</li> <li>Use service-specific IP ranges rather than broad ranges when possible</li> <li>Consider regional requirements when filtering IP ranges</li> <li>Automate IP range updates in security configurations</li> <li>Monitor AWS IP range changes for security impact</li> <li>Use CIDR format for most firewall and security group applications</li> <li>Include IPv6 ranges in modern network configurations</li> </ul>"},{"location":"commands/rds/","title":"RDS Commands","text":"<p>The RDS command group provides tools for managing and troubleshooting Amazon RDS instances, with specialized support for MySQL connection issues.</p>"},{"location":"commands/rds/#commands","title":"Commands","text":""},{"location":"commands/rds/#troubleshoot-mysql","title":"troubleshoot-mysql","text":"<p>Analyze MySQL RDS instances for connection-related issues, including the common \"too many connections\" error.</p> <pre><code>aws-cloud-utilities rds troubleshoot-mysql &lt;DB_INSTANCE_IDENTIFIER&gt; [OPTIONS]\n</code></pre>"},{"location":"commands/rds/#arguments","title":"Arguments","text":"<ul> <li><code>DB_INSTANCE_IDENTIFIER</code>: The RDS instance identifier to troubleshoot</li> </ul>"},{"location":"commands/rds/#options","title":"Options","text":"<ul> <li><code>--output-file FILE</code>: Save detailed results to a JSON file</li> <li><code>--profile PROFILE</code>: AWS profile to use</li> <li><code>--region REGION</code>: AWS region</li> <li><code>--output FORMAT</code>: Output format (table, json, yaml, csv)</li> </ul>"},{"location":"commands/rds/#examples","title":"Examples","text":"<pre><code># Basic troubleshooting\naws-cloud-utilities rds troubleshoot-mysql my-mysql-db\n\n# Save detailed results to file\naws-cloud-utilities rds troubleshoot-mysql my-mysql-db --output-file mysql-analysis.json\n\n# Use specific profile and region\naws-cloud-utilities rds troubleshoot-mysql my-mysql-db --profile production --region us-west-2\n</code></pre>"},{"location":"commands/rds/#what-it-analyzes","title":"What it analyzes","text":"<ol> <li>Instance Information</li> <li>Instance class and specifications</li> <li>Engine version and status</li> <li>Multi-AZ configuration</li> <li> <p>Performance Insights status</p> </li> <li> <p>Connection Metrics (Last 24 Hours)</p> </li> <li>Database connections (current and peak)</li> <li>Connection attempts</li> <li>Aborted connections</li> <li> <p>Thread statistics</p> </li> <li> <p>Parameter Groups</p> </li> <li>Connection-related parameters</li> <li>Current values and sources</li> <li> <p>Modifiable parameters</p> </li> <li> <p>Error Logs</p> </li> <li>Recent connection-related errors</li> <li>\"Too many connections\" occurrences</li> <li> <p>Connection timeouts and resets</p> </li> <li> <p>Recommendations</p> </li> <li>Prioritized action items</li> <li>Configuration suggestions</li> <li>Best practice recommendations</li> </ol>"},{"location":"commands/rds/#list-instances","title":"list-instances","text":"<p>List RDS instances in the current region with optional filtering.</p> <pre><code>aws-cloud-utilities rds list-instances [OPTIONS]\n</code></pre>"},{"location":"commands/rds/#options_1","title":"Options","text":"<ul> <li><code>--engine ENGINE</code>: Filter by database engine (mysql, postgres, etc.)</li> <li><code>--status STATUS</code>: Filter by instance status (available, stopped, etc.)</li> </ul>"},{"location":"commands/rds/#examples_1","title":"Examples","text":"<pre><code># List all RDS instances\naws-cloud-utilities rds list-instances\n\n# List only MySQL instances\naws-cloud-utilities rds list-instances --engine mysql\n\n# List only available instances\naws-cloud-utilities rds list-instances --status available\n</code></pre>"},{"location":"commands/rds/#common-mysql-connection-issues","title":"Common MySQL Connection Issues","text":""},{"location":"commands/rds/#too-many-connections-error","title":"Too Many Connections Error","text":"<p>This error occurs when the number of concurrent connections exceeds the <code>max_connections</code> parameter value.</p> <p>Common causes: - Application not using connection pooling - Connection leaks in application code - Insufficient <code>max_connections</code> setting - High traffic without proper scaling</p> <p>Solutions: 1. Implement connection pooling in your application 2. Increase <code>max_connections</code> parameter 3. Upgrade to a larger instance class 4. Use read replicas to distribute load 5. Fix connection leaks in application code</p>"},{"location":"commands/rds/#high-aborted-connections","title":"High Aborted Connections","text":"<p>Indicates connections being terminated unexpectedly.</p> <p>Common causes: - Network timeouts - Application connection handling issues - Security group or firewall issues - Client-side connection drops</p> <p>Solutions: 1. Check network connectivity 2. Review application connection handling 3. Adjust timeout parameters 4. Monitor security group rules</p>"},{"location":"commands/rds/#parameter-tuning","title":"Parameter Tuning","text":""},{"location":"commands/rds/#key-connection-parameters","title":"Key Connection Parameters","text":"<ul> <li><code>max_connections</code>: Maximum number of concurrent connections</li> <li><code>connect_timeout</code>: Connection establishment timeout</li> <li><code>wait_timeout</code>: Time to wait for activity on a connection</li> <li><code>interactive_timeout</code>: Timeout for interactive connections</li> <li><code>thread_cache_size</code>: Number of threads to cache for reuse</li> </ul>"},{"location":"commands/rds/#best-practices","title":"Best Practices","text":"<ol> <li>Connection Pooling: Always use connection pooling in applications</li> <li>Right-sizing: Choose appropriate instance classes for your workload</li> <li>Monitoring: Set up CloudWatch alarms for connection metrics</li> <li>Read Replicas: Use read replicas to distribute read traffic</li> <li>Parameter Groups: Create custom parameter groups for production workloads</li> </ol>"},{"location":"commands/rds/#monitoring-and-alerting","title":"Monitoring and Alerting","text":""},{"location":"commands/rds/#recommended-cloudwatch-alarms","title":"Recommended CloudWatch Alarms","text":"<pre><code># Database connections approaching limit\nDatabaseConnections &gt; 80% of max_connections\n\n# High aborted connections\nAbortedConnections &gt; 10 per 5 minutes\n\n# High connection attempts\nConnectionAttempts &gt; normal baseline + 50%\n</code></pre>"},{"location":"commands/rds/#performance-insights","title":"Performance Insights","text":"<p>Enable Performance Insights for detailed analysis of: - Top SQL statements - Wait events - Database load - Connection patterns</p>"},{"location":"commands/rds/#troubleshooting-workflow","title":"Troubleshooting Workflow","text":"<ol> <li> <p>Run the troubleshoot command <pre><code>aws-cloud-utilities rds troubleshoot-mysql your-db-instance\n</code></pre></p> </li> <li> <p>Review the analysis results</p> </li> <li>Check current connection metrics</li> <li>Look for error patterns in logs</li> <li> <p>Review parameter configurations</p> </li> <li> <p>Implement recommendations</p> </li> <li>Start with high-priority items</li> <li>Test changes in non-production first</li> <li> <p>Monitor impact of changes</p> </li> <li> <p>Follow up monitoring</p> </li> <li>Set up CloudWatch alarms</li> <li>Enable Performance Insights</li> <li>Regular health checks</li> </ol>"},{"location":"commands/rds/#integration-with-other-tools","title":"Integration with Other Tools","text":"<p>The RDS troubleshooting tool integrates with: - CloudWatch metrics and logs - Performance Insights (when enabled) - Parameter groups - Security groups (via instance info)</p>"},{"location":"commands/rds/#output-formats","title":"Output Formats","text":""},{"location":"commands/rds/#table-format-default","title":"Table Format (Default)","text":"<p>Provides a clean, readable summary with color-coded recommendations.</p>"},{"location":"commands/rds/#json-format","title":"JSON Format","text":"<p>Detailed machine-readable output suitable for automation and further analysis.</p>"},{"location":"commands/rds/#file-output","title":"File Output","text":"<p>Save complete analysis results to a JSON file for: - Historical tracking - Sharing with team members - Integration with other tools - Compliance documentation</p>"},{"location":"commands/rds/#security-considerations","title":"Security Considerations","text":"<ul> <li>The tool only reads RDS configuration and metrics</li> <li>No sensitive data is displayed in output</li> <li>Uses your existing AWS credentials and permissions</li> <li>Follows AWS IAM best practices</li> </ul>"},{"location":"commands/rds/#required-permissions","title":"Required Permissions","text":"<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"rds:DescribeDBInstances\",\n                \"rds:DescribeDBParameters\",\n                \"rds:DescribeDBLogFiles\",\n                \"rds:DownloadDBLogFilePortion\",\n                \"cloudwatch:GetMetricStatistics\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n</code></pre>"},{"location":"commands/s3/","title":"S3 Commands","text":"<p>AWS S3 bucket and object management commands for comprehensive S3 operations.</p>"},{"location":"commands/s3/#commands","title":"Commands","text":""},{"location":"commands/s3/#list-buckets","title":"<code>list-buckets</code>","text":"<p>List S3 buckets with details including region and optional size information.</p> <pre><code>aws-cloud-utilities s3 list-buckets\n</code></pre> <p>Options: - <code>--region REGION</code> - Filter buckets by region (default: show all regions) - <code>--all-regions</code> - Show buckets from all regions (default behavior) - <code>--include-size</code> - Include bucket size information from CloudWatch metrics - <code>--output-file FILE</code> - Output file for bucket list (supports .json, .yaml, .csv)</p> <p>Examples: <pre><code># List all buckets\naws-cloud-utilities s3 list-buckets\n\n# List buckets in specific region\naws-cloud-utilities s3 list-buckets --region us-east-1\n\n# Include size information\naws-cloud-utilities s3 list-buckets --include-size\n\n# Save to file\naws-cloud-utilities s3 list-buckets --output-file buckets.json\n</code></pre></p>"},{"location":"commands/s3/#create-bucket","title":"<code>create-bucket</code>","text":"<p>Create a new S3 bucket with optional configuration.</p> <pre><code>aws-cloud-utilities s3 create-bucket BUCKET_NAME\n</code></pre> <p>Arguments: - <code>BUCKET_NAME</code> - Name of the bucket to create</p> <p>Options: - <code>--region REGION</code> - AWS region for the bucket (default: current region or us-west-2) - <code>--versioning</code> - Enable versioning on the bucket - <code>--encryption</code> - Enable default encryption on the bucket - <code>--public-access-block</code> - Enable public access block (default: enabled)</p> <p>Examples: <pre><code># Create basic bucket\naws-cloud-utilities s3 create-bucket my-new-bucket\n\n# Create bucket with versioning and encryption\naws-cloud-utilities s3 create-bucket my-secure-bucket --versioning --encryption\n\n# Create bucket in specific region\naws-cloud-utilities s3 create-bucket my-regional-bucket --region us-west-2\n</code></pre></p>"},{"location":"commands/s3/#download","title":"<code>download</code>","text":"<p>Download objects from S3 bucket with various filtering options.</p> <pre><code>aws-cloud-utilities s3 download BUCKET_NAME\n</code></pre> <p>Arguments: - <code>BUCKET_NAME</code> - Name of the S3 bucket</p> <p>Options: - <code>--prefix PREFIX</code> - Object prefix to filter downloads - <code>--local-dir DIR</code> - Local directory to download to (default: current directory) - <code>--max-objects NUM</code> - Maximum number of objects to download - <code>--dry-run</code> - Show what would be downloaded without actually downloading - <code>--include-pattern PATTERN</code> - Include objects matching pattern - <code>--exclude-pattern PATTERN</code> - Exclude objects matching pattern</p> <p>Examples: <pre><code># Download all objects\naws-cloud-utilities s3 download my-bucket\n\n# Download with prefix filter\naws-cloud-utilities s3 download my-bucket --prefix logs/2024/\n\n# Download to specific directory\naws-cloud-utilities s3 download my-bucket --local-dir ./downloads\n\n# Dry run to see what would be downloaded\naws-cloud-utilities s3 download my-bucket --dry-run\n</code></pre></p>"},{"location":"commands/s3/#nuke-bucket","title":"<code>nuke-bucket</code>","text":"<p>Completely delete a bucket and all its contents (use with extreme caution).</p> <pre><code>aws-cloud-utilities s3 nuke-bucket BUCKET_NAME\n</code></pre> <p>Arguments: - <code>BUCKET_NAME</code> - Name of the bucket to delete</p> <p>Options: - <code>--force</code> - Skip confirmation prompt - <code>--delete-versions</code> - Delete all object versions (required for versioned buckets)</p> <p>Examples: <pre><code># Delete bucket (with confirmation)\naws-cloud-utilities s3 nuke-bucket my-old-bucket\n\n# Force delete without confirmation\naws-cloud-utilities s3 nuke-bucket my-old-bucket --force\n\n# Delete versioned bucket\naws-cloud-utilities s3 nuke-bucket my-versioned-bucket --delete-versions --force\n</code></pre></p>"},{"location":"commands/s3/#bucket-details","title":"<code>bucket-details</code>","text":"<p>Get comprehensive details about an S3 bucket.</p> <pre><code>aws-cloud-utilities s3 bucket-details BUCKET_NAME\n</code></pre> <p>Arguments: - <code>BUCKET_NAME</code> - Name of the bucket to analyze</p> <p>Options: - <code>--include-objects</code> - Include object listing in details - <code>--max-objects NUM</code> - Maximum number of objects to list (default: 1000) - <code>--output-file FILE</code> - Save results to file</p> <p>Features: - Bucket configuration and policies - Versioning and lifecycle settings - Encryption and access control - Object statistics and samples</p> <p>Examples: <pre><code># Get bucket details\naws-cloud-utilities s3 bucket-details my-bucket\n\n# Include object listing\naws-cloud-utilities s3 bucket-details my-bucket --include-objects\n\n# Save to file\naws-cloud-utilities s3 bucket-details my-bucket --output-file bucket-analysis.json\n</code></pre></p>"},{"location":"commands/s3/#delete-versions","title":"<code>delete-versions</code>","text":"<p>Delete specific object versions from a versioned bucket.</p> <pre><code>aws-cloud-utilities s3 delete-versions BUCKET_NAME\n</code></pre> <p>Arguments: - <code>BUCKET_NAME</code> - Name of the versioned bucket</p> <p>Options: - <code>--prefix PREFIX</code> - Object prefix to filter deletions - <code>--older-than DAYS</code> - Delete versions older than specified days - <code>--keep-latest NUM</code> - Keep the latest N versions of each object - <code>--dry-run</code> - Show what would be deleted without actually deleting</p> <p>Examples: <pre><code># Delete old versions (dry run)\naws-cloud-utilities s3 delete-versions my-bucket --older-than 30 --dry-run\n\n# Keep only latest 5 versions\naws-cloud-utilities s3 delete-versions my-bucket --keep-latest 5\n\n# Delete versions with prefix\naws-cloud-utilities s3 delete-versions my-bucket --prefix logs/ --older-than 7\n</code></pre></p>"},{"location":"commands/s3/#restore-objects","title":"<code>restore-objects</code>","text":"<p>Restore objects from Glacier or Deep Archive storage classes.</p> <pre><code>aws-cloud-utilities s3 restore-objects BUCKET_NAME\n</code></pre> <p>Arguments: - <code>BUCKET_NAME</code> - Name of the bucket containing archived objects</p> <p>Options: - <code>--prefix PREFIX</code> - Object prefix to filter restorations - <code>--days DAYS</code> - Number of days to keep restored objects available (default: 1) - <code>--tier TIER</code> - Restoration tier (Standard, Bulk, Expedited) [default: Standard] - <code>--dry-run</code> - Show what would be restored without actually restoring</p> <p>Examples: <pre><code># Restore objects with prefix\naws-cloud-utilities s3 restore-objects my-bucket --prefix archive/2023/\n\n# Expedited restoration for 7 days\naws-cloud-utilities s3 restore-objects my-bucket --tier Expedited --days 7\n\n# Dry run to see what would be restored\naws-cloud-utilities s3 restore-objects my-bucket --dry-run\n</code></pre></p>"},{"location":"commands/s3/#global-options","title":"Global Options","text":"<p>All S3 commands support these global options:</p> <ul> <li><code>--profile PROFILE</code> - AWS profile to use</li> <li><code>--region REGION</code> - AWS region</li> <li><code>--output FORMAT</code> - Output format (table, json, yaml, csv)</li> <li><code>--verbose</code> - Enable verbose output</li> <li><code>--debug</code> - Enable debug mode</li> </ul>"},{"location":"commands/s3/#examples","title":"Examples","text":""},{"location":"commands/s3/#bucket-management-workflow","title":"Bucket Management Workflow","text":"<pre><code>#!/bin/bash\n# Complete bucket management workflow\n\necho \"=== Current Buckets ===\"\naws-cloud-utilities s3 list-buckets --include-size\n\necho \"=== Creating New Bucket ===\"\naws-cloud-utilities s3 create-bucket my-new-project-bucket --versioning --encryption\n\necho \"=== Bucket Details ===\"\naws-cloud-utilities s3 bucket-details my-new-project-bucket --output-file bucket-config.json\n</code></pre>"},{"location":"commands/s3/#data-migration-script","title":"Data Migration Script","text":"<pre><code>#!/bin/bash\n# Download and backup bucket contents\n\nBUCKET_NAME=\"my-source-bucket\"\nBACKUP_DIR=\"./backup-$(date +%Y%m%d)\"\n\necho \"=== Analyzing Bucket ===\"\naws-cloud-utilities s3 bucket-details $BUCKET_NAME --include-objects\n\necho \"=== Downloading Contents ===\"\naws-cloud-utilities s3 download $BUCKET_NAME --local-dir $BACKUP_DIR\n\necho \"=== Backup Complete ===\"\necho \"Backup saved to: $BACKUP_DIR\"\n</code></pre>"},{"location":"commands/s3/#cleanup-and-maintenance","title":"Cleanup and Maintenance","text":"<pre><code>#!/bin/bash\n# Bucket cleanup and maintenance\n\nBUCKET_NAME=\"my-versioned-bucket\"\n\necho \"=== Current Bucket Status ===\"\naws-cloud-utilities s3 bucket-details $BUCKET_NAME\n\necho \"=== Cleaning Old Versions (Dry Run) ===\"\naws-cloud-utilities s3 delete-versions $BUCKET_NAME --older-than 90 --dry-run\n\necho \"=== Restoring Archived Objects ===\"\naws-cloud-utilities s3 restore-objects $BUCKET_NAME --prefix important/ --days 3\n</code></pre>"},{"location":"commands/s3/#common-use-cases","title":"Common Use Cases","text":"<ol> <li> <p>Bucket Discovery and Analysis <pre><code>aws-cloud-utilities s3 list-buckets --include-size\naws-cloud-utilities s3 bucket-details my-bucket --include-objects\n</code></pre></p> </li> <li> <p>Data Download and Backup <pre><code>aws-cloud-utilities s3 download my-bucket --local-dir ./backup\naws-cloud-utilities s3 download my-bucket --prefix logs/2024/ --max-objects 1000\n</code></pre></p> </li> <li> <p>Bucket Lifecycle Management <pre><code>aws-cloud-utilities s3 delete-versions my-bucket --older-than 30 --keep-latest 5\naws-cloud-utilities s3 restore-objects my-bucket --prefix archive/\n</code></pre></p> </li> <li> <p>Bucket Creation and Setup <pre><code>aws-cloud-utilities s3 create-bucket my-new-bucket --versioning --encryption\naws-cloud-utilities s3 bucket-details my-new-bucket\n</code></pre></p> </li> </ol>"},{"location":"commands/s3/#security-considerations","title":"Security Considerations","text":"<ul> <li>Always use <code>--dry-run</code> before destructive operations</li> <li>The <code>nuke-bucket</code> command permanently deletes all data</li> <li>Restored objects from Glacier incur additional costs</li> <li>Consider using <code>--force</code> flag carefully in automated scripts</li> </ul>"},{"location":"commands/security/","title":"Security Commands","text":"<p>Security auditing and tools for AWS security assessment, compliance checking, and vulnerability detection.</p>"},{"location":"commands/security/#commands","title":"Commands","text":""},{"location":"commands/security/#audit","title":"<code>audit</code>","text":"<p>Perform basic security audit of AWS account.</p> <pre><code>aws-cloud-utilities security audit\n</code></pre> <p>Checks: - IAM configuration - S3 bucket security - Security group rules - CloudTrail configuration - Basic compliance checks</p> <p>Options: - <code>--service SERVICE</code> - Audit specific service - <code>--severity LEVEL</code> - Filter by severity (low, medium, high, critical) - <code>--compliance-framework FRAMEWORK</code> - Check against specific framework</p> <p>Examples: <pre><code># Basic security audit\naws-cloud-utilities security audit\n\n# High severity issues only\naws-cloud-utilities security audit --severity high\n\n# S3 security audit\naws-cloud-utilities security audit --service s3\n</code></pre></p>"},{"location":"commands/security/#blue-team-audit","title":"<code>blue-team-audit</code>","text":"<p>Comprehensive security assessment for blue team operations.</p> <pre><code>aws-cloud-utilities security blue-team-audit\n</code></pre> <p>Enhanced checks: - Advanced IAM analysis - Network security assessment - Encryption status - Logging and monitoring - Incident response readiness - Compliance posture</p> <p>Options: - <code>--detailed</code> - Include detailed findings - <code>--export-format FORMAT</code> - Export format for reports - <code>--include-remediation</code> - Include remediation steps</p> <p>Examples: <pre><code># Comprehensive audit\naws-cloud-utilities security blue-team-audit\n\n# Detailed report with remediation\naws-cloud-utilities security blue-team-audit --detailed --include-remediation\n\n# Export to JSON\naws-cloud-utilities security blue-team-audit --output json &gt; security-audit.json\n</code></pre></p>"},{"location":"commands/security/#public-resources","title":"<code>public-resources</code>","text":"<p>Find publicly accessible AWS resources.</p> <pre><code>aws-cloud-utilities security public-resources\n</code></pre> <p>Detects: - Public S3 buckets - Open security groups - Public RDS instances - Exposed Lambda functions - Public ELB/ALB endpoints</p> <p>Options: - <code>--service SERVICE</code> - Check specific service - <code>--region REGION</code> - Check specific region - <code>--severity LEVEL</code> - Filter by risk level</p> <p>Examples: <pre><code># All public resources\naws-cloud-utilities security public-resources\n\n# Public S3 buckets only\naws-cloud-utilities security public-resources --service s3\n\n# High-risk exposures\naws-cloud-utilities security public-resources --severity high\n</code></pre></p>"},{"location":"commands/security/#compliance","title":"<code>compliance</code>","text":"<p>Check compliance against security frameworks.</p> <pre><code>aws-cloud-utilities security compliance --framework FRAMEWORK\n</code></pre> <p>Supported frameworks: - CIS AWS Foundations Benchmark - AWS Security Best Practices - SOC 2 - PCI DSS - HIPAA</p> <p>Options: - <code>--framework FRAMEWORK</code> - Compliance framework - <code>--control CONTROL</code> - Specific control check - <code>--export-report</code> - Generate compliance report</p> <p>Examples: <pre><code># CIS compliance check\naws-cloud-utilities security compliance --framework cis\n\n# SOC 2 compliance\naws-cloud-utilities security compliance --framework soc2\n\n# Specific control\naws-cloud-utilities security compliance --framework cis --control 1.1\n</code></pre></p>"},{"location":"commands/security/#encryption-status","title":"<code>encryption-status</code>","text":"<p>Check encryption status across AWS services.</p> <pre><code>aws-cloud-utilities security encryption-status\n</code></pre> <p>Checks: - EBS volume encryption - S3 bucket encryption - RDS encryption - Lambda environment variables - Parameter Store encryption</p> <p>Options: - <code>--service SERVICE</code> - Check specific service - <code>--unencrypted-only</code> - Show only unencrypted resources</p> <p>Examples: <pre><code># All encryption status\naws-cloud-utilities security encryption-status\n\n# Unencrypted resources only\naws-cloud-utilities security encryption-status --unencrypted-only\n\n# S3 encryption status\naws-cloud-utilities security encryption-status --service s3\n</code></pre></p>"},{"location":"commands/security/#network-analysis","title":"<code>network-analysis</code>","text":"<p>Analyze network security configuration.</p> <pre><code>aws-cloud-utilities security network-analysis\n</code></pre> <p>Analysis includes: - Security group rules - NACL configuration - VPC flow logs - Internet gateway exposure - NAT gateway configuration</p> <p>Options: - <code>--vpc-id VPC</code> - Analyze specific VPC - <code>--show-flows</code> - Include flow log analysis - <code>--risky-rules-only</code> - Show only risky rules</p> <p>Examples: <pre><code># All network analysis\naws-cloud-utilities security network-analysis\n\n# Specific VPC\naws-cloud-utilities security network-analysis --vpc-id vpc-12345678\n\n# Risky rules only\naws-cloud-utilities security network-analysis --risky-rules-only\n</code></pre></p>"},{"location":"commands/security/#secrets-scan","title":"<code>secrets-scan</code>","text":"<p>Scan for exposed secrets and credentials.</p> <pre><code>aws-cloud-utilities security secrets-scan\n</code></pre> <p>Scans: - Lambda environment variables - EC2 user data - CloudFormation templates - Parameter Store values - Secrets Manager usage</p> <p>Options: - <code>--service SERVICE</code> - Scan specific service - <code>--pattern PATTERN</code> - Custom secret pattern - <code>--exclude-encrypted</code> - Skip encrypted values</p> <p>Examples: <pre><code># Full secrets scan\naws-cloud-utilities security secrets-scan\n\n# Lambda functions only\naws-cloud-utilities security secrets-scan --service lambda\n\n# Custom pattern\naws-cloud-utilities security secrets-scan --pattern \"api[_-]?key\"\n</code></pre></p>"},{"location":"commands/security/#global-options","title":"Global Options","text":"<p>All security commands support:</p> <ul> <li><code>--profile PROFILE</code> - AWS profile to use</li> <li><code>--region REGION</code> - AWS region</li> <li><code>--output FORMAT</code> - Output format (table, json, yaml, csv)</li> <li><code>--verbose</code> - Enable verbose output</li> <li><code>--debug</code> - Enable debug mode</li> </ul>"},{"location":"commands/security/#examples","title":"Examples","text":""},{"location":"commands/security/#daily-security-check","title":"Daily Security Check","text":"<pre><code>#!/bin/bash\n# Daily security monitoring\necho \"=== Security Audit ===\"\naws-cloud-utilities security audit --output json &gt; daily-audit-$(date +%Y%m%d).json\n\necho \"=== Public Resources ===\"\naws-cloud-utilities security public-resources --output json &gt; public-resources-$(date +%Y%m%d).json\n\necho \"=== Encryption Status ===\"\naws-cloud-utilities security encryption-status --unencrypted-only\n</code></pre>"},{"location":"commands/security/#comprehensive-security-assessment","title":"Comprehensive Security Assessment","text":"<pre><code>#!/bin/bash\n# Full security assessment\necho \"=== Blue Team Audit ===\"\naws-cloud-utilities security blue-team-audit --detailed --include-remediation\n\necho \"=== Compliance Check ===\"\naws-cloud-utilities security compliance --framework cis\n\necho \"=== Network Analysis ===\"\naws-cloud-utilities security network-analysis\n\necho \"=== Secrets Scan ===\"\naws-cloud-utilities security secrets-scan\n</code></pre>"},{"location":"commands/security/#incident-response","title":"Incident Response","text":"<pre><code>#!/bin/bash\n# Security incident response\necho \"=== Public Exposures ===\"\naws-cloud-utilities security public-resources --severity high\n\necho \"=== Network Security ===\"\naws-cloud-utilities security network-analysis --risky-rules-only\n\necho \"=== Recent Changes ===\"\naws-cloud-utilities security audit --severity critical\n</code></pre>"},{"location":"commands/security/#common-use-cases","title":"Common Use Cases","text":"<ol> <li> <p>Regular Security Monitoring <pre><code>aws-cloud-utilities security audit\naws-cloud-utilities security public-resources\n</code></pre></p> </li> <li> <p>Compliance Reporting <pre><code>aws-cloud-utilities security compliance --framework cis --export-report\naws-cloud-utilities security blue-team-audit --detailed\n</code></pre></p> </li> <li> <p>Incident Investigation <pre><code>aws-cloud-utilities security public-resources --severity high\naws-cloud-utilities security network-analysis --risky-rules-only\n</code></pre></p> </li> <li> <p>Security Hardening <pre><code>aws-cloud-utilities security encryption-status --unencrypted-only\naws-cloud-utilities security secrets-scan\n</code></pre></p> </li> </ol>"},{"location":"commands/security/#security-findings-format","title":"Security Findings Format","text":"<p>Security findings include:</p> <ul> <li>Severity: Critical, High, Medium, Low</li> <li>Resource: Affected AWS resource</li> <li>Finding: Description of security issue</li> <li>Remediation: Steps to fix the issue</li> <li>Compliance: Related compliance frameworks</li> </ul> <p>Example output: <pre><code>{\n  \"severity\": \"HIGH\",\n  \"resource\": \"s3://my-bucket\",\n  \"finding\": \"S3 bucket allows public read access\",\n  \"remediation\": \"Remove public read permissions from bucket policy\",\n  \"compliance\": [\"CIS-2.3\", \"SOC2-CC6.1\"]\n}\n</code></pre></p>"},{"location":"commands/security/#integration-with-other-tools","title":"Integration with Other Tools","text":"<p>Security commands integrate well with:</p> <ul> <li>IAM commands: <code>aws-cloud-utilities iam analyze</code></li> <li>S3 commands: <code>aws-cloud-utilities s3 security-audit</code></li> <li>Networking commands: <code>aws-cloud-utilities networking security-groups</code></li> <li>Inventory commands: <code>aws-cloud-utilities inventory resources</code></li> </ul>"},{"location":"commands/stepfunctions/","title":"Step Functions Commands","text":"<p>Step Functions workflow management commands for state machine operations and execution monitoring.</p>"},{"location":"commands/stepfunctions/#commands","title":"Commands","text":""},{"location":"commands/stepfunctions/#list","title":"<code>list</code>","text":"<p>List Step Functions state machines with status and details.</p> <pre><code>aws-cloud-utilities stepfunctions list\n</code></pre> <p>Options: - <code>--region REGION</code> - AWS region to query (default: all regions) - <code>--status STATUS</code> - Filter by state machine status (ACTIVE, DELETING) - <code>--type TYPE</code> - Filter by state machine type (STANDARD, EXPRESS) - <code>--include-definition</code> - Include state machine definition in output - <code>--output-file FILE</code> - Save results to file</p> <p>Examples: <pre><code># List all state machines\naws-cloud-utilities stepfunctions list\n\n# List state machines in specific region\naws-cloud-utilities stepfunctions list --region us-east-1\n\n# List only active state machines\naws-cloud-utilities stepfunctions list --status ACTIVE\n\n# List EXPRESS type state machines\naws-cloud-utilities stepfunctions list --type EXPRESS\n\n# Include definitions and save to file\naws-cloud-utilities stepfunctions list --include-definition --output-file state-machines.json\n</code></pre></p>"},{"location":"commands/stepfunctions/#describe","title":"<code>describe</code>","text":"<p>Get detailed information about a specific state machine.</p> <pre><code>aws-cloud-utilities stepfunctions describe STATE_MACHINE_ARN\n</code></pre> <p>Arguments: - <code>STATE_MACHINE_ARN</code> - ARN of the state machine to describe</p> <p>Options: - <code>--region REGION</code> - AWS region where state machine exists - <code>--include-definition</code> - Include the state machine definition - <code>--include-executions</code> - Include recent execution history - <code>--output-file FILE</code> - Save results to file</p> <p>Examples: <pre><code># Basic state machine details\naws-cloud-utilities stepfunctions describe arn:aws:states:us-east-1:123456789012:stateMachine:MyStateMachine\n\n# Include definition and executions\naws-cloud-utilities stepfunctions describe arn:aws:states:us-east-1:123456789012:stateMachine:MyStateMachine --include-definition --include-executions\n\n# Save to file\naws-cloud-utilities stepfunctions describe arn:aws:states:us-east-1:123456789012:stateMachine:MyStateMachine --output-file state-machine-details.json\n</code></pre></p>"},{"location":"commands/stepfunctions/#execute","title":"<code>execute</code>","text":"<p>Start execution of a state machine with optional input.</p> <pre><code>aws-cloud-utilities stepfunctions execute STATE_MACHINE_ARN\n</code></pre> <p>Arguments: - <code>STATE_MACHINE_ARN</code> - ARN of the state machine to execute</p> <p>Options: - <code>--region REGION</code> - AWS region where state machine exists - <code>--input INPUT</code> - JSON input for the execution - <code>--input-file FILE</code> - File containing JSON input - <code>--name NAME</code> - Name for the execution (auto-generated if not provided) - <code>--wait</code> - Wait for execution to complete - <code>--timeout SECONDS</code> - Timeout for waiting (default: 300)</p> <p>Examples: <pre><code># Start execution with no input\naws-cloud-utilities stepfunctions execute arn:aws:states:us-east-1:123456789012:stateMachine:MyStateMachine\n\n# Start execution with JSON input\naws-cloud-utilities stepfunctions execute arn:aws:states:us-east-1:123456789012:stateMachine:MyStateMachine --input '{\"key\": \"value\"}'\n\n# Start execution with input from file\naws-cloud-utilities stepfunctions execute arn:aws:states:us-east-1:123456789012:stateMachine:MyStateMachine --input-file input.json\n\n# Start execution and wait for completion\naws-cloud-utilities stepfunctions execute arn:aws:states:us-east-1:123456789012:stateMachine:MyStateMachine --wait --timeout 600\n\n# Start execution with custom name\naws-cloud-utilities stepfunctions execute arn:aws:states:us-east-1:123456789012:stateMachine:MyStateMachine --name MyExecution-$(date +%Y%m%d-%H%M%S)\n</code></pre></p>"},{"location":"commands/stepfunctions/#list-executions","title":"<code>list-executions</code>","text":"<p>List executions for a state machine with filtering options.</p> <pre><code>aws-cloud-utilities stepfunctions list-executions STATE_MACHINE_ARN\n</code></pre> <p>Arguments: - <code>STATE_MACHINE_ARN</code> - ARN of the state machine</p> <p>Options: - <code>--region REGION</code> - AWS region where state machine exists - <code>--status STATUS</code> - Filter by execution status (RUNNING, SUCCEEDED, FAILED, TIMED_OUT, ABORTED) - <code>--max-results NUM</code> - Maximum number of executions to return - <code>--start-time TIME</code> - Filter executions started after this time (ISO format) - <code>--end-time TIME</code> - Filter executions started before this time (ISO format) - <code>--output-file FILE</code> - Save results to file</p> <p>Examples: <pre><code># List all executions\naws-cloud-utilities stepfunctions list-executions arn:aws:states:us-east-1:123456789012:stateMachine:MyStateMachine\n\n# List only failed executions\naws-cloud-utilities stepfunctions list-executions arn:aws:states:us-east-1:123456789012:stateMachine:MyStateMachine --status FAILED\n\n# List recent executions\naws-cloud-utilities stepfunctions list-executions arn:aws:states:us-east-1:123456789012:stateMachine:MyStateMachine --start-time 2024-01-01T00:00:00Z\n\n# Limit results and save to file\naws-cloud-utilities stepfunctions list-executions arn:aws:states:us-east-1:123456789012:stateMachine:MyStateMachine --max-results 50 --output-file executions.json\n</code></pre></p>"},{"location":"commands/stepfunctions/#logs","title":"<code>logs</code>","text":"<p>Get execution logs and history for a state machine execution.</p> <pre><code>aws-cloud-utilities stepfunctions logs EXECUTION_ARN\n</code></pre> <p>Arguments: - <code>EXECUTION_ARN</code> - ARN of the execution to get logs for</p> <p>Options: - <code>--region REGION</code> - AWS region where execution exists - <code>--include-input-output</code> - Include input and output data in logs - <code>--max-events NUM</code> - Maximum number of events to return - <code>--output-file FILE</code> - Save results to file</p> <p>Examples: <pre><code># Get execution logs\naws-cloud-utilities stepfunctions logs arn:aws:states:us-east-1:123456789012:execution:MyStateMachine:execution-name\n\n# Include input/output data\naws-cloud-utilities stepfunctions logs arn:aws:states:us-east-1:123456789012:execution:MyStateMachine:execution-name --include-input-output\n\n# Limit events and save to file\naws-cloud-utilities stepfunctions logs arn:aws:states:us-east-1:123456789012:execution:MyStateMachine:execution-name --max-events 100 --output-file execution-logs.json\n</code></pre></p>"},{"location":"commands/stepfunctions/#global-options","title":"Global Options","text":"<p>All Step Functions commands support these global options:</p> <ul> <li><code>--profile PROFILE</code> - AWS profile to use</li> <li><code>--region REGION</code> - AWS region</li> <li><code>--output FORMAT</code> - Output format (table, json, yaml, csv)</li> <li><code>--verbose</code> - Enable verbose output</li> <li><code>--debug</code> - Enable debug mode</li> </ul>"},{"location":"commands/stepfunctions/#examples","title":"Examples","text":""},{"location":"commands/stepfunctions/#state-machine-monitoring-workflow","title":"State Machine Monitoring Workflow","text":"<pre><code>#!/bin/bash\n# Monitor Step Functions state machines\n\nMONITORING_DIR=\"./stepfunctions-monitoring-$(date +%Y%m%d)\"\nmkdir -p $MONITORING_DIR\n\necho \"=== State Machine Inventory ===\"\naws-cloud-utilities stepfunctions list --include-definition --output-file $MONITORING_DIR/state-machines.json\n\necho \"=== Failed Executions ===\"\naws-cloud-utilities stepfunctions list --output json | \\\njq -r '.[].stateMachineArn' | \\\nwhile read arn; do\n    echo \"Checking failed executions for: $arn\"\n    aws-cloud-utilities stepfunctions list-executions $arn --status FAILED --output-file $MONITORING_DIR/failed-$(basename $arn).json\ndone\n\necho \"=== Monitoring Complete ===\"\necho \"Monitoring data saved to: $MONITORING_DIR\"\n</code></pre>"},{"location":"commands/stepfunctions/#execution-analysis-script","title":"Execution Analysis Script","text":"<pre><code>#!/bin/bash\n# Analyze specific state machine executions\n\nSTATE_MACHINE_ARN=\"arn:aws:states:us-east-1:123456789012:stateMachine:MyStateMachine\"\nANALYSIS_DIR=\"./execution-analysis-$(date +%Y%m%d)\"\n\nmkdir -p $ANALYSIS_DIR\n\necho \"=== State Machine Details ===\"\naws-cloud-utilities stepfunctions describe $STATE_MACHINE_ARN --include-definition --output-file $ANALYSIS_DIR/state-machine.json\n\necho \"=== Recent Executions ===\"\naws-cloud-utilities stepfunctions list-executions $STATE_MACHINE_ARN --max-results 100 --output-file $ANALYSIS_DIR/executions.json\n\necho \"=== Failed Execution Analysis ===\"\naws-cloud-utilities stepfunctions list-executions $STATE_MACHINE_ARN --status FAILED --output json | \\\njq -r '.[].executionArn' | head -5 | \\\nwhile read exec_arn; do\n    echo \"Analyzing execution: $exec_arn\"\n    aws-cloud-utilities stepfunctions logs $exec_arn --include-input-output --output-file $ANALYSIS_DIR/logs-$(basename $exec_arn).json\ndone\n\necho \"=== Analysis Complete ===\"\necho \"Analysis data saved to: $ANALYSIS_DIR\"\n</code></pre>"},{"location":"commands/stepfunctions/#batch-execution-script","title":"Batch Execution Script","text":"<pre><code>#!/bin/bash\n# Execute state machine with multiple inputs\n\nSTATE_MACHINE_ARN=\"arn:aws:states:us-east-1:123456789012:stateMachine:BatchProcessor\"\nINPUT_DIR=\"./batch-inputs\"\nRESULTS_DIR=\"./batch-results-$(date +%Y%m%d)\"\n\nmkdir -p $RESULTS_DIR\n\necho \"=== Starting Batch Executions ===\"\n\nfor input_file in $INPUT_DIR/*.json; do\n    filename=$(basename $input_file .json)\n    execution_name=\"batch-$filename-$(date +%Y%m%d-%H%M%S)\"\n\n    echo \"Starting execution: $execution_name\"\n    aws-cloud-utilities stepfunctions execute $STATE_MACHINE_ARN \\\n        --input-file $input_file \\\n        --name $execution_name \\\n        --wait \\\n        --timeout 600 &gt; $RESULTS_DIR/$execution_name.log\n\n    echo \"Execution $execution_name completed\"\ndone\n\necho \"=== Batch Executions Complete ===\"\necho \"Results saved to: $RESULTS_DIR\"\n</code></pre>"},{"location":"commands/stepfunctions/#health-check-script","title":"Health Check Script","text":"<pre><code>#!/bin/bash\n# Health check for Step Functions\n\necho \"=== Step Functions Health Check ===\"\n\n# Check for active state machines\necho \"Active State Machines:\"\naws-cloud-utilities stepfunctions list --status ACTIVE --output table\n\n# Check for running executions\necho -e \"\\n=== Running Executions ===\"\naws-cloud-utilities stepfunctions list --output json | \\\njq -r '.[].stateMachineArn' | \\\nwhile read arn; do\n    running_count=$(aws-cloud-utilities stepfunctions list-executions $arn --status RUNNING --output json | jq '. | length')\n    if [ $running_count -gt 0 ]; then\n        echo \"$arn: $running_count running executions\"\n    fi\ndone\n\n# Check for recent failures\necho -e \"\\n=== Recent Failures ===\"\naws-cloud-utilities stepfunctions list --output json | \\\njq -r '.[].stateMachineArn' | \\\nwhile read arn; do\n    failed_count=$(aws-cloud-utilities stepfunctions list-executions $arn --status FAILED --start-time $(date -d '1 hour ago' -Iseconds) --output json | jq '. | length')\n    if [ $failed_count -gt 0 ]; then\n        echo \"$arn: $failed_count failures in last hour\"\n    fi\ndone\n\necho -e \"\\n=== Health Check Complete ===\"\n</code></pre>"},{"location":"commands/stepfunctions/#common-use-cases","title":"Common Use Cases","text":"<ol> <li> <p>State Machine Management <pre><code>aws-cloud-utilities stepfunctions list --include-definition\naws-cloud-utilities stepfunctions describe arn:aws:states:region:account:stateMachine:name\n</code></pre></p> </li> <li> <p>Execution Monitoring <pre><code>aws-cloud-utilities stepfunctions list-executions arn:aws:states:region:account:stateMachine:name --status FAILED\naws-cloud-utilities stepfunctions logs arn:aws:states:region:account:execution:name:id\n</code></pre></p> </li> <li> <p>Automated Execution <pre><code>aws-cloud-utilities stepfunctions execute arn:aws:states:region:account:stateMachine:name --input-file data.json --wait\n</code></pre></p> </li> <li> <p>Troubleshooting <pre><code>aws-cloud-utilities stepfunctions list-executions arn:aws:states:region:account:stateMachine:name --status FAILED\naws-cloud-utilities stepfunctions logs arn:aws:states:region:account:execution:name:id --include-input-output\n</code></pre></p> </li> </ol>"},{"location":"commands/stepfunctions/#integration-with-other-commands","title":"Integration with Other Commands","text":"<p>Step Functions commands work well with other AWS Cloud Utilities:</p> <pre><code># Combine with logs analysis\naws-cloud-utilities stepfunctions logs execution-arn --include-input-output\naws-cloud-utilities logs aggregate --log-group /aws/stepfunctions/MyStateMachine\n\n# Combine with inventory\naws-cloud-utilities inventory resources --resource-type stepfunctions\naws-cloud-utilities stepfunctions list --include-definition\n</code></pre>"},{"location":"commands/stepfunctions/#best-practices","title":"Best Practices","text":"<ul> <li>Use meaningful execution names for easier tracking</li> <li>Monitor failed executions regularly for operational issues</li> <li>Include input/output data in logs for debugging</li> <li>Set appropriate timeouts for long-running workflows</li> <li>Use JSON files for complex input data</li> <li>Implement proper error handling in state machine definitions</li> <li>Regular backup of state machine definitions</li> <li>Monitor execution costs for EXPRESS workflows</li> </ul>"},{"location":"commands/support/","title":"Support Commands","text":"<p>AWS support tools for managing support cases and checking support levels.</p>"},{"location":"commands/support/#commands","title":"Commands","text":""},{"location":"commands/support/#check-level","title":"<code>check-level</code>","text":"<p>Check AWS support level and plan details.</p> <pre><code>aws-cloud-utilities support check-level\n</code></pre> <p>Options: - <code>--method METHOD</code> - Check method (api, severity) - defaults to api with fallback - <code>--verbose</code> - Show detailed support plan information</p> <p>Examples: <pre><code># Check support level\naws-cloud-utilities support check-level\n\n# Verbose output with plan details\naws-cloud-utilities support check-level --verbose\n\n# Use severity method\naws-cloud-utilities support check-level --method severity\n</code></pre></p>"},{"location":"commands/support/#cases","title":"<code>cases</code>","text":"<p>List and manage AWS support cases.</p> <pre><code>aws-cloud-utilities support cases\n</code></pre> <p>Options: - <code>--status STATUS</code> - Filter by case status (open, resolved, all) - <code>--max-results NUMBER</code> - Maximum number of cases to return - <code>--language LANGUAGE</code> - Language for case communication</p> <p>Examples: <pre><code># All open cases\naws-cloud-utilities support cases --status open\n\n# All resolved cases (limited)\naws-cloud-utilities support cases --status resolved --max-results 50\n\n# All cases\naws-cloud-utilities support cases --status all\n</code></pre></p>"},{"location":"commands/support/#services","title":"<code>services</code>","text":"<p>List AWS services available for support.</p> <pre><code>aws-cloud-utilities support services\n</code></pre> <p>Options: - <code>--language LANGUAGE</code> - Language for service names</p> <p>Examples: <pre><code># List all support services\naws-cloud-utilities support services\n\n# Services in specific language\naws-cloud-utilities support services --language ja\n</code></pre></p>"},{"location":"commands/support/#severity-levels","title":"<code>severity-levels</code>","text":"<p>List available support case severity levels.</p> <pre><code>aws-cloud-utilities support severity-levels\n</code></pre> <p>Options: - <code>--language LANGUAGE</code> - Language for severity descriptions</p> <p>Examples: <pre><code># List severity levels\naws-cloud-utilities support severity-levels\n\n# Severity levels in specific language\naws-cloud-utilities support severity-levels --language es\n</code></pre></p>"},{"location":"commands/support/#support-plan-detection","title":"Support Plan Detection","text":"<p>The tool automatically detects your AWS support plan:</p> <ul> <li>Basic: Free support plan (limited features)</li> <li>Developer: Business hours support via email</li> <li>Business: 24/7 support via phone, email, and chat</li> <li>Enterprise: Dedicated Technical Account Manager</li> </ul>"},{"location":"commands/support/#common-use-cases","title":"Common Use Cases","text":""},{"location":"commands/support/#support-plan-verification","title":"Support Plan Verification","text":"<pre><code># Check current support level\naws-cloud-utilities support check-level --verbose\n</code></pre>"},{"location":"commands/support/#case-management","title":"Case Management","text":"<pre><code># Review open cases\naws-cloud-utilities support cases --status open\n\n# Export case history\naws-cloud-utilities support cases --status all --output json &gt; support-cases.json\n</code></pre>"},{"location":"commands/support/#support-planning","title":"Support Planning","text":"<pre><code># List available services for support\naws-cloud-utilities support services --output table\n\n# Check severity levels for case creation\naws-cloud-utilities support severity-levels\n</code></pre>"},{"location":"commands/support/#error-handling","title":"Error Handling","text":"<p>The support commands handle different support plans gracefully:</p> <ul> <li>Basic Support: Limited API access, uses alternative detection methods</li> <li>Premium Support: Full API access to all support features</li> <li>No Support API Access: Falls back to severity level detection</li> </ul>"},{"location":"commands/support/#integration-examples","title":"Integration Examples","text":""},{"location":"commands/support/#monitoring-script","title":"Monitoring Script","text":"<pre><code>#!/bin/bash\n# Check for open support cases\nOPEN_CASES=$(aws-cloud-utilities support cases --status open --output json | jq length)\n\nif [ \"$OPEN_CASES\" -gt 0 ]; then\n    echo \"Warning: $OPEN_CASES open support cases\"\n    aws-cloud-utilities support cases --status open\nfi\n</code></pre>"},{"location":"commands/support/#support-plan-audit","title":"Support Plan Audit","text":"<pre><code>#!/bin/bash\n# Audit support configuration\necho \"=== Support Plan ===\"\naws-cloud-utilities support check-level --verbose\n\necho \"=== Available Services ===\"\naws-cloud-utilities support services\n\necho \"=== Open Cases ===\"\naws-cloud-utilities support cases --status open\n</code></pre>"},{"location":"commands/waf/","title":"WAF Commands","text":"<p>The WAF commands provide comprehensive monitoring and troubleshooting capabilities for AWS WAF (Web Application Firewall) to help identify whether blocks are due to WAF rules, application issues, or end-user problems.</p>"},{"location":"commands/waf/#available-commands","title":"Available Commands","text":""},{"location":"commands/waf/#waf-list","title":"<code>waf list</code>","text":"<p>List all Web ACLs in your AWS account.</p> <pre><code>aws-cloud-utilities waf list [OPTIONS]\n</code></pre> <p>Options: - <code>--scope [REGIONAL|CLOUDFRONT]</code>: WAF scope (default: REGIONAL) - <code>--output-file FILE</code>: Save output to file</p> <p>Examples: <pre><code># List regional Web ACLs\naws-cloud-utilities waf list\n\n# List CloudFront Web ACLs\naws-cloud-utilities waf list --scope CLOUDFRONT\n\n# Save output to file\naws-cloud-utilities waf list --output-file web-acls.json\n</code></pre></p>"},{"location":"commands/waf/#waf-stats","title":"<code>waf stats</code>","text":"<p>Get comprehensive WAF statistics for troubleshooting.</p> <pre><code>aws-cloud-utilities waf stats --web-acl WEB_ACL_NAME [OPTIONS]\n</code></pre> <p>Options: - <code>--web-acl TEXT</code>: Web ACL name to analyze (required) - <code>--hours INTEGER</code>: Hours of data to analyze (default: 24) - <code>--scope [REGIONAL|CLOUDFRONT]</code>: WAF scope (default: REGIONAL) - <code>--output-file FILE</code>: Save output to file</p> <p>Examples: <pre><code># Get 24-hour stats for a Web ACL\naws-cloud-utilities waf stats --web-acl my-web-acl\n\n# Get 7-day stats\naws-cloud-utilities waf stats --web-acl my-web-acl --hours 168\n\n# Save stats to file\naws-cloud-utilities waf stats --web-acl my-web-acl --output-file waf-stats.json\n</code></pre></p> <p>Output includes: - Total requests (blocked and allowed) - Block rate percentage - Recent activity (last hour) - Time range analysis - Basic recommendations</p>"},{"location":"commands/waf/#waf-troubleshoot","title":"<code>waf troubleshoot</code>","text":"<p>Generate comprehensive WAF troubleshooting report.</p> <pre><code>aws-cloud-utilities waf troubleshoot --web-acl WEB_ACL_NAME [OPTIONS]\n</code></pre> <p>Options: - <code>--web-acl TEXT</code>: Web ACL name to troubleshoot (required) - <code>--hours INTEGER</code>: Hours of data to analyze (default: 24) - <code>--output-file FILE</code>: Save troubleshooting report to file</p> <p>Examples: <pre><code># Generate troubleshooting report\naws-cloud-utilities waf troubleshoot --web-acl my-web-acl\n\n# Analyze last 48 hours\naws-cloud-utilities waf troubleshoot --web-acl my-web-acl --hours 48\n\n# Save report to file\naws-cloud-utilities waf troubleshoot --web-acl my-web-acl --output-file troubleshoot-report.json\n</code></pre></p> <p>Report includes: - Comprehensive metrics analysis - Block rate analysis (high/very high alerts) - Recent spike detection - Traffic pattern analysis - Detailed recommendations for optimization</p>"},{"location":"commands/waf/#troubleshooting-scenarios","title":"Troubleshooting Scenarios","text":""},{"location":"commands/waf/#high-block-rate-20","title":"High Block Rate (&gt;20%)","text":"<p>When the troubleshoot command detects a very high block rate:</p> <p>Possible Causes: - WAF rules are too restrictive (false positives) - Legitimate traffic patterns changed - New application features triggering rules</p> <p>Recommended Actions: 1. Review WAF rule configurations 2. Check for recent rule changes 3. Analyze blocked request patterns 4. Consider rule tuning or exceptions</p>"},{"location":"commands/waf/#no-traffic-detected","title":"No Traffic Detected","text":"<p>When no requests are detected:</p> <p>Possible Causes: - WAF not properly associated with resources - Load balancer or CloudFront not configured - DNS routing issues</p> <p>Recommended Actions: 1. Verify WAF association with ALB/CloudFront 2. Check load balancer configuration 3. Verify DNS routing 4. Test application accessibility</p>"},{"location":"commands/waf/#recent-traffic-spikes","title":"Recent Traffic Spikes","text":"<p>When sudden increases in blocked requests are detected:</p> <p>Possible Causes: - DDoS or bot attacks - New WAF rules activated - Application deployment changes</p> <p>Recommended Actions: 1. Investigate source IPs and patterns 2. Review recent rule changes 3. Check application logs 4. Consider rate limiting adjustments</p>"},{"location":"commands/waf/#integration-with-load-balancers","title":"Integration with Load Balancers","text":"<p>The WAF commands work with:</p> <ul> <li>Application Load Balancer (ALB): Use REGIONAL scope</li> <li>CloudFront: Use CLOUDFRONT scope</li> <li>API Gateway: Use REGIONAL scope</li> </ul>"},{"location":"commands/waf/#best-practices","title":"Best Practices","text":"<ol> <li>Regular Monitoring: Run stats command daily to establish baselines</li> <li>Automated Alerts: Use troubleshoot command in monitoring scripts</li> <li>Historical Analysis: Save outputs to files for trend analysis</li> <li>Rule Optimization: Use insights to fine-tune WAF rules</li> </ol>"},{"location":"commands/waf/#output-formats","title":"Output Formats","text":"<p>All commands support multiple output formats: - <code>--output json</code>: JSON format - <code>--output yaml</code>: YAML format - <code>--output table</code>: Human-readable table (default)</p>"},{"location":"commands/waf/#common-use-cases","title":"Common Use Cases","text":""},{"location":"commands/waf/#daily-health-check","title":"Daily Health Check","text":"<pre><code>aws-cloud-utilities waf stats --web-acl production-waf --hours 24\n</code></pre>"},{"location":"commands/waf/#incident-investigation","title":"Incident Investigation","text":"<pre><code>aws-cloud-utilities waf troubleshoot --web-acl production-waf --hours 2 --output-file incident-report.json\n</code></pre>"},{"location":"commands/waf/#weekly-review","title":"Weekly Review","text":"<pre><code>aws-cloud-utilities waf stats --web-acl production-waf --hours 168 --output-file weekly-stats.json\n</code></pre>"},{"location":"commands/waf/#error-handling","title":"Error Handling","text":"<p>The WAF commands include comprehensive error handling for: - Invalid Web ACL names - Missing permissions - CloudWatch API limits - Network connectivity issues</p> <p>Common errors and solutions: - AccessDenied: Ensure IAM permissions for WAF and CloudWatch - ResourceNotFound: Verify Web ACL name and scope - Throttling: Commands include automatic retry logic</p>"},{"location":"development/contributing/","title":"Contributing","text":"<p>We welcome contributions to AWS Cloud Utilities v2! This guide will help you get started with contributing to the project.</p>"},{"location":"development/contributing/#development-setup","title":"Development Setup","text":""},{"location":"development/contributing/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.12 or higher</li> <li>Git</li> <li>AWS CLI configured</li> <li>Virtual environment tool (venv, conda, etc.)</li> </ul>"},{"location":"development/contributing/#setup-development-environment","title":"Setup Development Environment","text":"<pre><code># Clone the repository\ngit clone https://github.com/jon-the-dev/aws-cloud-tools.git\ncd aws-cloud-tools/v2\n\n# Create virtual environment\npython -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n\n# Install in development mode\npip install -e \".[dev]\"\n\n# Install pre-commit hooks\npre-commit install\n</code></pre>"},{"location":"development/contributing/#development-script","title":"Development Script","text":"<p>Use the provided development setup script:</p> <pre><code>./install_dev.sh\n</code></pre> <p>This script will: - Create a virtual environment - Install the package in development mode - Install development dependencies - Set up pre-commit hooks - Run initial tests</p>"},{"location":"development/contributing/#project-structure","title":"Project Structure","text":"<pre><code>aws_cloud_utilities/\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 cli.py                 # Main CLI entry point\n\u251c\u2500\u2500 core/                  # Core functionality\n\u2502   \u251c\u2500\u2500 auth.py           # AWS authentication\n\u2502   \u251c\u2500\u2500 config.py         # Configuration management\n\u2502   \u251c\u2500\u2500 exceptions.py     # Custom exceptions\n\u2502   \u2514\u2500\u2500 utils.py          # Utility functions\n\u251c\u2500\u2500 commands/             # Command implementations\n\u2502   \u251c\u2500\u2500 account.py\n\u2502   \u251c\u2500\u2500 costops.py\n\u2502   \u251c\u2500\u2500 security.py\n\u2502   \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 models/              # Data models\n    \u2514\u2500\u2500 ...\n</code></pre>"},{"location":"development/contributing/#development-workflow","title":"Development Workflow","text":""},{"location":"development/contributing/#1-create-a-branch","title":"1. Create a Branch","text":"<p>Always create a new branch for your work:</p> <pre><code># Ensure you're on main and have latest code\ngit checkout main\ngit pull origin main\n\n# Create new branch\ngit checkout -b feature/your-feature-name\n</code></pre>"},{"location":"development/contributing/#2-make-changes","title":"2. Make Changes","text":"<ul> <li>Follow the existing code style and patterns</li> <li>Add tests for new functionality</li> <li>Update documentation as needed</li> <li>Ensure all tests pass</li> </ul>"},{"location":"development/contributing/#3-test-your-changes","title":"3. Test Your Changes","text":"<pre><code># Run all tests\npytest\n\n# Run with coverage\npytest --cov=aws_cloud_utilities\n\n# Run specific test file\npytest tests/test_cli.py\n\n# Run integration tests\npytest tests/integration/\n</code></pre>"},{"location":"development/contributing/#4-code-quality-checks","title":"4. Code Quality Checks","text":"<pre><code># Format code\nblack aws_cloud_utilities tests\n\n# Lint code\nflake8 aws_cloud_utilities tests\n\n# Type checking\nmypy aws_cloud_utilities\n\n# Run all quality checks\nmake lint\n</code></pre>"},{"location":"development/contributing/#5-commit-changes","title":"5. Commit Changes","text":"<pre><code># Add changes\ngit add .\n\n# Commit with descriptive message\ngit commit -m \"feat: add new cost optimization command\"\n\n# Push to your branch\ngit push origin feature/your-feature-name\n</code></pre>"},{"location":"development/contributing/#6-create-pull-request","title":"6. Create Pull Request","text":"<ul> <li>Create a pull request on GitHub</li> <li>Provide clear description of changes</li> <li>Link any related issues</li> <li>Ensure CI checks pass</li> </ul>"},{"location":"development/contributing/#code-style-guidelines","title":"Code Style Guidelines","text":""},{"location":"development/contributing/#python-code-style","title":"Python Code Style","text":"<p>We follow PEP 8 with some modifications:</p> <ul> <li>Line length: 88 characters (Black default)</li> <li>Use type hints for all functions</li> <li>Use docstrings for all public functions and classes</li> <li>Use f-strings for string formatting</li> </ul>"},{"location":"development/contributing/#example-function","title":"Example Function","text":"<pre><code>def get_account_info(\n    aws_auth: AWSAuth,\n    include_limits: bool = False\n) -&gt; Dict[str, Any]:\n    \"\"\"Get AWS account information.\n\n    Args:\n        aws_auth: AWS authentication instance\n        include_limits: Whether to include service limits\n\n    Returns:\n        Dictionary containing account information\n\n    Raises:\n        AWSError: If unable to retrieve account information\n    \"\"\"\n    try:\n        caller_identity = aws_auth.get_caller_identity()\n\n        result = {\n            \"account_id\": caller_identity.get(\"Account\"),\n            \"user_arn\": caller_identity.get(\"Arn\"),\n            \"user_id\": caller_identity.get(\"UserId\")\n        }\n\n        if include_limits:\n            result[\"limits\"] = get_service_limits(aws_auth)\n\n        return result\n\n    except Exception as e:\n        raise AWSError(f\"Failed to get account info: {e}\") from e\n</code></pre>"},{"location":"development/contributing/#command-structure","title":"Command Structure","text":"<p>All commands should follow this pattern:</p> <pre><code>@click.group(name=\"service\")\ndef service_group():\n    \"\"\"Service description.\"\"\"\n    pass\n\n\n@service_group.command()\n@click.option(\"--option\", help=\"Option description\")\n@click.pass_context\ndef command_name(ctx: click.Context, option: str) -&gt; None:\n    \"\"\"Command description.\n\n    Args:\n        ctx: Click context\n        option: Option description\n    \"\"\"\n    config: Config = ctx.obj[\"config\"]\n    aws_auth: AWSAuth = ctx.obj[\"aws_auth\"]\n\n    try:\n        # Command implementation\n        result = do_something(aws_auth, option)\n\n        # Output result\n        print_output(\n            result,\n            output_format=config.aws_output_format,\n            title=\"Command Results\"\n        )\n\n    except Exception as e:\n        console.print(f\"[red]Error:[/red] {e}\")\n        sys.exit(1)\n</code></pre>"},{"location":"development/contributing/#testing-guidelines","title":"Testing Guidelines","text":""},{"location":"development/contributing/#test-structure","title":"Test Structure","text":"<pre><code>tests/\n\u251c\u2500\u2500 unit/                 # Unit tests\n\u2502   \u251c\u2500\u2500 test_cli.py\n\u2502   \u251c\u2500\u2500 test_auth.py\n\u2502   \u2514\u2500\u2500 commands/\n\u2502       \u251c\u2500\u2500 test_account.py\n\u2502       \u2514\u2500\u2500 test_costops.py\n\u251c\u2500\u2500 integration/          # Integration tests\n\u2502   \u251c\u2500\u2500 test_aws_integration.py\n\u2502   \u2514\u2500\u2500 test_command_integration.py\n\u2514\u2500\u2500 fixtures/            # Test fixtures\n    \u2514\u2500\u2500 sample_data.py\n</code></pre>"},{"location":"development/contributing/#writing-tests","title":"Writing Tests","text":"<pre><code>import pytest\nfrom unittest.mock import Mock, patch\nfrom aws_cloud_utilities.commands.account import get_account_info\nfrom aws_cloud_utilities.core.auth import AWSAuth\n\n\nclass TestAccountCommands:\n    \"\"\"Test account commands.\"\"\"\n\n    @patch('aws_cloud_utilities.commands.account.boto3.client')\n    def test_get_account_info_success(self, mock_boto_client):\n        \"\"\"Test successful account info retrieval.\"\"\"\n        # Arrange\n        mock_client = Mock()\n        mock_boto_client.return_value = mock_client\n        mock_client.get_caller_identity.return_value = {\n            \"Account\": \"123456789012\",\n            \"Arn\": \"arn:aws:iam::123456789012:user/test\",\n            \"UserId\": \"AIDACKCEVSQ6C2EXAMPLE\"\n        }\n\n        aws_auth = AWSAuth()\n\n        # Act\n        result = get_account_info(aws_auth)\n\n        # Assert\n        assert result[\"account_id\"] == \"123456789012\"\n        assert \"arn:aws:iam::123456789012:user/test\" in result[\"user_arn\"]\n        mock_client.get_caller_identity.assert_called_once()\n\n    def test_get_account_info_with_invalid_auth(self):\n        \"\"\"Test account info with invalid authentication.\"\"\"\n        # Arrange\n        aws_auth = Mock()\n        aws_auth.get_caller_identity.side_effect = Exception(\"Invalid credentials\")\n\n        # Act &amp; Assert\n        with pytest.raises(AWSError):\n            get_account_info(aws_auth)\n</code></pre>"},{"location":"development/contributing/#integration-tests","title":"Integration Tests","text":"<p>Integration tests require AWS credentials:</p> <pre><code>@pytest.mark.integration\nclass TestAWSIntegration:\n    \"\"\"Integration tests requiring AWS credentials.\"\"\"\n\n    def test_real_account_info(self):\n        \"\"\"Test with real AWS account.\"\"\"\n        # Skip if no AWS credentials\n        if not has_aws_credentials():\n            pytest.skip(\"No AWS credentials available\")\n\n        aws_auth = AWSAuth()\n        result = get_account_info(aws_auth)\n\n        assert \"account_id\" in result\n        assert len(result[\"account_id\"]) == 12\n</code></pre>"},{"location":"development/contributing/#documentation-guidelines","title":"Documentation Guidelines","text":""},{"location":"development/contributing/#docstring-format","title":"Docstring Format","text":"<p>Use Google-style docstrings:</p> <pre><code>def process_resources(\n    resources: List[Dict[str, Any]],\n    filter_type: Optional[str] = None\n) -&gt; List[Dict[str, Any]]:\n    \"\"\"Process AWS resources with optional filtering.\n\n    Args:\n        resources: List of AWS resource dictionaries\n        filter_type: Optional resource type filter\n\n    Returns:\n        Filtered and processed list of resources\n\n    Raises:\n        ValueError: If resources list is empty\n\n    Example:\n        &gt;&gt;&gt; resources = [{\"type\": \"ec2\", \"id\": \"i-123\"}]\n        &gt;&gt;&gt; filtered = process_resources(resources, \"ec2\")\n        &gt;&gt;&gt; len(filtered)\n        1\n    \"\"\"\n</code></pre>"},{"location":"development/contributing/#command-documentation","title":"Command Documentation","text":"<p>Each command should have:</p> <ul> <li>Clear description</li> <li>Usage examples</li> <li>Option descriptions</li> <li>Output format examples</li> </ul>"},{"location":"development/contributing/#readme-updates","title":"README Updates","text":"<p>Update relevant README files when:</p> <ul> <li>Adding new commands</li> <li>Changing command behavior</li> <li>Adding new features</li> <li>Fixing significant bugs</li> </ul>"},{"location":"development/contributing/#adding-new-commands","title":"Adding New Commands","text":""},{"location":"development/contributing/#1-create-command-file","title":"1. Create Command File","text":"<p>Create a new file in <code>aws_cloud_utilities/commands/</code>:</p> <pre><code># aws_cloud_utilities/commands/newservice.py\n\"\"\"New service commands.\"\"\"\n\nimport click\nfrom ..core.config import Config\nfrom ..core.auth import AWSAuth\nfrom ..core.utils import print_output\n\n\n@click.group(name=\"newservice\")\ndef newservice_group():\n    \"\"\"New service management commands.\"\"\"\n    pass\n\n\n@newservice_group.command()\n@click.option(\"--option\", help=\"Command option\")\n@click.pass_context\ndef new_command(ctx: click.Context, option: str) -&gt; None:\n    \"\"\"New command description.\"\"\"\n    config: Config = ctx.obj[\"config\"]\n    aws_auth: AWSAuth = ctx.obj[\"aws_auth\"]\n\n    # Implementation here\n    result = {\"message\": \"Hello from new command\"}\n\n    print_output(\n        result,\n        output_format=config.aws_output_format,\n        title=\"New Command Results\"\n    )\n</code></pre>"},{"location":"development/contributing/#2-register-command","title":"2. Register Command","text":"<p>Add to <code>cli.py</code>:</p> <pre><code>from .commands import newservice\n\n# Add to main CLI\nmain.add_command(newservice.newservice_group)\n</code></pre>"},{"location":"development/contributing/#3-add-tests","title":"3. Add Tests","text":"<p>Create test file:</p> <pre><code># tests/unit/commands/test_newservice.py\nimport pytest\nfrom aws_cloud_utilities.commands.newservice import new_command\n\n\nclass TestNewServiceCommands:\n    \"\"\"Test new service commands.\"\"\"\n\n    def test_new_command(self):\n        \"\"\"Test new command functionality.\"\"\"\n        # Test implementation\n        pass\n</code></pre>"},{"location":"development/contributing/#4-update-documentation","title":"4. Update Documentation","text":"<ul> <li>Add command to documentation</li> <li>Update command index</li> <li>Add usage examples</li> </ul>"},{"location":"development/contributing/#release-process","title":"Release Process","text":""},{"location":"development/contributing/#version-numbering","title":"Version Numbering","text":"<p>We use semantic versioning (SemVer):</p> <ul> <li><code>MAJOR.MINOR.PATCH</code></li> <li>Major: Breaking changes</li> <li>Minor: New features (backward compatible)</li> <li>Patch: Bug fixes</li> </ul>"},{"location":"development/contributing/#release-steps","title":"Release Steps","text":"<ol> <li>Update version in <code>pyproject.toml</code></li> <li>Update <code>CHANGELOG.md</code></li> <li>Create release branch</li> <li>Run full test suite</li> <li>Create pull request</li> <li>Merge to main</li> <li>Create GitHub release</li> <li>Publish to PyPI (when ready)</li> </ol>"},{"location":"development/contributing/#getting-help","title":"Getting Help","text":""},{"location":"development/contributing/#communication-channels","title":"Communication Channels","text":"<ul> <li>GitHub Issues: Bug reports and feature requests</li> <li>GitHub Discussions: General questions and ideas</li> <li>Pull Request Reviews: Code-specific discussions</li> </ul>"},{"location":"development/contributing/#code-review-process","title":"Code Review Process","text":"<ol> <li>All changes require pull request</li> <li>At least one approval required</li> <li>All CI checks must pass</li> <li>Documentation must be updated</li> <li>Tests must be included</li> </ol>"},{"location":"development/contributing/#common-issues","title":"Common Issues","text":"<p>Import Errors <pre><code># Reinstall in development mode\npip install -e \".[dev]\"\n</code></pre></p> <p>Test Failures <pre><code># Run specific test with verbose output\npytest -v tests/unit/test_cli.py::test_specific_function\n</code></pre></p> <p>Linting Errors <pre><code># Auto-fix formatting\nblack aws_cloud_utilities tests\n\n# Check specific issues\nflake8 aws_cloud_utilities/commands/account.py\n</code></pre></p>"},{"location":"development/contributing/#best-practices","title":"Best Practices","text":"<ol> <li>Write tests first (TDD approach)</li> <li>Keep functions small and focused</li> <li>Use type hints everywhere</li> <li>Handle errors gracefully with clear messages</li> <li>Document everything that's not obvious</li> <li>Follow existing patterns in the codebase</li> <li>Test with real AWS resources when possible</li> <li>Consider backward compatibility for changes</li> </ol> <p>Thank you for contributing to AWS Cloud Utilities v2!</p>"},{"location":"examples/common-use-cases/","title":"Common Use Cases","text":"<p>Real-world examples of using AWS Cloud Utilities v2 for common AWS management tasks.</p>"},{"location":"examples/common-use-cases/#account-setup-and-validation","title":"Account Setup and Validation","text":""},{"location":"examples/common-use-cases/#new-account-onboarding","title":"New Account Onboarding","text":"<pre><code>#!/bin/bash\n# Complete new account setup validation\necho \"=== Account Information ===\"\naws-cloud-utilities account info\n\necho \"=== Contact Information ===\"\naws-cloud-utilities account contact-info\n\necho \"=== Available Regions ===\"\naws-cloud-utilities account regions\n\necho \"=== Service Limits ===\"\naws-cloud-utilities account limits\n\necho \"=== Control Tower Detection ===\"\naws-cloud-utilities account detect-control-tower\n\necho \"=== Initial Security Audit ===\"\naws-cloud-utilities security audit\n\necho \"=== Support Level ===\"\naws-cloud-utilities support check-level\n</code></pre>"},{"location":"examples/common-use-cases/#multi-account-management","title":"Multi-Account Management","text":"<pre><code>#!/bin/bash\n# Check multiple AWS accounts\naccounts=(\"dev\" \"staging\" \"prod\")\n\nfor account in \"${accounts[@]}\"; do\n    echo \"=== $account Account ===\"\n    aws-cloud-utilities --profile $account account info --output json &gt; ${account}-info.json\n    aws-cloud-utilities --profile $account security audit --output json &gt; ${account}-security.json\n    aws-cloud-utilities --profile $account inventory resources --output json &gt; ${account}-resources.json\ndone\n</code></pre>"},{"location":"examples/common-use-cases/#daily-operations","title":"Daily Operations","text":""},{"location":"examples/common-use-cases/#daily-health-check","title":"Daily Health Check","text":"<pre><code>#!/bin/bash\n# Daily AWS environment health check\nDATE=$(date +%Y%m%d)\n\necho \"=== Resource Health Check ===\"\naws-cloud-utilities inventory health-check --unhealthy-only\n\necho \"=== Security Issues ===\"\naws-cloud-utilities security audit --severity high\n\necho \"=== Public Resources ===\"\naws-cloud-utilities security public-resources\n\necho \"=== Support Cases ===\"\naws-cloud-utilities support cases --status open\n\n# Save results\naws-cloud-utilities inventory health-check --output json &gt; health-${DATE}.json\naws-cloud-utilities security audit --output json &gt; security-${DATE}.json\n</code></pre>"},{"location":"examples/common-use-cases/#resource-monitoring","title":"Resource Monitoring","text":"<pre><code>#!/bin/bash\n# Monitor resource changes and usage\necho \"=== Resource Inventory ===\"\naws-cloud-utilities inventory resources --all-regions --output csv &gt; resources-$(date +%Y%m%d).csv\n\necho \"=== Unused Resources ===\"\naws-cloud-utilities inventory unused-resources --age-threshold 7\n\necho \"=== Cost Analysis ===\"\naws-cloud-utilities costops analyze --group-by service\n\necho \"=== Tagging Compliance ===\"\naws-cloud-utilities inventory tagging-audit --required-tags Environment,Owner,Project\n</code></pre>"},{"location":"examples/common-use-cases/#cost-management","title":"Cost Management","text":""},{"location":"examples/common-use-cases/#monthly-cost-review","title":"Monthly Cost Review","text":"<pre><code>#!/bin/bash\n# Monthly cost optimization review\nMONTH=$(date +%Y%m)\n\necho \"=== Cost Analysis ===\"\naws-cloud-utilities costops analyze --start-date $(date -d \"1 month ago\" +%Y-%m-01) --output json &gt; cost-analysis-${MONTH}.json\n\necho \"=== Optimization Recommendations ===\"\naws-cloud-utilities costops recommendations --min-savings 50 --output json &gt; recommendations-${MONTH}.json\n\necho \"=== Unused Resources ===\"\naws-cloud-utilities inventory unused-resources --output json &gt; unused-resources-${MONTH}.json\n\necho \"=== Rightsizing Opportunities ===\"\naws-cloud-utilities costops rightsizing --min-savings 25 --output json &gt; rightsizing-${MONTH}.json\n\necho \"=== Savings Plans Analysis ===\"\naws-cloud-utilities costops savings-plans --output json &gt; savings-plans-${MONTH}.json\n\n# Generate summary report\necho \"=== Cost Summary ===\"\necho \"Total recommendations: $(jq length recommendations-${MONTH}.json)\"\necho \"Potential monthly savings: $(jq '[.[].estimated_monthly_savings] | add' recommendations-${MONTH}.json)\"\n</code></pre>"},{"location":"examples/common-use-cases/#gpu-cost-optimization","title":"GPU Cost Optimization","text":"<pre><code>#!/bin/bash\n# Find cheapest GPU instances for ML workloads\necho \"=== P3 Instance Pricing ===\"\naws-cloud-utilities costops gpu-spots --instance-type p3.2xlarge --output table\n\necho \"=== P4 Instance Pricing ===\"\naws-cloud-utilities costops gpu-spots --instance-type p4d.xlarge --output table\n\necho \"=== G4 Instance Pricing ===\"\naws-cloud-utilities costops gpu-spots --instance-type g4dn.xlarge --output table\n\necho \"=== Best GPU Deals Under $1/hour ===\"\naws-cloud-utilities costops gpu-spots --max-price 1.00 --output csv &gt; gpu-deals.csv\n\necho \"=== Multi-Region GPU Pricing ===\"\naws-cloud-utilities costops gpu-spots --regions us-east-1,us-west-2,eu-west-1 --instance-type p3.2xlarge\n</code></pre>"},{"location":"examples/common-use-cases/#security-operations","title":"Security Operations","text":""},{"location":"examples/common-use-cases/#security-audit-workflow","title":"Security Audit Workflow","text":"<pre><code>#!/bin/bash\n# Comprehensive security audit\nDATE=$(date +%Y%m%d)\n\necho \"=== Blue Team Security Audit ===\"\naws-cloud-utilities security blue-team-audit --detailed --include-remediation --output json &gt; security-audit-${DATE}.json\n\necho \"=== Public Resource Exposure ===\"\naws-cloud-utilities security public-resources --output json &gt; public-resources-${DATE}.json\n\necho \"=== IAM Analysis ===\"\naws-cloud-utilities iam analyze --output json &gt; iam-analysis-${DATE}.json\n\necho \"=== Network Security ===\"\naws-cloud-utilities security network-analysis --risky-rules-only --output json &gt; network-security-${DATE}.json\n\necho \"=== Encryption Status ===\"\naws-cloud-utilities security encryption-status --unencrypted-only --output json &gt; encryption-status-${DATE}.json\n\necho \"=== Compliance Check ===\"\naws-cloud-utilities security compliance --framework cis --output json &gt; compliance-${DATE}.json\n\n# Generate security summary\necho \"=== Security Summary ===\"\necho \"Critical findings: $(jq '[.[] | select(.severity == \"CRITICAL\")] | length' security-audit-${DATE}.json)\"\necho \"High findings: $(jq '[.[] | select(.severity == \"HIGH\")] | length' security-audit-${DATE}.json)\"\necho \"Public resources: $(jq length public-resources-${DATE}.json)\"\n</code></pre>"},{"location":"examples/common-use-cases/#incident-response","title":"Incident Response","text":"<pre><code>#!/bin/bash\n# Security incident response checklist\necho \"=== Immediate Security Assessment ===\"\n\necho \"1. Check for public exposures\"\naws-cloud-utilities security public-resources --severity critical\n\necho \"2. Review recent IAM changes\"\naws-cloud-utilities iam analyze --recent-changes\n\necho \"3. Check network security\"\naws-cloud-utilities security network-analysis --risky-rules-only\n\necho \"4. Review CloudTrail logs\"\naws-cloud-utilities logs search --log-group CloudTrail --query \"ERROR\" --start-time \"1 hour ago\"\n\necho \"5. Check for unusual activity\"\naws-cloud-utilities security audit --severity critical\n\necho \"6. Review support cases\"\naws-cloud-utilities support cases --status open\n</code></pre>"},{"location":"examples/common-use-cases/#log-management","title":"Log Management","text":""},{"location":"examples/common-use-cases/#log-analysis-workflow","title":"Log Analysis Workflow","text":"<pre><code>#!/bin/bash\n# Comprehensive log analysis\nLOG_GROUP=\"/aws/lambda/my-function\"\nSTART_TIME=\"24 hours ago\"\n\necho \"=== Log Groups Overview ===\"\naws-cloud-utilities logs groups\n\necho \"=== Error Analysis ===\"\naws-cloud-utilities logs search --log-group $LOG_GROUP --query \"ERROR\" --start-time \"$START_TIME\"\n\necho \"=== Warning Analysis ===\"\naws-cloud-utilities logs search --log-group $LOG_GROUP --query \"WARN\" --start-time \"$START_TIME\"\n\necho \"=== Log Aggregation ===\"\naws-cloud-utilities logs aggregate --log-group $LOG_GROUP --start-time \"$START_TIME\" --output json &gt; log-summary.json\n\necho \"=== Export Logs ===\"\naws-cloud-utilities logs export --log-group $LOG_GROUP --start-time \"$START_TIME\" --format json &gt; exported-logs.json\n</code></pre>"},{"location":"examples/common-use-cases/#multi-service-log-monitoring","title":"Multi-Service Log Monitoring","text":"<pre><code>#!/bin/bash\n# Monitor logs across multiple services\nservices=(\"lambda\" \"api-gateway\" \"ecs\" \"rds\")\n\nfor service in \"${services[@]}\"; do\n    echo \"=== $service Logs ===\"\n\n    # Find log groups for service\n    aws-cloud-utilities logs groups --filter $service\n\n    # Search for errors in the last hour\n    for log_group in $(aws-cloud-utilities logs groups --filter $service --output json | jq -r '.[].logGroupName'); do\n        echo \"Checking $log_group for errors...\"\n        aws-cloud-utilities logs search --log-group $log_group --query \"ERROR\" --start-time \"1 hour ago\" --max-results 10\n    done\ndone\n</code></pre>"},{"location":"examples/common-use-cases/#automation-and-reporting","title":"Automation and Reporting","text":""},{"location":"examples/common-use-cases/#weekly-report-generation","title":"Weekly Report Generation","text":"<pre><code>#!/bin/bash\n# Generate weekly AWS report\nWEEK=$(date +%Y-W%U)\nREPORT_DIR=\"reports/$WEEK\"\nmkdir -p $REPORT_DIR\n\necho \"=== Generating Weekly Report for $WEEK ===\"\n\n# Account summary\naws-cloud-utilities account info --output json &gt; $REPORT_DIR/account-info.json\n\n# Resource inventory\naws-cloud-utilities inventory resources --all-regions --output json &gt; $REPORT_DIR/resources.json\n\n# Security audit\naws-cloud-utilities security audit --output json &gt; $REPORT_DIR/security-audit.json\n\n# Cost analysis\naws-cloud-utilities costops analyze --output json &gt; $REPORT_DIR/cost-analysis.json\n\n# Unused resources\naws-cloud-utilities inventory unused-resources --output json &gt; $REPORT_DIR/unused-resources.json\n\n# Health check\naws-cloud-utilities inventory health-check --output json &gt; $REPORT_DIR/health-check.json\n\n# Generate summary\ncat &gt; $REPORT_DIR/summary.md &lt;&lt; EOF\n# AWS Weekly Report - $WEEK\n\n## Summary\n- Total resources: $(jq length $REPORT_DIR/resources.json)\n- Security findings: $(jq length $REPORT_DIR/security-audit.json)\n- Unused resources: $(jq length $REPORT_DIR/unused-resources.json)\n- Unhealthy resources: $(jq '[.[] | select(.status != \"healthy\")] | length' $REPORT_DIR/health-check.json)\n\n## Cost Analysis\n- Monthly spend: $(jq '.total_cost' $REPORT_DIR/cost-analysis.json)\n- Potential savings: $(jq '.potential_savings' $REPORT_DIR/unused-resources.json)\n\nGenerated on: $(date)\nEOF\n\necho \"Report generated in $REPORT_DIR/\"\n</code></pre>"},{"location":"examples/common-use-cases/#compliance-monitoring","title":"Compliance Monitoring","text":"<pre><code>#!/bin/bash\n# Automated compliance monitoring\nCOMPLIANCE_DIR=\"compliance/$(date +%Y%m%d)\"\nmkdir -p $COMPLIANCE_DIR\n\necho \"=== CIS Compliance Check ===\"\naws-cloud-utilities security compliance --framework cis --output json &gt; $COMPLIANCE_DIR/cis-compliance.json\n\necho \"=== Tagging Compliance ===\"\naws-cloud-utilities inventory tagging-audit --required-tags Environment,Owner,CostCenter --output json &gt; $COMPLIANCE_DIR/tagging-compliance.json\n\necho \"=== Encryption Compliance ===\"\naws-cloud-utilities security encryption-status --output json &gt; $COMPLIANCE_DIR/encryption-status.json\n\necho \"=== IAM Compliance ===\"\naws-cloud-utilities iam analyze --output json &gt; $COMPLIANCE_DIR/iam-analysis.json\n\n# Generate compliance score\nTOTAL_CHECKS=$(jq length $COMPLIANCE_DIR/cis-compliance.json)\nPASSED_CHECKS=$(jq '[.[] | select(.status == \"PASS\")] | length' $COMPLIANCE_DIR/cis-compliance.json)\nCOMPLIANCE_SCORE=$(echo \"scale=2; $PASSED_CHECKS * 100 / $TOTAL_CHECKS\" | bc)\n\necho \"=== Compliance Summary ===\"\necho \"CIS Compliance Score: $COMPLIANCE_SCORE%\"\necho \"Passed: $PASSED_CHECKS/$TOTAL_CHECKS checks\"\n</code></pre>"},{"location":"examples/common-use-cases/#integration-examples","title":"Integration Examples","text":""},{"location":"examples/common-use-cases/#cicd-pipeline-integration","title":"CI/CD Pipeline Integration","text":"<pre><code># .github/workflows/aws-audit.yml\nname: AWS Security Audit\non:\n  schedule:\n    - cron: '0 2 * * *'  # Daily at 2 AM\n  workflow_dispatch:\n\njobs:\n  audit:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Configure AWS credentials\n        uses: aws-actions/configure-aws-credentials@v1\n        with:\n          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n          aws-region: us-east-1\n\n      - name: Install AWS Cloud Utilities\n        run: pip install aws-cloud-utilities\n\n      - name: Run Security Audit\n        run: |\n          aws-cloud-utilities security audit --output json &gt; security-audit.json\n          aws-cloud-utilities security public-resources --output json &gt; public-resources.json\n\n      - name: Upload Results\n        uses: actions/upload-artifact@v2\n        with:\n          name: security-audit-results\n          path: |\n            security-audit.json\n            public-resources.json\n</code></pre>"},{"location":"examples/common-use-cases/#monitoring-integration","title":"Monitoring Integration","text":"<pre><code>#!/bin/bash\n# Integration with monitoring systems\n# Send metrics to CloudWatch\n\n# Get resource counts\nTOTAL_RESOURCES=$(aws-cloud-utilities inventory resources --output json | jq length)\nUNHEALTHY_RESOURCES=$(aws-cloud-utilities inventory health-check --unhealthy-only --output json | jq length)\nSECURITY_FINDINGS=$(aws-cloud-utilities security audit --severity high --output json | jq length)\n\n# Send to CloudWatch\naws cloudwatch put-metric-data --namespace \"AWS/CloudUtilities\" --metric-data \\\n  MetricName=TotalResources,Value=$TOTAL_RESOURCES,Unit=Count \\\n  MetricName=UnhealthyResources,Value=$UNHEALTHY_RESOURCES,Unit=Count \\\n  MetricName=SecurityFindings,Value=$SECURITY_FINDINGS,Unit=Count\n</code></pre> <p>These examples demonstrate practical, real-world usage patterns that can be adapted for specific environments and requirements.</p>"},{"location":"getting-started/configuration/","title":"Configuration","text":"<p>AWS Cloud Utilities v2 provides flexible configuration options through environment variables, configuration files, and command-line options.</p>"},{"location":"getting-started/configuration/#configuration-methods","title":"Configuration Methods","text":"<p>Configuration is loaded in this order (later sources override earlier ones):</p> <ol> <li>Default values</li> <li>Configuration file (<code>~/.aws-cloud-utilities.env</code>)</li> <li>Environment variables</li> <li>Command-line options</li> </ol>"},{"location":"getting-started/configuration/#interactive-configuration","title":"Interactive Configuration","text":"<p>The easiest way to configure the tool:</p> <pre><code>aws-cloud-utilities configure\n</code></pre> <p>This will prompt you for: - AWS Profile - Default AWS Region - Output Format - Number of Workers</p>"},{"location":"getting-started/configuration/#configuration-file","title":"Configuration File","text":"<p>Create <code>~/.aws-cloud-utilities.env</code> with your preferred settings:</p> <pre><code># AWS Configuration\nAWS_PROFILE=default\nAWS_DEFAULT_REGION=us-east-1\nAWS_OUTPUT_FORMAT=table\n\n# Performance Settings\nWORKERS=4\n\n# Logging\nLOG_LEVEL=INFO\nVERBOSE=false\nDEBUG=false\n\n# Output Settings\nSHOW_PROGRESS=true\nCOLOR_OUTPUT=true\n</code></pre>"},{"location":"getting-started/configuration/#environment-variables","title":"Environment Variables","text":"<p>Set environment variables for temporary overrides:</p> <pre><code># AWS settings\nexport AWS_PROFILE=production\nexport AWS_DEFAULT_REGION=eu-west-1\nexport AWS_OUTPUT_FORMAT=json\n\n# Performance\nexport WORKERS=8\n\n# Logging\nexport LOG_LEVEL=DEBUG\nexport VERBOSE=true\n</code></pre>"},{"location":"getting-started/configuration/#command-line-options","title":"Command-Line Options","text":"<p>Override any setting with command-line options:</p> <pre><code>aws-cloud-utilities --profile staging --region us-west-2 --output json account info\n</code></pre>"},{"location":"getting-started/configuration/#configuration-options","title":"Configuration Options","text":""},{"location":"getting-started/configuration/#aws-settings","title":"AWS Settings","text":"Option Environment Variable Default Description <code>--profile</code> <code>AWS_PROFILE</code> <code>default</code> AWS profile to use <code>--region</code> <code>AWS_DEFAULT_REGION</code> <code>us-east-1</code> Default AWS region <code>--output</code> <code>AWS_OUTPUT_FORMAT</code> <code>table</code> Output format"},{"location":"getting-started/configuration/#performance-settings","title":"Performance Settings","text":"Option Environment Variable Default Description N/A <code>WORKERS</code> <code>4</code> Number of parallel workers N/A <code>TIMEOUT</code> <code>30</code> Request timeout in seconds N/A <code>RETRY_ATTEMPTS</code> <code>3</code> Number of retry attempts"},{"location":"getting-started/configuration/#logging-settings","title":"Logging Settings","text":"Option Environment Variable Default Description <code>--verbose</code> <code>VERBOSE</code> <code>false</code> Enable verbose output <code>--debug</code> <code>DEBUG</code> <code>false</code> Enable debug mode N/A <code>LOG_LEVEL</code> <code>INFO</code> Logging level N/A <code>LOG_FILE</code> None Log file path"},{"location":"getting-started/configuration/#output-settings","title":"Output Settings","text":"Option Environment Variable Default Description N/A <code>SHOW_PROGRESS</code> <code>true</code> Show progress bars N/A <code>COLOR_OUTPUT</code> <code>true</code> Enable colored output N/A <code>TABLE_MAX_WIDTH</code> <code>120</code> Maximum table width"},{"location":"getting-started/configuration/#aws-profile-configuration","title":"AWS Profile Configuration","text":""},{"location":"getting-started/configuration/#using-aws-cli-profiles","title":"Using AWS CLI Profiles","text":"<p>Configure multiple profiles with AWS CLI:</p> <pre><code># Configure default profile\naws configure\n\n# Configure named profile\naws configure --profile production\n</code></pre> <p>Then use with the tool:</p> <pre><code>aws-cloud-utilities --profile production account info\n</code></pre>"},{"location":"getting-started/configuration/#profile-specific-settings","title":"Profile-Specific Settings","text":"<p>Create profile-specific configuration files:</p> <pre><code># ~/.aws-cloud-utilities-production.env\nAWS_PROFILE=production\nAWS_DEFAULT_REGION=us-east-1\nWORKERS=8\nLOG_LEVEL=WARNING\n</code></pre> <p>Load with:</p> <pre><code>aws-cloud-utilities --config ~/.aws-cloud-utilities-production.env account info\n</code></pre>"},{"location":"getting-started/configuration/#region-configuration","title":"Region Configuration","text":""},{"location":"getting-started/configuration/#default-region","title":"Default Region","text":"<p>Set a default region for all operations:</p> <pre><code>AWS_DEFAULT_REGION=us-west-2\n</code></pre>"},{"location":"getting-started/configuration/#multi-region-operations","title":"Multi-Region Operations","text":"<p>Some commands support multi-region operations:</p> <pre><code># Inventory across all regions\naws-cloud-utilities inventory resources --all-regions\n\n# Specific regions\naws-cloud-utilities inventory resources --regions us-east-1,us-west-2,eu-west-1\n</code></pre>"},{"location":"getting-started/configuration/#output-format-configuration","title":"Output Format Configuration","text":""},{"location":"getting-started/configuration/#supported-formats","title":"Supported Formats","text":"<ul> <li><code>table</code> - Rich formatted tables (default)</li> <li><code>json</code> - JSON output</li> <li><code>yaml</code> - YAML output  </li> <li><code>csv</code> - CSV format (for tabular data)</li> </ul>"},{"location":"getting-started/configuration/#format-specific-settings","title":"Format-Specific Settings","text":"<pre><code># Table format settings\nTABLE_MAX_WIDTH=120\nTABLE_SHOW_LINES=true\n\n# JSON format settings\nJSON_INDENT=2\nJSON_SORT_KEYS=true\n\n# CSV format settings\nCSV_DELIMITER=,\nCSV_QUOTE_CHAR=\"\n</code></pre>"},{"location":"getting-started/configuration/#performance-tuning","title":"Performance Tuning","text":""},{"location":"getting-started/configuration/#worker-configuration","title":"Worker Configuration","text":"<p>Adjust parallel processing:</p> <pre><code># More workers for faster processing (uses more resources)\nWORKERS=8\n\n# Fewer workers for limited resources\nWORKERS=2\n</code></pre>"},{"location":"getting-started/configuration/#timeout-settings","title":"Timeout Settings","text":"<p>Configure timeouts for different operations:</p> <pre><code># General timeout\nTIMEOUT=30\n\n# Long-running operations\nLONG_OPERATION_TIMEOUT=300\n\n# Connection timeout\nCONNECTION_TIMEOUT=10\n</code></pre>"},{"location":"getting-started/configuration/#retry-configuration","title":"Retry Configuration","text":"<p>Configure retry behavior:</p> <pre><code>RETRY_ATTEMPTS=3\nRETRY_BACKOFF=2\nRETRY_MAX_DELAY=60\n</code></pre>"},{"location":"getting-started/configuration/#logging-configuration","title":"Logging Configuration","text":""},{"location":"getting-started/configuration/#log-levels","title":"Log Levels","text":"<p>Available log levels: - <code>DEBUG</code> - Detailed debugging information - <code>INFO</code> - General information - <code>WARNING</code> - Warning messages - <code>ERROR</code> - Error messages only</p>"},{"location":"getting-started/configuration/#log-file-configuration","title":"Log File Configuration","text":"<pre><code># Enable file logging\nLOG_FILE=/var/log/aws-cloud-utilities.log\n\n# Log rotation\nLOG_MAX_SIZE=10MB\nLOG_BACKUP_COUNT=5\n</code></pre>"},{"location":"getting-started/configuration/#structured-logging","title":"Structured Logging","text":"<p>Enable structured JSON logging:</p> <pre><code>LOG_FORMAT=json\nLOG_INCLUDE_TIMESTAMP=true\nLOG_INCLUDE_LEVEL=true\n</code></pre>"},{"location":"getting-started/configuration/#security-configuration","title":"Security Configuration","text":""},{"location":"getting-started/configuration/#credential-management","title":"Credential Management","text":"<pre><code># Use IAM roles (recommended)\nAWS_USE_IAM_ROLE=true\n\n# Credential file location\nAWS_SHARED_CREDENTIALS_FILE=~/.aws/credentials\n\n# Config file location\nAWS_CONFIG_FILE=~/.aws/config\n</code></pre>"},{"location":"getting-started/configuration/#session-configuration","title":"Session Configuration","text":"<pre><code># Session duration\nAWS_SESSION_DURATION=3600\n\n# MFA settings\nAWS_MFA_SERIAL=arn:aws:iam::123456789012:mfa/username\n</code></pre>"},{"location":"getting-started/configuration/#validation","title":"Validation","text":"<p>Validate your configuration:</p> <pre><code># Check configuration\naws-cloud-utilities info\n\n# Test AWS connectivity\naws-cloud-utilities account info\n\n# Validate specific profile\naws-cloud-utilities --profile production account validate\n</code></pre>"},{"location":"getting-started/configuration/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/configuration/#common-issues","title":"Common Issues","text":"<ol> <li> <p>Profile not found <pre><code>aws configure list-profiles\naws-cloud-utilities --profile correct-profile-name account info\n</code></pre></p> </li> <li> <p>Region not available <pre><code>aws-cloud-utilities account regions\n</code></pre></p> </li> <li> <p>Permission errors <pre><code>aws sts get-caller-identity\naws-cloud-utilities --debug account info\n</code></pre></p> </li> </ol>"},{"location":"getting-started/configuration/#debug-configuration","title":"Debug Configuration","text":"<p>Enable debug mode to see configuration loading:</p> <pre><code>aws-cloud-utilities --debug --verbose account info\n</code></pre> <p>This will show: - Configuration file locations - Environment variables loaded - Final configuration values - AWS credential resolution</p>"},{"location":"getting-started/configuration/#best-practices","title":"Best Practices","text":"<ol> <li>Use profiles for different environments</li> <li>Set default region to avoid specifying it repeatedly</li> <li>Use configuration files for consistent settings</li> <li>Enable logging for troubleshooting</li> <li>Tune workers based on your system resources</li> <li>Use IAM roles instead of access keys when possible</li> </ol>"},{"location":"getting-started/configuration/#next-steps","title":"Next Steps","text":"<ul> <li>Quick Start - Start using the tool</li> <li>Command Reference - Explore available commands</li> <li>Examples - See real-world usage</li> </ul>"},{"location":"getting-started/installation/","title":"Installation","text":"<p>This guide covers different ways to install AWS Cloud Utilities v2.</p>"},{"location":"getting-started/installation/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.12 or higher</li> <li>AWS CLI configured with appropriate credentials</li> <li>pip package manager</li> </ul>"},{"location":"getting-started/installation/#installation-methods","title":"Installation Methods","text":""},{"location":"getting-started/installation/#from-pypi-recommended","title":"From PyPI (Recommended)","text":"<p>Coming Soon</p> <p>PyPI installation will be available once the package is published.</p> <pre><code>pip install aws-cloud-utilities\n</code></pre>"},{"location":"getting-started/installation/#from-source-development","title":"From Source (Development)","text":"<p>For the latest features or development:</p> <pre><code># Clone the repository\ngit clone https://github.com/jon-the-dev/aws-cloud-tools.git\ncd aws-cloud-tools/v2\n\n# Install in development mode\npip install -e .\n</code></pre>"},{"location":"getting-started/installation/#using-the-development-script","title":"Using the Development Script","text":"<p>For quick development setup:</p> <pre><code>cd aws-cloud-tools/v2\n./install_dev.sh\n</code></pre> <p>This script will: - Create a virtual environment (if needed) - Install the package in development mode - Install development dependencies - Set up pre-commit hooks</p>"},{"location":"getting-started/installation/#verify-installation","title":"Verify Installation","text":"<p>After installation, verify everything works:</p> <pre><code># Check version\naws-cloud-utilities --version\n\n# Get help\naws-cloud-utilities --help\n\n# Test basic functionality\naws-cloud-utilities account info\n</code></pre>"},{"location":"getting-started/installation/#dependencies","title":"Dependencies","text":"<p>The tool automatically installs these key dependencies:</p> <ul> <li>boto3: AWS SDK for Python</li> <li>click: Command-line interface framework</li> <li>rich: Rich text and beautiful formatting</li> <li>pydantic: Data validation and settings management</li> <li>python-dotenv: Environment variable management</li> <li>PyYAML: YAML file support</li> </ul>"},{"location":"getting-started/installation/#development-dependencies","title":"Development Dependencies","text":"<p>For development and testing:</p> <pre><code>pip install -e \".[dev]\"\n</code></pre> <p>This includes: - pytest: Testing framework - black: Code formatting - flake8: Code linting - mypy: Type checking - pre-commit: Git hooks</p>"},{"location":"getting-started/installation/#aws-configuration","title":"AWS Configuration","text":"<p>Ensure your AWS credentials are configured:</p> <pre><code># Using AWS CLI\naws configure\n\n# Or set environment variables\nexport AWS_ACCESS_KEY_ID=your-access-key\nexport AWS_SECRET_ACCESS_KEY=your-secret-key\nexport AWS_DEFAULT_REGION=us-east-1\n</code></pre>"},{"location":"getting-started/installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/installation/#permission-issues","title":"Permission Issues","text":"<p>If you encounter permission errors:</p> <pre><code># Use --user flag\npip install --user aws-cloud-utilities\n\n# Or use virtual environment\npython -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\npip install aws-cloud-utilities\n</code></pre>"},{"location":"getting-started/installation/#python-version-issues","title":"Python Version Issues","text":"<p>Check your Python version:</p> <pre><code>python --version\n# Should be 3.12 or higher\n</code></pre> <p>If you have multiple Python versions:</p> <pre><code>python3.12 -m pip install aws-cloud-utilities\n</code></pre>"},{"location":"getting-started/installation/#aws-credentials-issues","title":"AWS Credentials Issues","text":"<p>Test your AWS credentials:</p> <pre><code>aws sts get-caller-identity\n</code></pre> <p>If this fails, reconfigure your AWS credentials:</p> <pre><code>aws configure\n</code></pre>"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<ul> <li>Quick Start Guide - Get started with basic commands</li> <li>Configuration - Configure profiles and settings</li> <li>Command Reference - Explore available commands</li> </ul>"},{"location":"getting-started/migration/","title":"Migration from v1","text":"<p>This guide helps you migrate from the original v1 script collection to the unified v2 CLI tool.</p>"},{"location":"getting-started/migration/#overview","title":"Overview","text":"<p>AWS Cloud Utilities v2 consolidates all the individual v1 scripts into a single, unified command-line interface with enhanced functionality and better user experience.</p>"},{"location":"getting-started/migration/#key-changes","title":"Key Changes","text":""},{"location":"getting-started/migration/#from-scripts-to-unified-cli","title":"From Scripts to Unified CLI","text":"<p>v1 (Multiple Scripts) <pre><code>python support/aws_check_support.py\npython account/aws_get_acct_info.py\npython account/detect_control_tower.py\n</code></pre></p> <p>v2 (Unified CLI) <pre><code>aws-cloud-utilities support check-level\naws-cloud-utilities account contact-info\naws-cloud-utilities account detect-control-tower\n</code></pre></p>"},{"location":"getting-started/migration/#enhanced-command-structure","title":"Enhanced Command Structure","text":"<p>v2 follows a hierarchical structure: <pre><code>aws-cloud-utilities [GLOBAL-OPTIONS] &lt;service&gt; &lt;operation&gt; [OPTIONS]\n</code></pre></p>"},{"location":"getting-started/migration/#command-mapping","title":"Command Mapping","text":""},{"location":"getting-started/migration/#support-commands","title":"Support Commands","text":"v1 Script v2 Command Notes <code>support/aws_check_support.py</code> <code>aws-cloud-utilities support check-level</code> Enhanced with better error handling <code>support/aws_check_support2.py</code> <code>aws-cloud-utilities support check-level --method api</code> Integrated as option <p>New in v2: <pre><code>aws-cloud-utilities support cases --status open\naws-cloud-utilities support services\naws-cloud-utilities support severity-levels\n</code></pre></p>"},{"location":"getting-started/migration/#account-commands","title":"Account Commands","text":"v1 Script v2 Command Notes <code>account/aws_get_acct_info.py</code> <code>aws-cloud-utilities account contact-info</code> Enhanced output formatting <code>account/detect_control_tower.py</code> <code>aws-cloud-utilities account detect-control-tower</code> Parallel region scanning <p>New in v2: <pre><code>aws-cloud-utilities account info\naws-cloud-utilities account regions\naws-cloud-utilities account limits\naws-cloud-utilities account validate\n</code></pre></p>"},{"location":"getting-started/migration/#cost-optimization-commands","title":"Cost Optimization Commands","text":"v1 Script v2 Command Notes <code>costops/aws_pricing.py</code> <code>aws-cloud-utilities costops pricing</code> Enhanced with more services <code>costops/gpu_spot_prices.py</code> <code>aws-cloud-utilities costops gpu-spots</code> Better filtering and sorting <p>New in v2: <pre><code>aws-cloud-utilities costops analyze\naws-cloud-utilities costops recommendations\naws-cloud-utilities costops savings-plans\n</code></pre></p>"},{"location":"getting-started/migration/#security-commands","title":"Security Commands","text":"v1 Script v2 Command Notes <code>security/blue_team_audit.py</code> <code>aws-cloud-utilities security blue-team-audit</code> Enhanced checks <code>security/public_resources.py</code> <code>aws-cloud-utilities security public-resources</code> Better detection <p>New in v2: <pre><code>aws-cloud-utilities security audit\naws-cloud-utilities security compliance\naws-cloud-utilities iam analyze\n</code></pre></p>"},{"location":"getting-started/migration/#migration-steps","title":"Migration Steps","text":""},{"location":"getting-started/migration/#1-install-v2","title":"1. Install v2","text":"<pre><code>cd aws-cloud-tools/v2\npip install -e .\n</code></pre>"},{"location":"getting-started/migration/#2-update-your-scripts","title":"2. Update Your Scripts","text":"<p>Before (v1): <pre><code>#!/bin/bash\ncd /path/to/aws-cloud-tools\npython support/aws_check_support.py\npython account/aws_get_acct_info.py\n</code></pre></p> <p>After (v2): <pre><code>#!/bin/bash\naws-cloud-utilities support check-level\naws-cloud-utilities account contact-info\n</code></pre></p>"},{"location":"getting-started/migration/#3-update-configuration","title":"3. Update Configuration","text":"<p>v1 Configuration: - Individual script configurations - Hardcoded values in scripts - Environment variables scattered</p> <p>v2 Configuration: <pre><code># Interactive setup\naws-cloud-utilities configure\n\n# Or create ~/.aws-cloud-utilities.env\nAWS_PROFILE=default\nAWS_DEFAULT_REGION=us-east-1\nAWS_OUTPUT_FORMAT=table\nWORKERS=4\n</code></pre></p>"},{"location":"getting-started/migration/#4-update-output-handling","title":"4. Update Output Handling","text":"<p>v1 Output: - Inconsistent formats - Basic text output - Limited formatting options</p> <p>v2 Output: <pre><code># Multiple formats available\naws-cloud-utilities account info --output json\naws-cloud-utilities account info --output yaml\naws-cloud-utilities account info --output table\naws-cloud-utilities account info --output csv\n</code></pre></p>"},{"location":"getting-started/migration/#feature-enhancements","title":"Feature Enhancements","text":""},{"location":"getting-started/migration/#improved-error-handling","title":"Improved Error Handling","text":"<p>v1: - Basic error messages - Script failures without context - No graceful degradation</p> <p>v2: - Rich error messages with context - Graceful degradation with limited permissions - Actionable error guidance</p>"},{"location":"getting-started/migration/#better-performance","title":"Better Performance","text":"<p>v1: - Sequential operations - No progress indicators - Fixed timeouts</p> <p>v2: - Parallel processing with configurable workers - Progress bars for long operations - Configurable timeouts and retries</p>"},{"location":"getting-started/migration/#enhanced-output","title":"Enhanced Output","text":"<p>v1: - Plain text output - Inconsistent formatting - Limited data export options</p> <p>v2: - Rich console output with colors and tables - Multiple export formats (JSON, YAML, CSV) - Consistent formatting across all commands</p>"},{"location":"getting-started/migration/#automation-migration","title":"Automation Migration","text":""},{"location":"getting-started/migration/#cron-jobs","title":"Cron Jobs","text":"<p>Before: <pre><code># /etc/cron.d/aws-audit\n0 2 * * * user cd /path/to/scripts &amp;&amp; python security/blue_team_audit.py &gt; /var/log/audit.log\n</code></pre></p> <p>After: <pre><code># /etc/cron.d/aws-audit\n0 2 * * * user aws-cloud-utilities security blue-team-audit --output json &gt; /var/log/audit.json\n</code></pre></p>"},{"location":"getting-started/migration/#cicd-pipelines","title":"CI/CD Pipelines","text":"<p>Before: <pre><code>- name: Run AWS Audit\n  run: |\n    cd aws-cloud-tools\n    python security/blue_team_audit.py\n    python account/detect_control_tower.py\n</code></pre></p> <p>After: <pre><code>- name: Run AWS Audit\n  run: |\n    aws-cloud-utilities security blue-team-audit --output json &gt; audit.json\n    aws-cloud-utilities account detect-control-tower --output json &gt; control-tower.json\n</code></pre></p>"},{"location":"getting-started/migration/#monitoring-scripts","title":"Monitoring Scripts","text":"<p>Before: <pre><code>import subprocess\nresult = subprocess.run(['python', 'support/aws_check_support.py'], capture_output=True)\n</code></pre></p> <p>After: <pre><code>import subprocess\nresult = subprocess.run(['aws-cloud-utilities', 'support', 'check-level', '--output', 'json'], capture_output=True)\n</code></pre></p>"},{"location":"getting-started/migration/#backward-compatibility","title":"Backward Compatibility","text":""},{"location":"getting-started/migration/#environment-variables","title":"Environment Variables","text":"<p>Most v1 environment variables are still supported:</p> <pre><code># Still works in v2\nexport AWS_PROFILE=production\nexport AWS_DEFAULT_REGION=us-west-2\n</code></pre>"},{"location":"getting-started/migration/#aws-configuration","title":"AWS Configuration","text":"<p>Your existing AWS configuration continues to work:</p> <pre><code># ~/.aws/credentials and ~/.aws/config are still used\naws-cloud-utilities --profile production account info\n</code></pre>"},{"location":"getting-started/migration/#testing-your-migration","title":"Testing Your Migration","text":""},{"location":"getting-started/migration/#1-verify-installation","title":"1. Verify Installation","text":"<pre><code>aws-cloud-utilities --version\naws-cloud-utilities --help\n</code></pre>"},{"location":"getting-started/migration/#2-test-basic-commands","title":"2. Test Basic Commands","text":"<pre><code># Test account access\naws-cloud-utilities account info\n\n# Test with your profile\naws-cloud-utilities --profile your-profile account info\n</code></pre>"},{"location":"getting-started/migration/#3-compare-outputs","title":"3. Compare Outputs","text":"<p>Run equivalent commands and compare:</p> <pre><code># v1\npython account/aws_get_acct_info.py &gt; v1-output.txt\n\n# v2\naws-cloud-utilities account contact-info &gt; v2-output.txt\n</code></pre>"},{"location":"getting-started/migration/#4-test-automation","title":"4. Test Automation","text":"<p>Update one automation script at a time and test thoroughly.</p>"},{"location":"getting-started/migration/#troubleshooting-migration","title":"Troubleshooting Migration","text":""},{"location":"getting-started/migration/#common-issues","title":"Common Issues","text":"<ol> <li> <p>Command not found <pre><code># Ensure v2 is installed\npip install -e /path/to/aws-cloud-tools/v2\n</code></pre></p> </li> <li> <p>Different output format <pre><code># Use --output to match expected format\naws-cloud-utilities account info --output json\n</code></pre></p> </li> <li> <p>Missing functionality <pre><code># Check if command exists in v2\naws-cloud-utilities --help\naws-cloud-utilities &lt;service&gt; --help\n</code></pre></p> </li> <li> <p>Permission errors <pre><code># Same AWS permissions needed\naws sts get-caller-identity\n</code></pre></p> </li> </ol>"},{"location":"getting-started/migration/#getting-help","title":"Getting Help","text":"<pre><code># General help\naws-cloud-utilities --help\n\n# Service help\naws-cloud-utilities account --help\n\n# Command help\naws-cloud-utilities account info --help\n</code></pre>"},{"location":"getting-started/migration/#migration-checklist","title":"Migration Checklist","text":"<ul> <li> Install v2 CLI tool</li> <li> Test basic commands with your AWS profile</li> <li> Update automation scripts one by one</li> <li> Update cron jobs and CI/CD pipelines</li> <li> Update monitoring and alerting scripts</li> <li> Test all updated automation</li> <li> Update documentation and runbooks</li> <li> Train team members on new commands</li> <li> Remove v1 scripts (after thorough testing)</li> </ul>"},{"location":"getting-started/migration/#benefits-after-migration","title":"Benefits After Migration","text":"<ol> <li>Unified Interface: Single command instead of multiple scripts</li> <li>Better UX: Rich output, progress indicators, help system</li> <li>Enhanced Functionality: More options and better error handling</li> <li>Consistent Patterns: Same CLI patterns across all services</li> <li>Modern Python: Type hints, proper packaging, testing</li> <li>Better Performance: Parallel processing and optimization</li> <li>Easier Maintenance: Single codebase instead of scattered scripts</li> </ol>"},{"location":"getting-started/migration/#next-steps","title":"Next Steps","text":"<ul> <li>Quick Start - Learn the new commands</li> <li>Configuration - Set up your preferences</li> <li>Command Reference - Explore all available commands</li> <li>Examples - See real-world usage patterns</li> </ul>"},{"location":"getting-started/quick-start/","title":"Quick Start","text":"<p>Get up and running with AWS Cloud Utilities v2 in minutes.</p>"},{"location":"getting-started/quick-start/#first-steps","title":"First Steps","text":""},{"location":"getting-started/quick-start/#1-install-the-tool","title":"1. Install the Tool","text":"<pre><code># From source (current method)\ngit clone https://github.com/jon-the-dev/aws-cloud-tools.git\ncd aws-cloud-tools/v2\npip install -e .\n</code></pre>"},{"location":"getting-started/quick-start/#2-verify-installation","title":"2. Verify Installation","text":"<pre><code>aws-cloud-utilities --version\n</code></pre>"},{"location":"getting-started/quick-start/#3-check-your-aws-connection","title":"3. Check Your AWS Connection","text":"<pre><code>aws-cloud-utilities account info\n</code></pre> <p>This command will show your AWS account details and verify your credentials are working.</p>"},{"location":"getting-started/quick-start/#essential-commands","title":"Essential Commands","text":""},{"location":"getting-started/quick-start/#account-information","title":"Account Information","text":"<pre><code># Basic account info\naws-cloud-utilities account info\n\n# Contact information\naws-cloud-utilities account contact-info\n\n# Available regions\naws-cloud-utilities account regions\n\n# Service limits\naws-cloud-utilities account limits\n</code></pre>"},{"location":"getting-started/quick-start/#resource-inventory","title":"Resource Inventory","text":"<pre><code># List all resources\naws-cloud-utilities inventory resources\n\n# Resources in specific region\naws-cloud-utilities inventory resources --region us-west-2\n\n# Filter by service\naws-cloud-utilities inventory resources --service ec2\n\n# Export to JSON\naws-cloud-utilities inventory resources --output json &gt; resources.json\n</code></pre>"},{"location":"getting-started/quick-start/#cost-optimization","title":"Cost Optimization","text":"<pre><code># Get pricing for EC2 instances\naws-cloud-utilities costops pricing --service ec2\n\n# Find cheapest spot instances\naws-cloud-utilities costops gpu-spots --instance-type p3.2xlarge\n\n# Cost analysis\naws-cloud-utilities costops analyze\n\n# Savings recommendations\naws-cloud-utilities costops recommendations\n</code></pre>"},{"location":"getting-started/quick-start/#security-auditing","title":"Security Auditing","text":"<pre><code># Basic security audit\naws-cloud-utilities security audit\n\n# Blue team security assessment\naws-cloud-utilities security blue-team-audit\n\n# Check for public resources\naws-cloud-utilities security public-resources\n\n# IAM analysis\naws-cloud-utilities iam analyze\n</code></pre>"},{"location":"getting-started/quick-start/#log-management","title":"Log Management","text":"<pre><code># List log groups\naws-cloud-utilities logs groups\n\n# Aggregate logs from a group\naws-cloud-utilities logs aggregate --log-group /aws/lambda/my-function\n\n# Search logs\naws-cloud-utilities logs search --log-group /aws/lambda/my-function --query \"ERROR\"\n\n# Export logs\naws-cloud-utilities logs export --log-group /aws/lambda/my-function --start-time \"2024-01-01\"\n</code></pre>"},{"location":"getting-started/quick-start/#common-workflows","title":"Common Workflows","text":""},{"location":"getting-started/quick-start/#1-new-account-setup-audit","title":"1. New Account Setup Audit","text":"<pre><code># Get account overview\naws-cloud-utilities account info\naws-cloud-utilities account contact-info\n\n# Security baseline check\naws-cloud-utilities security audit\naws-cloud-utilities iam analyze\n\n# Resource inventory\naws-cloud-utilities inventory resources\n</code></pre>"},{"location":"getting-started/quick-start/#2-cost-optimization-review","title":"2. Cost Optimization Review","text":"<pre><code># Current resource inventory\naws-cloud-utilities inventory resources --output json &gt; current-resources.json\n\n# Cost analysis\naws-cloud-utilities costops analyze\n\n# Find optimization opportunities\naws-cloud-utilities costops recommendations\n\n# Check for unused resources\naws-cloud-utilities inventory unused-resources\n</code></pre>"},{"location":"getting-started/quick-start/#3-security-assessment","title":"3. Security Assessment","text":"<pre><code># Comprehensive security audit\naws-cloud-utilities security blue-team-audit\n\n# Check for public resources\naws-cloud-utilities security public-resources\n\n# IAM permissions analysis\naws-cloud-utilities iam analyze\naws-cloud-utilities iam unused-permissions\n\n# Network security\naws-cloud-utilities networking security-groups\n</code></pre>"},{"location":"getting-started/quick-start/#4-troubleshooting-issues","title":"4. Troubleshooting Issues","text":"<pre><code># Check CloudWatch logs\naws-cloud-utilities logs groups\naws-cloud-utilities logs search --log-group /aws/lambda/my-function --query \"ERROR\"\n\n# Resource health check\naws-cloud-utilities inventory health-check\n\n# Support case management\naws-cloud-utilities support cases --status open\n</code></pre>"},{"location":"getting-started/quick-start/#output-formats","title":"Output Formats","text":"<p>All commands support multiple output formats:</p> <pre><code># Table format (default)\naws-cloud-utilities account info\n\n# JSON format\naws-cloud-utilities account info --output json\n\n# YAML format\naws-cloud-utilities account info --output yaml\n\n# CSV format (for tabular data)\naws-cloud-utilities inventory resources --output csv\n</code></pre>"},{"location":"getting-started/quick-start/#global-options","title":"Global Options","text":"<p>Use these options with any command:</p> <pre><code># Specify AWS profile\naws-cloud-utilities --profile production account info\n\n# Specify region\naws-cloud-utilities --region eu-west-1 inventory resources\n\n# Verbose output\naws-cloud-utilities --verbose security audit\n\n# Debug mode\naws-cloud-utilities --debug logs aggregate --log-group /aws/lambda/my-function\n</code></pre>"},{"location":"getting-started/quick-start/#configuration","title":"Configuration","text":"<p>Create a configuration file for default settings:</p> <pre><code># Interactive configuration\naws-cloud-utilities configure\n</code></pre> <p>Or create <code>~/.aws-cloud-utilities.env</code>:</p> <pre><code>AWS_PROFILE=default\nAWS_DEFAULT_REGION=us-east-1\nAWS_OUTPUT_FORMAT=table\nWORKERS=4\n</code></pre>"},{"location":"getting-started/quick-start/#getting-help","title":"Getting Help","text":"<pre><code># General help\naws-cloud-utilities --help\n\n# Service-specific help\naws-cloud-utilities account --help\n\n# Command-specific help\naws-cloud-utilities account info --help\n</code></pre>"},{"location":"getting-started/quick-start/#next-steps","title":"Next Steps","text":"<ul> <li>Configuration Guide - Detailed configuration options</li> <li>Command Reference - Complete command documentation</li> <li>Examples - Real-world usage examples</li> <li>Migration Guide - Migrate from v1 scripts</li> </ul>"},{"location":"reference/changelog/","title":"Changelog","text":"<p>All notable changes to AWS Cloud Utilities will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.</p>"},{"location":"reference/changelog/#200-2024-07-08","title":"[2.0.0] - 2024-07-08","text":""},{"location":"reference/changelog/#added","title":"Added","text":"<ul> <li>Initial v2 release with unified CLI interface</li> <li>Core infrastructure with configuration management</li> <li>AWS authentication and session management</li> <li>Rich console output with tables and colors</li> <li>Account management commands</li> <li>Modular command structure for all AWS services</li> <li>Comprehensive error handling and logging</li> <li>Configuration file support with .env files</li> <li>Global options for profile, region, output format</li> <li>Parallel processing capabilities</li> <li>Type hints throughout codebase</li> <li>Comprehensive documentation</li> </ul>"},{"location":"reference/changelog/#changed","title":"Changed","text":"<ul> <li>Complete rewrite from individual scripts to unified package</li> <li>Modern Python packaging with pyproject.toml</li> <li>Click-based CLI instead of argparse</li> <li>Rich output formatting instead of plain text</li> <li>Pydantic-based configuration management</li> <li>Structured logging with configurable levels</li> </ul>"},{"location":"reference/changelog/#migration-from-v1","title":"Migration from v1","text":"<ul> <li>All original script functionality preserved</li> <li>New unified command structure: <code>aws-cloud-utilities &lt;service&gt; &lt;operation&gt;</code></li> <li>Configuration now centralized in .env files</li> <li>Enhanced error handling and user feedback</li> <li>Improved performance with parallel processing</li> </ul>"},{"location":"reference/changelog/#1x-legacy-scripts","title":"[1.x] - Legacy Scripts","text":"<ul> <li>Individual Python scripts for various AWS operations</li> <li>Basic argparse-based CLI interfaces</li> <li>Direct boto3 usage without abstraction</li> <li>Manual configuration management</li> </ul>"},{"location":"reference/cli/","title":"CLI Reference","text":"<p>Complete command-line interface reference for AWS Cloud Utilities v2.</p>"},{"location":"reference/cli/#global-options","title":"Global Options","text":"<p>These options are available for all commands:</p> Option Short Environment Variable Default Description <code>--profile</code> <code>-p</code> <code>AWS_PROFILE</code> <code>default</code> AWS profile to use <code>--region</code> <code>-r</code> <code>AWS_DEFAULT_REGION</code> <code>us-east-1</code> AWS region <code>--output</code> <code>-o</code> <code>AWS_OUTPUT_FORMAT</code> <code>table</code> Output format <code>--verbose</code> <code>-v</code> <code>VERBOSE</code> <code>false</code> Enable verbose output <code>--debug</code> <code>-d</code> <code>DEBUG</code> <code>false</code> Enable debug mode <code>--config</code> <code>-c</code> <code>CONFIG_FILE</code> <code>~/.aws-cloud-utilities.env</code> Configuration file <code>--version</code> Show version and exit <code>--help</code> <code>-h</code> Show help and exit"},{"location":"reference/cli/#output-formats","title":"Output Formats","text":"Format Description Use Case <code>table</code> Rich formatted tables Human-readable output <code>json</code> JSON format Automation and scripting <code>yaml</code> YAML format Configuration files <code>csv</code> CSV format Spreadsheet import"},{"location":"reference/cli/#command-structure","title":"Command Structure","text":"<pre><code>aws-cloud-utilities [GLOBAL-OPTIONS] &lt;service&gt; &lt;operation&gt; [OPTIONS]\n</code></pre>"},{"location":"reference/cli/#services-and-commands","title":"Services and Commands","text":""},{"location":"reference/cli/#account","title":"account","text":"<p>Account information and management</p> <pre><code>aws-cloud-utilities account &lt;command&gt; [options]\n</code></pre> Command Description <code>info</code> Get AWS account information and summary <code>contact-info</code> Get AWS account contact information <code>detect-control-tower</code> Detect AWS Control Tower or Landing Zone <code>regions</code> List all available AWS regions <code>service-regions</code> List regions for a specific AWS service <code>limits</code> Get AWS service limits and usage quotas <code>validate</code> Validate AWS credentials and permissions"},{"location":"reference/cli/#awsconfig","title":"awsconfig","text":"<p>AWS Config service operations</p> <pre><code>aws-cloud-utilities awsconfig &lt;command&gt; [options]\n</code></pre> Command Description <code>download</code> Download AWS Config files from S3 and convert <code>show-rules</code> Show AWS Config rules with details <code>list-rules</code> List AWS Config rules <code>compliance-status</code> Show compliance status of resources <code>compliance-checker</code> Check compliance against rules"},{"location":"reference/cli/#bedrock","title":"bedrock","text":"<p>Amazon Bedrock AI/ML operations</p> <pre><code>aws-cloud-utilities bedrock &lt;command&gt; [options]\n</code></pre> Command Description <code>list-models</code> List Amazon Bedrock foundation models <code>model-details</code> Get detailed information about a model <code>list-custom-models</code> List custom/fine-tuned models <code>list-model-jobs</code> List model training and customization jobs <code>regions</code> List regions where Bedrock is available"},{"location":"reference/cli/#billing","title":"billing","text":"<p>AWS Billing &amp; Cost Management</p> <pre><code>aws-cloud-utilities billing &lt;command&gt; [options]\n</code></pre> Command Description <code>cur-list</code> List existing Cost and Usage Reports <code>cur-details</code> Get detailed information about a CUR report <code>cur-create</code> Create a new Cost and Usage Report <code>cur-delete</code> Delete an existing Cost and Usage Report <code>cur-validate-bucket</code> Validate S3 bucket for CUR delivery"},{"location":"reference/cli/#cloudformation","title":"cloudformation","text":"<p>CloudFormation stack management</p> <pre><code>aws-cloud-utilities cloudformation &lt;command&gt; [options]\n</code></pre> Command Description <code>backup</code> Backup stacks and templates across regions <code>list-stacks</code> List CloudFormation stacks with status <code>stack-details</code> Get detailed information about a stack"},{"location":"reference/cli/#cloudfront","title":"cloudfront","text":"<p>CloudFront distribution management</p> <pre><code>aws-cloud-utilities cloudfront &lt;command&gt; [options]\n</code></pre> Command Description <code>update-logging</code> Enable logging and setup CloudWatch alarms <code>list-distributions</code> List CloudFront distributions <code>distribution-details</code> Get detailed distribution information <code>invalidate</code> Create cache invalidation"},{"location":"reference/cli/#costops","title":"costops","text":"<p>Cost optimization and pricing tools</p> <pre><code>aws-cloud-utilities costops &lt;command&gt; [options]\n</code></pre> Command Description <code>pricing</code> Get AWS pricing information for services <code>cost-analysis</code> Analyze costs using Cost Explorer <code>ebs-optimization</code> Analyze EBS volume optimization <code>usage-metrics</code> Collect usage metrics from CloudWatch <code>spot-pricing</code> Get EC2 Spot instance pricing <code>spot-analysis</code> Analyze Spot instance savings"},{"location":"reference/cli/#ecr","title":"ecr","text":"<p>Elastic Container Registry operations</p> <pre><code>aws-cloud-utilities ecr &lt;command&gt; [options]\n</code></pre> Command Description <code>copy-image</code> Copy Docker image to AWS ECR <code>list-repositories</code> List all ECR repositories <code>list-images</code> List images in an ECR repository <code>create-repository</code> Create a new ECR repository <code>delete-repository</code> Delete an ECR repository <code>get-login</code> Get ECR login credentials"},{"location":"reference/cli/#iam","title":"iam","text":"<p>IAM management and auditing</p> <pre><code>aws-cloud-utilities iam &lt;command&gt; [options]\n</code></pre> Command Description <code>audit</code> Audit IAM roles and policies, save locally <code>list-roles</code> List all IAM roles with details <code>list-policies</code> List IAM policies <code>role-details</code> Get detailed information about a role <code>policy-details</code> Get detailed information about a policy"},{"location":"reference/cli/#inventory","title":"inventory","text":"<p>Resource discovery and inventory</p> <pre><code>aws-cloud-utilities inventory &lt;command&gt; [options]\n</code></pre> Command Description <code>scan</code> Comprehensive resource inventory scan <code>workspaces</code> List WorkSpaces instances and configs <code>services</code> Discover available AWS services <code>download-all</code> Download all resource data in bulk"},{"location":"reference/cli/#logs","title":"logs","text":"<p>CloudWatch logs management</p> <pre><code>aws-cloud-utilities logs &lt;command&gt; [options]\n</code></pre> Command Description <code>list-groups</code> List CloudWatch log groups with details <code>download</code> Download logs from CloudWatch <code>set-retention</code> Set or update log retention policies <code>delete-group</code> Delete log groups (with confirmation) <code>combine</code> Combine logs from multiple sources <code>aggregate</code> Aggregate logs from S3 (CloudTrail, etc.)"},{"location":"reference/cli/#networking","title":"networking","text":"<p>Network utilities and analysis</p> <pre><code>aws-cloud-utilities networking &lt;command&gt; [options]\n</code></pre> Command Description <code>ip-ranges</code> Download and analyze AWS IP ranges <code>ip-summary</code> Show summary statistics of IP ranges"},{"location":"reference/cli/#rds","title":"rds","text":"<p>RDS database management</p> <pre><code>aws-cloud-utilities rds &lt;command&gt; [options]\n</code></pre> Command Description <code>troubleshoot-mysql</code> Troubleshoot MySQL RDS connections <code>list-instances</code> List RDS instances with details"},{"location":"reference/cli/#s3","title":"s3","text":"<p>S3 bucket operations</p> <pre><code>aws-cloud-utilities s3 &lt;command&gt; [options]\n</code></pre> Command Description <code>list-buckets</code> List S3 buckets with details <code>create-bucket</code> Create a new S3 bucket <code>download</code> Download objects from S3 buckets <code>nuke-bucket</code> Delete all objects and versions from bucket <code>bucket-details</code> Get detailed bucket configuration <code>delete-versions</code> Delete specific object versions <code>restore-objects</code> Restore objects from Glacier/Deep Archive"},{"location":"reference/cli/#security","title":"security","text":"<p>Security auditing and tools</p> <pre><code>aws-cloud-utilities security &lt;command&gt; [options]\n</code></pre> Command Description <code>metrics</code> Collect security metrics (WAF, GuardDuty, etc.) <code>create-certificate</code> Create SSL/TLS certificates in ACM <code>list-certificates</code> List SSL/TLS certificates"},{"location":"reference/cli/#stepfunctions","title":"stepfunctions","text":"<p>Step Functions workflow management</p> <pre><code>aws-cloud-utilities stepfunctions &lt;command&gt; [options]\n</code></pre> Command Description <code>list</code> List all Step Functions state machines <code>describe</code> Get detailed information about state machine <code>execute</code> Execute a state machine <code>list-executions</code> List executions of a state machine <code>logs</code> View logs for state machine executions"},{"location":"reference/cli/#support","title":"support","text":"<p>AWS support tools</p> <pre><code>aws-cloud-utilities support &lt;command&gt; [options]\n</code></pre> Command Description <code>check-level</code> Check AWS support level <code>severity-levels</code> List available support severity levels <code>cases</code> List support cases <code>services</code> List services covered by support plan <p>Trusted Advisor Commands:</p> Command Description <code>cost-savings</code> Get Trusted Advisor cost optimization recommendations"},{"location":"reference/cli/#waf","title":"waf","text":"<p>Web Application Firewall management</p> <pre><code>aws-cloud-utilities waf &lt;command&gt; [options]\n</code></pre> Command Description <code>list</code> List all Web ACLs (REGIONAL or CLOUDFRONT) <code>stats</code> Get CloudWatch metrics for Web ACLs <code>troubleshoot</code> Troubleshoot WAF blocks and issues"},{"location":"reference/cli/#common-option-patterns","title":"Common Option Patterns","text":""},{"location":"reference/cli/#filtering-options","title":"Filtering Options","text":"<p>Many commands support filtering:</p> <pre><code>--service SERVICE          # Filter by AWS service\n--region REGION           # Filter by region\n--tag KEY=VALUE          # Filter by tag\n--resource-type TYPE     # Filter by resource type\n--status STATUS          # Filter by status\n</code></pre>"},{"location":"reference/cli/#time-based-options","title":"Time-based Options","text":"<p>Commands dealing with time-based data:</p> <pre><code>--start-time TIME        # Start time for analysis\n--end-time TIME         # End time for analysis\n--age-threshold DAYS    # Age threshold in days\n--lookback-period DAYS  # Lookback period\n</code></pre>"},{"location":"reference/cli/#output-control-options","title":"Output Control Options","text":"<p>Control output behavior:</p> <pre><code>--max-results NUMBER     # Maximum number of results\n--sort-by FIELD         # Sort results by field\n--ascending             # Sort in ascending order\n--descending            # Sort in descending order\n--include-details       # Include detailed information\n--summary-only          # Show summary only\n</code></pre>"},{"location":"reference/cli/#environment-variables","title":"Environment Variables","text":"<p>All CLI options can be set via environment variables:</p> <pre><code># AWS Configuration\nexport AWS_PROFILE=production\nexport AWS_DEFAULT_REGION=us-west-2\nexport AWS_OUTPUT_FORMAT=json\n\n# Tool Configuration\nexport VERBOSE=true\nexport DEBUG=false\nexport WORKERS=8\nexport CONFIG_FILE=/path/to/config.env\n\n# Logging\nexport LOG_LEVEL=INFO\nexport LOG_FILE=/var/log/aws-cloud-utilities.log\n</code></pre>"},{"location":"reference/cli/#configuration-file","title":"Configuration File","text":"<p>Create <code>~/.aws-cloud-utilities.env</code>:</p> <pre><code># AWS Settings\nAWS_PROFILE=default\nAWS_DEFAULT_REGION=us-east-1\nAWS_OUTPUT_FORMAT=table\n\n# Performance\nWORKERS=4\nTIMEOUT=30\nRETRY_ATTEMPTS=3\n\n# Logging\nLOG_LEVEL=INFO\nVERBOSE=false\nDEBUG=false\n\n# Output\nSHOW_PROGRESS=true\nCOLOR_OUTPUT=true\nTABLE_MAX_WIDTH=120\n</code></pre>"},{"location":"reference/cli/#exit-codes","title":"Exit Codes","text":"Code Description 0 Success 1 General error 2 Configuration error 3 AWS authentication error 4 AWS permission error 5 Resource not found 6 Invalid input"},{"location":"reference/cli/#examples","title":"Examples","text":""},{"location":"reference/cli/#basic-usage","title":"Basic Usage","text":"<pre><code># Get account information\naws-cloud-utilities account info\n\n# List resources with specific output format\naws-cloud-utilities inventory resources --output json\n\n# Security audit with verbose output\naws-cloud-utilities --verbose security audit\n</code></pre>"},{"location":"reference/cli/#advanced-usage","title":"Advanced Usage","text":"<pre><code># Multi-region resource inventory\naws-cloud-utilities inventory resources --all-regions --output csv &gt; resources.csv\n\n# Cost optimization for specific service\naws-cloud-utilities costops analyze --service ec2 --start-date 2024-01-01\n\n# Security audit with specific profile and region\naws-cloud-utilities --profile prod --region us-west-2 security blue-team-audit\n</code></pre>"},{"location":"reference/cli/#automation-examples","title":"Automation Examples","text":"<pre><code># Daily security check\naws-cloud-utilities security audit --severity high --output json &gt; security-$(date +%Y%m%d).json\n\n# Weekly cost analysis\naws-cloud-utilities costops analyze --group-by service --output yaml &gt; weekly-costs.yaml\n\n# Resource health monitoring\naws-cloud-utilities inventory health-check --unhealthy-only --output table\n</code></pre>"},{"location":"reference/cli/#help-system","title":"Help System","text":""},{"location":"reference/cli/#getting-help","title":"Getting Help","text":"<pre><code># General help\naws-cloud-utilities --help\n\n# Service help\naws-cloud-utilities account --help\n\n# Command help\naws-cloud-utilities account info --help\n\n# Show version\naws-cloud-utilities --version\n</code></pre>"},{"location":"reference/cli/#help-output-format","title":"Help Output Format","text":"<p>Help output includes:</p> <ul> <li>Command description</li> <li>Usage syntax</li> <li>Available options</li> <li>Examples</li> <li>Related commands</li> </ul>"},{"location":"reference/cli/#debugging","title":"Debugging","text":""},{"location":"reference/cli/#debug-mode","title":"Debug Mode","text":"<p>Enable debug mode for troubleshooting:</p> <pre><code>aws-cloud-utilities --debug account info\n</code></pre> <p>Debug mode shows: - Configuration loading - AWS API calls - Error stack traces - Performance timing</p>"},{"location":"reference/cli/#verbose-mode","title":"Verbose Mode","text":"<p>Enable verbose output for detailed information:</p> <pre><code>aws-cloud-utilities --verbose inventory resources\n</code></pre> <p>Verbose mode shows: - Progress indicators - Detailed status messages - Resource processing information - Summary statistics</p>"}]}